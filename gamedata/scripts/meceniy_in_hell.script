-- -*- mode: lua; coding: windows-1251-dos -*-
--\\*Модуль "Время Ужаса" ..Меченый(Стрелок)
-- подрихтовано by sapsan
--[[
--\\*Особенности
1)Реакция непесей рандомна,кроме квестовых нпс,
2)Выдача рандомного сообщения,
3)Эффекты выброса,
4)Рандомно проигрываемый звук,
5)Рандомно проигрывающийся эффект,
6)Спавн рядом с игроком(пришлось уменьшить дистанцию запрета спавна АМК,см. se_monster.script)//
7)Если ГГ спит ,то будим его
8)Вероятность удачи запуска установки 70/30
]]
-- Основная  Функция
local remove_horror = true --Удаление Монстров ,после Часа Ужаса

local tabl_npc_ignore = { -- неписи, которые не паникуют
	["Sak"] = true,
	["mil_stalker0012"] = true,
	["yantar_ecolog_general"] = true,
	["mil_freedom_member0021"] = true,
	["doktor"] = true,
	["doktor1"] = true,
 	["dolgovazyi"] = true,
	["bar_docent"] = true,
	["val_bandit_krisyk"] = true,
	["esc_wolf"] = true,
	["esc_fanat"] = true,
	["esc_fox"] = true,
 	["esc_ranger"] = true,
 	["esc_dan"] = true,
	["esc_soldier_commander"] = true,
	["esc_soldier_blockpost_commander"] = true,
 	["agr_krot"] = true,
 	["agr_nii_commander"] = true,
	["agr_soldier_sniper_default1"] = true,
	["bar_bar_osvedomitel"] = true,
 	["bar_bar_hunter"] = true,
 	["bar_bar_drunk_dolg"] = true,
 	["bar_bar_lisiy"] = true,
	["bar_dolg_leader"] = true,
 	["bar_dolg_petrenko"] = true,
 	["bar_dolg_ivancov"] = true,
 	["bar_dolg_guard_commander"] = true,
	["bar_stalker_freeman"] = true,
	["val_bandit_borov"] = true,
 	["val_dolg_prisoner"] = true,
 	["gar_seriy"] = true,
	["gar_dolg_blokpost_commander"] = true,
 	["gar_stalker_flame_quest"] = true
}

local tabl_reaction = {
"hide_s_left",
"hide_s_right",
"hide_no_wpn",
"psy_pain",
"psycho_pain"
}

local tabl_news = {
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Ух-ты!!! А мне это нравится - как в DOOM-е!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Э-э-э!!! Вы кто?! Что вам надо?! А ну пошли отсюда!!! За пустыми бутылками уже и в Зону пришли!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Все в укрытия!!! Началось!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]На ловца и зверь бежит!!! Ха-ха-ха!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Э-э-э... Сол-сол-солдат... М-м-м-мочииии....\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Зомби!!! Они повсюду!!! Круши их!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Меченый!!! Брат!!! Помогай!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Народ!!! Зомби отвсюду лезут!!! Выручайте, братцы!!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Бойцы, это очередной шанс доказать, что мы лучшие! Круши нечисть!!\n",
	"%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Братья... Кроши уродов...\n"
}

local tabl_mess_begin = {
	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Санёк, а что это за сирена?\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]В следующий раз узнаешь...\n"},

	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Кто не спрятался - я не виноват! Раз, два, три, четыре, пять - я иду включать...\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Опять включалка барахлит...\n"},

	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Лаборант Сидоров, вы сегодня за доктора! Включайте установку!\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Лаборант Сидоров! Опять спирт не по назначению использовали ?!\n"},

	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Доктор, пора... Включайте...\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Доктор, в чём дело? Почему не включаете? Опять ваш коллайдер заело?!\n"},

	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Лейтенант, уводите людей, если хотите остаться при всех солдатах... Сейчас её включат...\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Лейтенант, у нас тут поломка - вам и вашим людям повезло.\n"},
	 
	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Так, всё, мы не успеваем... Напишите за меня жене!\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Пронесло... Жене сам напишу... Урррроды...\n"},
	 
	{normal = "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Хех... Сегодня опять этих ворюг станет меньше... Доктор... Мы готовы\n",
	 fail 	= "%c[255,160,160,160]ОБЩИЙ КАНАЛ:\\n%c[255,255,128,128]Доктор! Да сколько можно?! Опять неурожай!\n"}
}

local tabl_sound_spawn = {
	[[ambient\random\rnd_scr4]],
	[[ambient\random\rnd_moan5]],
	[[ambient\random\rnd_scr10]],
	[[ambient\random\rnd_fallscream]],
	[[ambient\random\rnd_ratchant]],
	[[ambient\random\rnd_respawn]],
	[[ambient\random\rnd_moan1]]
}

local tabl_pp_effectors = {
	"dead_zone.ppe",
	"deadcity_wake.ppe",
	"deadcity_wake1.ppe",
	"monolith_off.ppe",
	"radar_psi.ppe",
	"snd_shock.ppe",
	"psi.ppe",
	"vibros.ppe",
	"vibros_p.ppe"
}

local tabl_horror_by_level = {-- Нету уровня - нету ЧУ. На уровне указано среднее количество спавна. Чем ближе к ЧАЭС, тем немного больше
	l01_escape = {
		spawn = 20,
		actor_hit_power = {radiation = 0.0008, shock = 0.00001}
	},
	l02_garbage = {
		spawn = 20,
		actor_hit_power = {radiation = 0.0005, shock = 0.00001}
	},
	l03_agroprom = {
		spawn = 20,
		actor_hit_power = {radiation = 0.001, shock = 0.00001}
	},
	l06_rostok = {
		spawn = 25,
		actor_hit_power = {radiation = 0.002, shock = 0.00001}
	},
	l04_darkvalley = {
		spawn = 25,
		actor_hit_power = {radiation = 0.0012, shock = 0.00001}
	},
	l07_military = {
		spawn = 30,
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l08_yantar = {
		spawn = 33,
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l10_radar = {
		spawn = 35,
		actor_hit_power = {radiation = 0.005, shock = 0.0004}
	},
	l11_pripyat = {
		spawn = 40,
		actor_hit_power = {radiation = 0.01, shock = 0.0007}
	}
}

local random_news_number = 1
horror_begin_time = { h = 21, m = 54 }
local horror_time = { h = 22, m =  0 }
horror_end_time   = { h = 22, m = horror_time.m + 7 }
local game_reloaded = true -- во время ЧУ после перезагрузки игры спецэффекты будут продолжены


function attach( sm )
  sm:subscribe({ signal = "on_spawn", fun = this.on_spawn })
end


function on_spawn()
  local tname = script_name() .. ".horrortime_cleanup1"
  if ogse_st_mgr.timer_exists( tname ) then
    subscribe_update()
  end
end


function horrortime_begin( startup )
--  ogse_st_mgr.delayed_fun_start( script_name() .. ".horrortime_begin" )
--    :set_HMS_of_day( horror_begin_time.h, horror_begin_time.m, 0 )
--    :init( script_name() .. ".horrortime_begin" )
--    :start()
  if not startup then
    horortime()
  end
end


function horrortime_stop()
  local tname = script_name() .. ".horrortime_begin"
  if ogse_st_mgr.timer_exists( tname ) then
    ogse_st_mgr.get_timer( tname ):stop()
  end
end


local update_signal
function subscribe_update()
  update_signal = { signal = "on_update", fun = this.on_update }
  ogse_signals.get_mgr():subscribe( update_signal )
end

local update_t
function on_update()
  if update_t and update_t > time_global() then return end
  horortime()
  update_t = time_global() + 1000
end


local last_sound_t, panic_minute
function horortime()
  if meceniy_utils.hell == 0 or not tabl_horror_by_level[ level.name() ] then
    return
  end
  if db.actor:has_info( "pre_blowout" ) then return end
  if ogse_sleep_mgr.is_sleep_active() then return end

  local tname = script_name() .. ".horrortime_cleanup1"
  if not ogse_st_mgr.timer_exists( tname ) then
    ogse_st_mgr.delayed_fun_start( tname )
      :set_HMS_of_day( horror_end_time.h, horror_end_time.m, 0 )
      :init( tname )
      :start( true )
    subscribe_update()
  end

  local timeh = level.get_time_hours()
  local timem = level.get_time_minutes()

  --побудка, сирена и автосейв
  if timeh == horror_begin_time.h and timem == horror_begin_time.m then
    if db.actor:dont_has_info( "horror_time_begin" ) then
      db.actor:give_info_portion( "horror_time_begin" )
      local snd_obj = xr_sound.get_safe_sound_object(
        [[meceniy\hell\hellsilent_hill_alarm]]
      )
      snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 2.5 )
      last_sound_t = time_global()
    end
  end

  -- звук обратного отсчета
  if
    timeh == horror_begin_time.h
    and timem >= horror_begin_time.m
    and timem <= horror_begin_time.m + 2
    and time_global() >= ( last_sound_t or 0 ) + 30000
  then
    local snd_obj = xr_sound.get_safe_sound_object(
      [[meceniy\hell\hellsilent_hill_alarm]]
    )
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 2.5 )
    last_sound_t = time_global()
  end

  -- неписи становятся в стойку с выставленным стволом
  if
    timeh == horror_begin_time.h
    and timem >= horror_begin_time.m
    and timem <= 59
  then
    if panic_minute ~= timem then
      panic_minute = timem
      -- тревожим неписей только на территории, где есть ЧУ
      if tabl_horror_by_level[ level.name() ] then
        for k, is_npc in pairs ( db.creature ) do
          local npc = level.object_by_id( k )
          if npc and npc:alive() and not tabl_npc_ignore[ npc:name() ] then
            local npc_position = npc:position()
            local position     = vector():set(
              npc_position.x + math.random( -5, 5 ),
              npc_position.y,
              npc_position.z + math.random( -5, 5 )
            )
            state_mgr.set_state(
              npc, "hide_s_right", nil, nil, { look_position = position }
            )
          end
        end
      end
    end
  end

  --сообщение о старте
  if
    timeh == horror_begin_time.h
    and timem == horror_begin_time.m + 1
  then
    if db.actor:dont_has_info( "random_pre_news" ) then
      db.actor:give_info_portion( "random_pre_news" )
      random_news_number = math.random( table.getn( tabl_mess_begin ) )
      presoobj()
    end
  end
	
  --включение установки или её сбой
  if timeh == horror_time.h and timem == horror_time.m then
    if db.actor:dont_has_info( "horror" ) then
      game_reloaded = false
      db.actor:give_info_portion( "horror" )
      -- расслабляем неписей только на территории, где есть ЧУ
      if tabl_horror_by_level[ level.name() ] then
        for k, is_npc in pairs( db.creature ) do
          local npc = level.object_by_id( k )
          if npc and npc:alive() and not tabl_npc_ignore[ npc:name() ] then
            state_mgr.set_state(
              npc, "idle", nil, nil, nil, { animation = true }
            )
          end
        end
      end
      if
        dsh.get_next_random(
          script_name() .. ".horortime.rnd"
        ) <= 0.3
        -- удача запуска 30/70 = 0.3
      then
        local level_name = level.name()
        local level_info = tabl_horror_by_level[ level_name ]
        if level_info then
          level.add_cam_effector(
            "camera_effects\\earthquake.anm", 77777775, true, ""
          )
          level.add_pp_effector( "dead_zone.ppe",   77777774, false )
          level.add_pp_effector( "nano.ppe",        77777773, false )
          level.add_pp_effector( "nightvision.ppe", 77777772, false )
          level.add_pp_effector( "psy_antenna.ppe", 77777771, true, "" )
          effects()
          news()
          horrorspawn( level_name )
          hit_actor( level_name )
          spawn_phantom()
          horror_sound()
          random_reaction()
        end
      else -- неудачный запуск
        db.actor:give_info_portion( "horror_fail" )
        presoobjFAIL()
      end
    end
  end

  -- перезапуск спецэффектов в случае перезапуска игры
  if
    timeh == horror_time.h
    and timem >= horror_time.m
    and timem < horror_end_time.m
    and game_reloaded
    and db.actor:dont_has_info( "horror_fail" )
  then
    game_reloaded = false
    -- возвращаем спецэффекты только на территории, где есть ЧУ
    if tabl_horror_by_level[ level.name() ] then
      level.add_cam_effector(
        "camera_effects\\earthquake.anm", 77777775, true, ""
      )
      level.add_pp_effector( "psy_antenna.ppe", 77777771, true, "" )
      horror_sound()
    end
  end
end


function horrortime_cleanup1()
  if update_signal then
    ogse_signals.get_mgr():unsubscribe( update_signal )
    update_signal = nil
  end
  if db.actor:dont_has_info( "horror_time_end" ) then
    db.actor:give_info_portion( "horror_time_end" )
    if db.actor:dont_has_info( "horror_fail" ) then
      -- вспышка окончания ЧУ только на территории, где есть ЧУ
      if tabl_horror_by_level[ level.name() ] then
        level.add_pp_effector( "teleport.ppe", 77777777, false )
      end
      level.remove_pp_effector( 77777774 )
      level.remove_pp_effector( 77777773 )
      level.remove_pp_effector( 77777772 )
      level.remove_pp_effector( 77777771 )
      level.remove_pp_effector( 77777776 )
      level.remove_cam_effector( 77777775 )
      remove_horror_mutant()
      archievements.acv_count_2event(
        "acv_hell", 15, "Неустрашимый", "acv_hell2", 50, "Стивен Кинг"
      )
    end
  end
  ogse_st_mgr.delayed_fun_start( script_name() .. ".horrortime_cleanup2" )
    :set_HMS_of_day( horror_end_time.h, horror_end_time.m + 1, 0 )
    :init( script_name() .. ".horrortime_cleanup2" )
    :start( true )
end


function horrortime_cleanup2()
  db.actor:disable_info_portion( "horror_time_begin" )
  db.actor:disable_info_portion( "random_pre_news" )
  db.actor:disable_info_portion( "horror" )
  if db.actor:has_info( "horror_fail" ) then
    db.actor:disable_info_portion( "horror_fail" )
    level.remove_pp_effector( 77777777 )
  end
  db.actor:disable_info_portion("horror_time_end")
end


-- Выбор Реакции НПС
function random_reaction()
  for k, is_npc in pairs ( db.creature ) do
    if is_npc then
      local npc = level.object_by_id( k )
      if npc and npc:alive() and not tabl_npc_ignore[ npc:name() ] then
        state_mgr.set_state(
          npc, tabl_reaction[ math.random( table.getn( tabl_reaction ) ) ]
        )
      end
    end
  end
end


-- Выбираем Рандомное Сообщение о ЧУ
function news()
  news_manager.send_tip(
    db.actor,
    tabl_news[ math.random( table.getn( tabl_news ) ) ],
    nil, nil, 5000
  )
end


-- Выбираем Рандомное Сообщение перед часом ужаса
function presoobj()
  news_manager.send_tip(
    db.actor, tabl_mess_begin[ random_news_number ].normal, nil, nil, 5000
  )
end


-- Выбираем Рандомное Сообщение перед часом ужаса при неудачном старте
function presoobjFAIL()
  news_manager.send_tip(
    db.actor, tabl_mess_begin[ random_news_number ].fail, nil, nil, 5000
  )
end


-- Выбираем Рандомный звук
function horror_sound()
  local snd_obj = xr_sound.get_safe_sound_object(
    tabl_sound_spawn[ math.random( table.getn( tabl_sound_spawn ) ) ]
  )
  snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 2.5 )
end


-- Наносим хит с учётом территории
function hit_actor( level_name )
  local horror_hit = hit()
  horror_hit.direction = vector():set( 0, 0, 0 )
  horror_hit.impulse   = 0.3
  horror_hit.power     = 0.4
  horror_hit.type      = hit.telepatic
  horror_hit.draftsman = db.actor
  horror_hit:bone( "bip01_spine" )
  db.actor:hit( horror_hit )
  horror_hit.impulse   = 0
  horror_hit.power     =
    tabl_horror_by_level[ level_name ].actor_hit_power.radiation
  horror_hit.type      = hit.radiation
  db.actor:hit( horror_hit )
  horror_hit.power     =
    tabl_horror_by_level[ level_name ].actor_hit_power.shock
  horror_hit.type      = hit.shock
  db.actor:hit( horror_hit )
end


-- Выбор Эффектора
function effects()
  level.add_pp_effector(
    tabl_pp_effectors[ math.random( table.getn( tabl_pp_effectors ) ) ],
    77777776, false
  )
end


-- Основной Спавн с Учётом Территории
function horrorspawn( level_name )
  local ap = db.actor:position()
  local lv = db.actor:level_vertex_id()
  local gv = db.actor:game_vertex_id()
  local cnt = math.random(
    tabl_horror_by_level[ level_name ].spawn - 2,
    tabl_horror_by_level[ level_name ].spawn + 2
  )
  for i = 1, cnt do
    -- секци для ЧУ zombie_hell1 ... zombie_hell15
    alife():create(
      "zombie_hell" .. tostring( math.random( 15 ) ),
      vector():set(
        ap.x + math.random( -50, 50 ),
        ap.y,
        ap.z + math.random( -50, 50 )
      ),
      lv, gv
    )
  end
end


-- Фантомы 
function spawn_phantom()
  local a_pos = db.actor:position()
  for i = 1, math.random( 5, 15 ) do
    local pos = vector():set(
      math.random( -30, 30 ) + a_pos.x,
      a_pos.y + 2.5 * math.random(),
      math.random( -30, 30 ) + a_pos.z
    )
    phantom_manager.spawn_phantom( pos )
  end
end


-- уборка оставшихся живых монстров
function remove_horror_mutant()
  if not remove_horror then return end
  for k, is_npc in pairs ( db.creature ) do
    if not is_npc then
      local horror_m = level.object_by_id( k )
      if
        horror_m and horror_m:alive()
        and string.find( horror_m:name(), "_hell" )
      then
        horror_m:kill( horror_m )
        alife():release( alife():object( horror_m:id() ) )
      end
    end
  end
end


-- функции для диалога Захара
local zombi_arts = {
  "bezoar",
  "af_cry_1",
  "af_cry_2",
  "af_babka_2",
  "af_babka_3",
  "af_dik_2",
  "af_dik_3",
  "af_spirit_2",
  "af_spirit_3",
  "af_armor_2",
  "af_armor_3",
  "af_pudd_2",
  "af_pudd_3",
  "af_kol_2",
  "af_kol_3"
}

local zombi_ammo = {
  "grenade_f1",
  "grenade_rgd5",
  "ammo_vog-25",
  "ammo_vog-25p",
  "ammo_m209"
}

function have_10_hand()
  return new_dialog.item_much( "mutant_zombie_hand", 10 )
end

function nagrad_10_hand()
  sak.out_item_namber( "mutant_zombie_hand", 10 )
  local rnd_art = dsh.get_next_random(
    script_name() .. ".nagrad_10_hand.rnd", table.getn( zombi_arts )
  )
  local arts = sak.create_items_actor( zombi_arts[ rnd_art ], 1 )
  local rnd_ammo = dsh.get_next_random(
    script_name() .. ".nagrad_10_hand.rnd", table.getn( zombi_ammo )
  )
  sak.create_items_actor( zombi_ammo[ rnd_ammo ], 2 )
  relation_registry.change_community_goodwill( "green", db.actor:id(), 10 )
end
