-- -*- mode: lua; coding: windows-1251-dos -*-
--[[-----------------------------------------------------------------------------
Игнорирование врагов
Чугай Александр
-------------------------------------------------------------------------------]]


function attach( sm )
  sm:subscribe({ signal = "on_npc_enemy_callback", fun = this.enemy_callback })
end


function enemy_callback( obj, enemy, result )
  local st = db.storage[ obj:id() ].combat_ignore
  if st and st.enabled then
    local res = st.action:enemy_callback( obj, enemy )
    table.insert( result, res )
    if not res then return true end
  end
end


function is_enemy( obj, enemy_st, st )
  local valid, enemy = validate_enemy_object( enemy_st )
  if valid == false then return false end

  if obj:critically_wounded() then
    return true
  end

  if not st then
    st = db.storage[ obj:id() ].combat_ignore
    if not st then
      return true
    end
  end
  if not st.enabled then return true end

  local overrides = xr_logic.generic_scheme_overrides( obj )
  db.storage[ obj:id() ].enemy = enemy
  if
    overrides
    and overrides.combat_ignore
    and db.actor
    and xr_logic.pick_section_from_condlist(
      db.actor, obj, overrides.combat_ignore.condlist
    ) ~= nil
  then
    obj:enable_memory_object( enemy, false )
    return false
  end

  return true
end


class "action_process_enemy"
function action_process_enemy:__init( obj, storage )
  self.object = obj
  self.st     = storage
end


function action_process_enemy:enemy_callback( obj, enemy )
  return is_enemy( obj, enemy, self.st )
end


function action_process_enemy:hit_callback( obj, amount, local_direction, who, bone_index )
  if not who then return end
  if amount == 0 then
    -- Кто-то стрельнул в воздух
    return
  end
  if who:id() == db.actor:id() then
    local overrides = xr_logic.generic_scheme_overrides( obj )
    if not overrides or not overrides.combat_ignore_keep_when_attacked then
      self.st.enabled = false
    end
  end
end


function add_to_binder( npc, ini, scheme, section, storage )
  local new_action = this.action_process_enemy( npc, storage )
  storage.action = new_action
end


function set_combat_ignore_checker( npc, ini, scheme, section )
  local st = xr_logic.assign_storage_and_bind( npc, ini, scheme, section )
  st.enabled = true
  --npc:set_enemy_callback( st.action.enemy_callback, st.action )
  -- Подписываемся на hit callback-и:
  xr_logic.subscribe_action_for_events( npc, st, st.action )
end


function disable_scheme( npc, scheme )
  --npc:set_enemy_callback()
  -- Отписываемся от hit callback. Это делать обязательно, потому что
  -- иначе при переключении на другой набор схем, в котором нет
  -- перехвата боя, продолжится вызываться callback в старом
  -- подписанном action-е.
  local st = db.storage[ npc:id() ][ scheme ]
  if st then
    st.enabled = false
    xr_logic.unsubscribe_action_from_events( npc, st, st.action )
  end
end
