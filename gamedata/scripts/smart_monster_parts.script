-- -*- mode: lua; coding: windows-1251-dos -*-
-- Сделанно для "ОП-2" ( новые монстры ), и "ОП-2 + OGSE 0.6.9.3 engine by dsh"
-- Взято из OGSE 0.6.9.3. Старый код под коментами.
-- Добавление новых мутантов: BlooderDen 
-- Полная переработка схемы и работы скрипта и основная работа над ним: dsh
-- Огромное спасибо основателям умного выпадения( предположительно Руся, Nekt,
-- Anvil, HIGHLANDER, V92 ) за идею и первые версии, и OGSE Team.
-- Спасибо dsh за полную переработку и удобство кода, в целях его возможного
-- дальнейшего разширения любыми новыми мутантами.

local table_mobs = {
  {
    [ "type"       ] = "bloodsucker",
    [ "spawn_part" ] = "mutant_krovosos_jaw",
    [ "dont_spawn_if_object" ] = "mutant_krovosos_red_jaw",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 14, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31 },
  },
  {
    [ "type"       ] = "pseudodog",
    [ "spawn_part" ] = "mutant_psevdodog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 32, 33, 34 },
  },
  {
    [ "type"       ] = "psy_dog",
    [ "spawn_part" ] = "mutant_psevdodog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 32, 33, 34 },
  },
  {
    [ "type"       ] = "m_dog_e",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_weak",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_normal",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_strong",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_habaruch",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_green",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_sil_hill",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_skeleton",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_zombie",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_wolf",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "tushkano",
    [ "spawn_part" ] = "mutant_face_tushkano",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 24, 25 },
  },
  {
    [ "type"       ] = "flesh",
    [ "spawn_part" ] = "mutant_flesh_eye",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 13 },
  },
  {
    [ "type"       ] = "cat",
    [ "ignore_similar" ] = { "cat_kulon", "cat_quest" },
    [ "spawn_part" ] = "mutant_tail_cat",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 27, 28, 29 },
  },
  {
    [ "type"       ] = "burer",
    [ "spawn_part" ] = "mutant_burer_hand",
    [ "dont_spawn_if_object" ] = "mutant_burer_red_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 22, 24, 26, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "snork",
    [ "spawn_part" ] = "mutant_snork_leg",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },
  },
  {
    [ "type"       ] = "gigant",
    [ "spawn_part" ] = "mutant_psevdogigant_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56 },
  },
  {
    [ "type"       ] = "zombie_plague",
    [ "spawn_part" ] = "mutant_plague_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 20, 21, 23, 25, 27, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "scelet",
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "ghoul",
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "zombie",
    [ "ignore_similar" ] = { "zombie_babka", "zombie_hell15", "zombie_immortal" },
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "chimera",
    [ "spawn_part" ] = "mutant_chimera_kogot",
    [ "max_hit"    ] = 4,
    [ "spawn_max"  ] = true,
    -- плечи: 2, 7, 21, 31
    [ "bones"      ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38 },
  },
  {
    [ "type"       ] = "boar",
    [ "spawn_part" ] = "mutant_boar_leg",
    [ "max_hit"    ] = 4,
    [ "bones"      ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 33, 34, 35, 36, 38, 39, 40, 41 },
  },
  {
    [ "type"       ] = "vodjanoj",
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "controller",
    [ "ignore_similar" ] = { "m_controller_old", "controller_swamp", "kontroller_yazva" },
    [ "spawn_part" ] = "mutant_hand_kontroler",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 },
  },
  {
    [ "type"       ] = "psyonik",
    [ "spawn_part" ] = "mutant_hand_kontroler",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 },
  },
  {
    [ "type"       ] = "fracture",
    [ "spawn_part" ] = "mutant_fracture_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "bibliotekar",
    [ "spawn_part" ] = "part_digitis_biblio",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "karlito",
    [ "spawn_part" ] = "mutant_carlic_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "carlic",
    [ "spawn_part" ] = "mutant_carlic_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "deathclaw",
    [ "spawn_part" ] = "mutant_deathclaw_antler",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 44, 45, 46, 47, 48 },
  },
}
-- удалять часть, сгенерированную конфигом
local cleanup_default_parts = true
local spawn_max = false -- спаунить все неповрежденные части или только 1


function attach( sm )
  sm:subscribe({ signal = "on_monster_death", fun = this.death_spawn })
  sm:subscribe({ signal = "on_monster_hit",   fun = this.main_check  })
end


local massive = {}
function main_check( obj, amount, local_direction, who, bone_index )
  if not obj or not bone_index then return end
  if obj == nil or alife():object(obj:id()) == nil then return end
  if db.actor and who:id() ~= db.actor:id() then return end
  local section = obj:section()
  local id      = obj:id()
  for i, mob in ipairs( table_mobs ) do
    if string.find( section, mob[ "type" ] ) then
      local ignore_similar = false
      if mob[ "ignore_similar" ] then
        for _, k in ipairs( mob[ "ignore_similar" ] ) do
          if string.find( section, k ) then
            ignore_similar = true
            break
          end
        end
      end
      if not ignore_similar then
        for j, bone in ipairs( mob[ "bones" ] ) do
          if bone_index == bone then
            if massive[ id ] then
              massive[ id ] = massive[ id ] + 1
            else
              massive[ id ] = 1
            end
            break
          end
        end
        break
      end
    end
  end
end


function spawn_parts( obj, number, who )
  if not obj then return end
  if not number then number = 0 end
  local section = obj:section()
  transfer_everything( obj, db.actor )
end


function spawn_parts_for_actor( obj, number )
  local section = obj:section()
  for _, mob in ipairs( table_mobs ) do
    if string.find( section, mob[ "type" ] ) then
      local ignore_similar = false
      if mob[ "ignore_similar" ] then
        for _, k in ipairs( mob[ "ignore_similar" ] ) do
          if string.find( section, k ) then
            ignore_similar = true
            break
          end
        end
      end
      if
        ui_mm_opt_main.GetOption( "smart_monster_parts" )
        and not ignore_similar
      then
        if number < mob[ "max_hit" ] then
          local num_of_parts = 1
          if spawn_max or mob[ "spawn_max" ] then
            num_of_parts = mob[ "max_hit" ] - number
          end
          if obj:object( mob[ "spawn_part" ] ) then
            num_of_parts = num_of_parts - 1
          elseif
            mob[ "dont_spawn_if_object" ]
            and obj:object( mob[ "dont_spawn_if_object" ] )
          then
            num_of_parts = num_of_parts - 1
          end
          if num_of_parts > 0 then
            for i = 1, num_of_parts do
              amk.spawn_item_in_inv( mob[ "spawn_part" ], obj )
            end
          end
        elseif cleanup_default_parts then
          obj:iterate_inventory(
            function( obj, item )
              if item:section() == mob[ "spawn_part" ] then
                local s_obj = alife():object( item:id() )
                if s_obj then
                  alife():release( s_obj, true )
                end
              end
            end,
            obj
          )
        end
      end
      break
    end
  end
end


function death_spawn( obj, who )
  if not obj then return end
  if not alife():object( obj:id() ) then return end
  spawn_parts( obj, massive[ obj:id() ], who )
end


function transfer_everything( from_obj, to_obj )
  local items = {}
  from_obj:iterate_inventory(
    function( obj, item )
      local s_obj = alife():object( item:id() )
      if s_obj then
        table.insert( items, item )
      end
    end,
    obj
  )
  for _, item in ipairs( items ) do
    from_obj:transfer_item( item, to_obj )
	news_manager.send_tip(db.actor, "Получена часть мутанта", nil, nil, 10000)
  end
end
