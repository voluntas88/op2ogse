-- -*- mode: lua; coding: windows-1251-dos -*-
-- Сделанно для "ОП-2" ( новые монстры ), и "ОП-2 + OGSE 0.6.9.3 engine by dsh"
-- Взято из OGSE 0.6.9.3. Старый код под коментами.
-- Добавление новых мутантов: BlooderDen 
-- Полная переработка схемы и работы скрипта и основная работа над ним: dsh
-- Огромное спасибо основателям умного выпадения( предположительно Руся, Nekt,
-- Anvil, HIGHLANDER, V92 ) за идею и первые версии, и OGSE Team.
-- Спасибо dsh за полную переработку и удобство кода, в целях его возможного
-- дальнейшего разширения любыми новыми мутантами.

local table_mobs = {
  {
    [ "type"       ] = "bloodsucker",
    [ "spawn_part" ] = "mutant_krovosos_jaw",
    [ "dont_spawn_if_object" ] = "mutant_krovosos_red_jaw",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 14, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31 },
  },
  {
    [ "type"       ] = "pseudodog",
    [ "spawn_part" ] = "mutant_psevdodog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 32, 33, 34 },
  },
  {
    [ "type"       ] = "psy_dog",
    [ "spawn_part" ] = "mutant_psevdodog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 32, 33, 34 },
  },
  {
    [ "type"       ] = "m_dog_e",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_weak",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_normal",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_strong",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_habaruch",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_green",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_sil_hill",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_skeleton",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_zombie",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "dog_wolf",
    [ "spawn_part" ] = "mutant_dog_tail",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 29, 30, 31, 32 },
  },
  {
    [ "type"       ] = "tushkano",
    [ "spawn_part" ] = "mutant_face_tushkano",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 24, 25 },
  },
  {
    [ "type"       ] = "flesh",
    [ "spawn_part" ] = "mutant_flesh_eye",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 13 },
  },
  {
    [ "type"       ] = "cat",
    [ "ignore_similar" ] = { "cat_kulon", "cat_quest" },
    [ "spawn_part" ] = "mutant_tail_cat",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 27, 28, 29 },
  },
  {
    [ "type"       ] = "burer",
    [ "spawn_part" ] = "mutant_burer_hand",
    [ "dont_spawn_if_object" ] = "mutant_burer_red_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 22, 24, 26, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "snork",
    [ "spawn_part" ] = "mutant_snork_leg",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },
  },
  {
    [ "type"       ] = "gigant",
    [ "spawn_part" ] = "mutant_psevdogigant_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56 },
  },
  {
    [ "type"       ] = "zombie_plague",
    [ "spawn_part" ] = "mutant_plague_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 20, 21, 23, 25, 27, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "scelet",
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "ghoul",
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "zombie",
    [ "ignore_similar" ] = { "zombie_babka", "zombie_hell15", "zombie_immortal" },
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "chimera",
    [ "spawn_part" ] = "mutant_chimera_kogot",
    [ "max_hit"    ] = 4,
    [ "spawn_max"  ] = true,
    -- плечи: 2, 7, 21, 31
    [ "bones"      ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38 },
  },
  {
    [ "type"       ] = "boar",
    [ "spawn_part" ] = "mutant_boar_leg",
    [ "max_hit"    ] = 4,
    [ "bones"      ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 33, 34, 35, 36, 38, 39, 40, 41 },
  },
  {
    [ "type"       ] = "vodjanoj",
    [ "spawn_part" ] = "mutant_zombie_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39 },
  },
  {
    [ "type"       ] = "controller",
    [ "ignore_similar" ] = { "m_controller_old", "controller_swamp", "kontroller_yazva" },
    [ "spawn_part" ] = "mutant_hand_kontroler",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 },
  },
  {
    [ "type"       ] = "psyonik",
    [ "spawn_part" ] = "mutant_hand_kontroler",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 },
  },
  {
    [ "type"       ] = "fracture",
    [ "spawn_part" ] = "mutant_fracture_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "bibliotekar",
    [ "spawn_part" ] = "part_digitis_biblio",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "karlito",
    [ "spawn_part" ] = "mutant_carlic_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "carlic",
    [ "spawn_part" ] = "mutant_carlic_hand",
    [ "max_hit"    ] = 2,
    [ "bones"      ] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 },
  },
  {
    [ "type"       ] = "deathclaw",
    [ "spawn_part" ] = "mutant_deathclaw_antler",
    [ "max_hit"    ] = 1,
    [ "bones"      ] = { 44, 45, 46, 47, 48 },
  },
}
-- удалять часть, сгенерированную конфигом
local cleanup_default_parts = true
local spawn_max = false -- спаунить все неповрежденные части или только 1


function attach( sm )
  sm:subscribe({ signal = "on_monster_death", fun = this.death_spawn })
  sm:subscribe({ signal = "on_monster_hit",   fun = this.main_check  })
end


local massive = {}
function main_check(obj, amount, local_direction, who, bone_index)
	
	if not obj or not bone_index then
		return
	end
	
	if obj == nil or alife():object(obj:id()) == nil then return end
	
	local section = obj:section()
	local id = obj:id()
--[=[
	if section=="m_dog_e" or section=="dog_weak" or section=="dog_normal" or section=="dog_strong" then
		if bone_index==29
		or bone_index==30
		or bone_index==31 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
		return
	end
--]=]
        for i, mob in ipairs( table_mobs ) do
          if string.find( section, mob[ "type" ] ) then
            local ignore_similar = false
            if mob[ "ignore_similar" ] then
              for _, k in ipairs( mob[ "ignore_similar" ] ) do
                if string.find( section, k ) then
                  ignore_similar = true
                  break
                end
              end
            end
            if not ignore_similar then
              for j, bone in ipairs( mob[ "bones" ] ) do
                if bone_index == bone then
                  if massive[ id ] then
                    massive[ id ] = massive[ id ] + 1
                  else
                    massive[ id ] = 1
                  end
                  break
                end
              end
              break
            end
          end
        end
--[=[
	if string.find(section,"bloodsucker") then
		if bone_index==14
		or bone_index==17
		or bone_index==18
		or bone_index==19
		or bone_index==21
		or bone_index==22
		or bone_index==23
		or bone_index==25
		or bone_index==26
		or bone_index==27
		or bone_index==29
		or bone_index==30
		or bone_index==31 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"pseudodog") or string.find(section,"psy_dog")then
		if bone_index==32
		or bone_index==33 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"tushkano") then
		if bone_index==24
		or bone_index==25 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"flesh") then
		if bone_index==13 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"cat") then
		if bone_index==27
		or bone_index==28 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"burer") then
		if bone_index==18
		or bone_index==19
		or bone_index==20
		or bone_index==22
		or bone_index==24
		or bone_index==26
		or bone_index==31
		or bone_index==32
		or bone_index==33
		or bone_index==35
		or bone_index==37
		or bone_index==39 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"snork") then
		if bone_index==1
		or bone_index==2
		or bone_index==3
		or bone_index==4
		or bone_index==6
		or bone_index==7
		or bone_index==8
		or bone_index==9 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"controller") and not string.find(section,"m_controller_special") then -- у суперконтролера только скальп!
		if bone_index==24
		or bone_index==25
		or bone_index==26
		or bone_index==27
		or bone_index==29
		or bone_index==30
		or bone_index==32
		or bone_index==33
		or bone_index==35
		or bone_index==36
		or bone_index==40
		or bone_index==41
		or bone_index==42
		or bone_index==43
		or bone_index==45
		or bone_index==46
		or bone_index==48
		or bone_index==49
		or bone_index==51
		or bone_index==52 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"gigant") then
		if bone_index==2
		or bone_index==3
		or bone_index==4
		or bone_index==5
		or bone_index==7
		or bone_index==8
		or bone_index==10
		or bone_index==11
		or bone_index==13
		or bone_index==14
		or bone_index==16
		or bone_index==17
		or bone_index==20
		or bone_index==21
		or bone_index==22
		or bone_index==23
		or bone_index==25
		or bone_index==26
		or bone_index==28
		or bone_index==29
		or bone_index==31
		or bone_index==32
		or bone_index==34
		or bone_index==35 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"zombie") then
		if bone_index==19
		or bone_index==20
		or bone_index==21
		or bone_index==23
		or bone_index==25
		or bone_index==27
		or bone_index==31
		or bone_index==32
		or bone_index==33
		or bone_index==35
		or bone_index==37
		or bone_index==39 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"poltergeist") then
		if bone_index==3
		or bone_index==4 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"chimera") then
		if bone_index==3
		or bone_index==4
		or bone_index==8
		or bone_index==9
		or bone_index==22
		or bone_index==23
		or bone_index==24
		or bone_index==26
		or bone_index==28
		or bone_index==32
		or bone_index==33
		or bone_index==34
		or bone_index==36
		or bone_index==38 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
	if string.find(section,"boar") then
		if bone_index==3
		or bone_index==4
		or bone_index==8
		or bone_index==9
		or bone_index==34
		or bone_index==35
		or bone_index==39
		or bone_index==40 then
			if massive[id]==nil then
				massive[id] = 1
				return
			end
			massive[id] = massive[id] + 1
		end
	end
--]=]
end

function iterate_monster(obj,mob_part)		 -- эта функция проверяет, сколько у монстра объектов в момент хита, возвращая их количество
	if obj and mob_part then
		local cnt=0
		obj:iterate_inventory(function (dummy, item)
		if item:section()==mob_part then cnt=cnt+1 end
		end, nil)
		return cnt
	end
end

--[=[
local table_mobs = {
	{"bloodsucker",
	"pseudodog",
	"psy_dog",
	"tushkano",
	"flesh",
	"cat",
	"burer",			--2
	"snork",			--2
	"controller",	 --2
	"gigant",		  --2
	"zombie",		  --2
	"poltergeist",	--3
	"chimera",		 --4
	"boar"			  --4
	},
	{"mutant_krovosos_jaw",
	"mutant_psevdodog_tail",
	"mutant_psevdodog_tail",
	"mutant_face_tushkano",
	"mutant_flesh_eye",
	"mutant_tail_cat",
	"mutant_burer_hand",
	"mutant_snork_leg",
	"mutant_hand_kontroler",
	"mutant_psevdogigant_hand",
	"mutant_zombie_hand",
	"mutant_poltergeist_glas",
	"mutant_chimera_kogot",
	"mutant_boar_leg"
	}
}
--]=]


function spawn_parts( obj, number, who )
	if not obj then return end
	if not number then number = 0 end
	local section = obj:section()
--[=[
	if (section=="m_dog_e" or section=="dog_weak" or section=="dog_normal" or section=="dog_strong") then
		if obj and number == 0 then
			ogse.spawn_item_in_inv("mutant_dog_tail",obj)
		end
		return
	end
--]=]
        for _, mob in ipairs( table_mobs ) do
          if string.find( section, mob[ "type" ] ) then
            local ignore_similar = false
            if mob[ "ignore_similar" ] then
              for _, k in ipairs( mob[ "ignore_similar" ] ) do
                if string.find( section, k ) then
                  ignore_similar = true
                  break
                end
              end
            end
            if
              ui_mm_opt_main.GetOption( "smart_monster_parts" )
              and not ignore_similar
            then
              if number < mob[ "max_hit" ] then
                local num_of_parts = 1
                if spawn_max or mob[ "spawn_max" ] then
                  num_of_parts = mob[ "max_hit" ] - number
                end
                if obj:object( mob[ "spawn_part" ] ) then
                  num_of_parts = num_of_parts - 1
                elseif
                  mob[ "dont_spawn_if_object" ]
                  and
                  obj:object( mob[ "dont_spawn_if_object" ] )
                then
                  num_of_parts = num_of_parts - 1
                end
                if num_of_parts > 0 then
                  for i = 1, num_of_parts do
                    if who:id() == db.actor:id() then
                      amk.spawn_item_in_inv( mob[ "spawn_part" ], obj )
                    elseif
                      ( IsStalker( who ) or IsMonster( who ) )
                      and not ogse.is_quest_npc( who )
                    then
                      amk.spawn_item_in_inv( mob[ "spawn_part" ], who )
                    end
                  end
                end
              elseif cleanup_default_parts then
                obj:iterate_inventory(
                  function( obj, item )
                    if item:section() == mob[ "spawn_part" ] then
                      local s_obj = alife():object( item:id() )
                      if s_obj then
                        alife():release( s_obj, true )
                      end
                    end
                  end,
                  obj
                )
              end
            end
--[=[
			if obj then
				if a>6 then
					if number==nil or (number and number<2) then
						ogse.spawn_item_in_inv(table_mobs[2][a],obj)
					end
				end

				if a>11 then
					if number==nil or (number and number<3) then
						ogse.spawn_item_in_inv(table_mobs[2][a],obj)
					end
				end

				if a>12 then
					if number==nil or (number and number<4) then
						ogse.spawn_item_in_inv(table_mobs[2][a],obj)
					end
				end
			end
--]=]
		  break
		end
--		a = a+1
	end
	
	--if
    --      who:id() ~= db.actor:id()
    --      and ( IsStalker( who ) or IsMonster( who ) )
    --      and not ogse.is_quest_npc( who )
    --    then
	  transfer_everything( obj, db.actor )
	--end
end

function death_spawn( obj, who )
	if not obj then return end
	if not alife():object( obj:id() ) then return end
	local lvid = obj:level_vertex_id()
	local pos = obj:position()
	local valid = level.vertex_position(lvid):distance_to(pos) <= 0.7
	local section = obj:section()
	local id = obj:id()
	local number = massive[id]
	if valid then
		spawn_parts( obj, number, who )
	end
end


function transfer_everything( from_obj, to_obj )
  local items = {}
  from_obj:iterate_inventory(
    function( obj, item )
      local s_obj = alife():object( item:id() )
      if s_obj then
        table.insert( items, item )
      end
    end,
    obj
  )
  for _, item in ipairs( items ) do
    from_obj:transfer_item( item, to_obj )
	news_manager.send_tip(db.actor, "Получена часть мутанта", nil, nil, 10000)
  end
end
