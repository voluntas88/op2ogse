--/ ogse_rebind_key.script /--
--/ Key intercept module /--
--/ OGS Evolution Team 2010 /--
--/ version 1.4 (04/08/2013)/--

--/ Модуль перехвата функционала клавиш /--
-- назначение модуля: отвязка движкового назначения клавиш во время игры, чтобы ненужные движковые 
-- действия не конфликтовали со скриптовыми, забинденными на эти же клавиши. При этом на время
-- работы меню клавиши биндятся обратно, чтобы можно было назначать и менять их с помощью
-- стиандартного диалога настроек клавиатуры.

function attach(sm)
  sm:subscribe({ signal = "on_first_update", fun = this.on_first_update })
end
auto_attach = true

function on_first_update()
  -- Перехват хоткеев
  unbind_key()
end

local intercept_key_table = {}

function get_key_preset_value(key_name)
	local key = intercept_key_table[key_name]
	--log3("key=%d", key)
	return key
end

function set_key_preset_value(key_name, value)
	--log3("set_key_preset_value: %s = $d", key_name, value)
	intercept_key_table[key_name] = value
end
local dik_key_to_name = {
--[0] = "",
--[100000] = "",
[11] = "k0",
[2] = "k1",
[3] = "k2",
[4] = "k3",
[5] = "k4",
[6] = "k5",
[7] = "k6",
[8] = "k7",
[9] = "k8",
[10] = "k9",
[30] = "kA",
[78] = "kADD",
[40] = "kAPOSTROPHE",
[221] = "kAPPS",
[145] = "kAT",
[150] = "kAX",
[48] = "kB",
[14] = "kBACK",
[43] = "kBACKSLASH",
[46] = "kC",
[58] = "kCAPITAL",
[144] = "kCIRCUMFLEX",
[146] = "kCOLON",
[51] = "kCOMMA",
[121] = "kCONVERT",
[32] = "kD",
[83] = "kDECIMAL",
[211] = "kDELETE",
[181] = "kDIVIDE",
[208] = "kDOWN",
[18] = "kE",
[207] = "kEND",
[13] = "kEQUALS",
[1] = "kESCAPE",
[33] = "kF",
[59] = "kF1",
[68] = "kF10",
[87] = "kF11",
[88] = "kF12",
[100] = "kF13",
[101] = "kF14",
[102] = "kF15",
[60] = "kF2",
[61] = "kF3",
[62] = "kF4",
[63] = "kF5",
[64] = "kF6",
[65] = "kF7",
[66] = "kF8",
[67] = "kF9",
[34] = "kG",
[41] = "kGRAVE",
[35] = "kH",
[199] = "kHOME",
[23] = "kI",
[210] = "kINSERT",
[36] = "kJ",
[37] = "kK",
[112] = "kKANA",
[148] = "kKANJI",
[38] = "kL",
[26] = "kLBRACKET",
[29] = "kLCONTROL",
[203] = "kLEFT",
[56] = "kLMENU",
[42] = "kLSHIFT",
[219] = "kLWIN",
[50] = "kM",
[12] = "kMINUS",
[55] = "kMULTIPLY",
[49] = "kN",
[209] = "kNEXT",
[123] = "kNOCONVERT",
[69] = "kNUMLOCK",
[82] = "kNUMPAD0",
[79] = "kNUMPAD1",
[80] = "kNUMPAD2",
[81] = "kNUMPAD3",
[75] = "kNUMPAD4",
[76] = "kNUMPAD5",
[77] = "kNUMPAD6",
[71] = "kNUMPAD7",
[72] = "kNUMPAD8",
[73] = "kNUMPAD9",
[179] = "kNUMPADCOMMA",
[156] = "kNUMPADENTER",
[141] = "kNUMPADEQUALS",
[24] = "kO",
[25] = "kP",
[197] = "kPAUSE",
[52] = "kPERIOD",
[201] = "kPRIOR",
[16] = "kQ",
[19] = "kR",
[27] = "kRBRACKET",
[157] = "kRCONTROL",
[28] = "kRETURN",
[205] = "kRIGHT",
[184] = "kRMENU",
[54] = "kRSHIFT",
[220] = "kRWIN",
[31] = "kS",
[70] = "kSCROLL",
[39] = "kSEMICOLON",
[53] = "kSLASH",
[57] = "kSPACE",
[149] = "kSTOP",
[74] = "kSUBTRACT",
[183] = "kSYSRQ",
[20] = "kT",
[15] = "kTAB",
[22] = "kU",
[147] = "kUNDERLINE",
[151] = "kUNLABELED",
[200] = "kUP",
[47] = "kV",
[17] = "kW",
[45] = "kX",
[21] = "kY",
[125] = "kYEN",
[44] = "kZ",
--[256] = "MOUSE_1",	-- похоже, враньё в lua_help
--[512] = "MOUSE_2",	-- аналогично
--[1024] = "MOUSE_3",	-- та же песня
[337] = "MOUSE1",
[338] = "MOUSE2",
[339] = "MOUSE3",
[340] = "MOUSE4",
[341] = "MOUSE5"
}

function dik_to_name(dik)
	return dik_key_to_name[dik] or ""
end

local keys_list = {
  {
    ogse_name = "night_vision_key",
    stor_name = "ogse_nv_bind",
    real_bind_name = key_bindings.kNIGHT_VISION,
    cmd_name  = "night_vision",
  },
  {
    ogse_name = "reminds_key",
    stor_name = "ogse_antirad_bind",
    real_bind_name = key_bindings.kSCORES,
    cmd_name  = "scores",
  },
  {
    ogse_name = "runner_key",
    stor_name = "ogse_energy_drink_bind",
    real_bind_name = key_bindings.kCAM_4,
    cmd_name  = "cam_4",
  },
  {
    ogse_name = "antirad_key",
    stor_name = "ogse_yod_bind",
    real_bind_name = key_bindings.kCAM_3,
    cmd_name  = "cam_3",
  },
  {
    ogse_name = "torch_key",
    stor_name = "ogse_bipsizon_bind",
    real_bind_name = key_bindings.kTORCH,
    cmd_name  = "torch",
  },
--[=[
  {
    ogse_name = "handradio_key",
    stor_name = "ogse_handradio_bind",
    real_bind_name = key_bindings.kDROP,
    cmd_name  = "drop",
  },
--]=]
  {
    ogse_name = "quicksave_key",
    stor_name = "ogse_quicksave_bind",
    real_bind_name = key_bindings.kBUY,
    cmd_name  = "buy_menu",
  },
}

function save_keys()
	--log1("ogse_rebind_key.save_keys")
	for _,key_data in ipairs(keys_list) do
		local key = bind_to_dik(key_data.real_bind_name)
		--log3("")
		cmd(key_data.stor_name, key)
		set_key_preset_value(key_data.ogse_name, key)
	end
end

function rebind_key()
	--log1("ogse_rebind_key.rebind_key")
	for _,key_data in ipairs(keys_list) do
		local key = get_console():get_integer(key_data.stor_name)
		local keyname = dik_key_to_name[key]
		--log3("%s, %s, %s", key_data.stor_name, key, tostring(keyname))
		if keyname then
			cmd("bind",  key_data.cmd_name, keyname)
			set_key_preset_value(key_data.ogse_name, key)
		else
			set_key_preset_value(key_data.ogse_name, 0)
		end
	end
end

rebind_key()

function unbind_key()
	--log1("ogse_rebind_key.unbind_key")
	for _,key_data in ipairs(keys_list) do
		cmd("unbind", key_data.cmd_name)
	end
end
