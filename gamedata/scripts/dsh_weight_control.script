-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({
    signal = "on_before_actor_conditions_update",
    fun    = this.on_update
  })
end


function on_update()
  if not ( db.actor and db.actor:alive() ) then return end
  local add_weight
  local outfit_item = db.actor:get_current_outfit()
  if
    outfit_item
    and outfit_item:section() == "exo_mil_exoskeleton_addrs"
    and inventory.on_belt( "art_acumm" )
  then
    add_weight = 20
  end
  set_weight_parameters( add_weight )
  set_radiation_protection()
  set_power_loss()
end


local def_max_weight      = get_float( "inventory", "max_weight", 0 )
local def_max_walk_weight = get_float(
  "actor_condition", "max_walk_weight", 0
)


function set_weight_parameters( add_weight )
  local outfit_item     = db.actor:get_current_outfit()
  local max_weight      = def_max_weight
  local max_walk_weight = def_max_walk_weight
  if outfit_item then -- проверка нужна на время переодевания костюма
    local sect = outfit_item:section()
    -- это херня, что добавляемый вес не зависит от состояния экзы. исправим.
    local condition_for_weight_calc = outfit_item:condition()
    local walk_weight = get_float( sect, "additional_inventory_weight", 0 )
    if walk_weight > 0 then
      max_walk_weight = max_walk_weight + walk_weight * (
        condition_for_weight_calc - 1
      ) -- движок тоже прибавляет вес, так что учтем это
      if add_weight then
        max_walk_weight = max_walk_weight + add_weight
      end
    end
    local weight = get_float( sect, "additional_inventory_weight2", 0 )
    if weight > 0 then
      max_weight = max_weight + weight * (
        condition_for_weight_calc - 1
      ) -- движок тоже прибавляет вес, так что учтем это
      if add_weight then
        max_weight = max_weight + add_weight
      end
    end
  end
  if max_walk_weight < 0 then max_walk_weight = 0.1 end
  if max_weight      < 0 then max_weight      = 0.1 end
  db.actor:set_actor_max_weight( max_weight )
  db.actor:set_actor_max_walk_weight( max_walk_weight )
end


function set_radiation_protection()
  local outfit = db.actor:get_current_outfit()
  if not outfit then return end
  local params = get_outfit_params( outfit:section() )
  local protections = {
    "radiation_protection",
    "telepatic_protection",
  }
  if
    outfit:condition() < 0.8
    or (
      params.helmet
      and not ogse_dynamic_hud.get_current_helmet()
    )
  then
    for _, k in ipairs( protections ) do
      set_outfit_protection( outfit, k, 0 )
    end
  else
    for _, k in ipairs( protections ) do
      set_outfit_protection( outfit, k, get_float( outfit:section(), k, 0 ) )
    end
  end
end


local params_cache = {}
function get_outfit_params( sect )
  if not params_cache[ sect ] then
    local t = {}
    t.helmet     = get_bool( sect, "dynamic_hud_enable", false )
    t.power_loss = get_float( sect, "power_loss", 1.0 )
    params_cache[ sect ] = t
  end
  return params_cache[ sect ]
end


function set_power_loss()
  local outfit = db.actor:get_current_outfit()
  if not outfit then return end
  local params = get_outfit_params( outfit:section() )
  local power_loss  = params.power_loss
  if outfit:condition() < 0.8 then
    power_loss = power_loss + ( 10 - power_loss ) * ( 1 - outfit:condition() )
  end
  set_outfit_power_loss( outfit, power_loss )
end

