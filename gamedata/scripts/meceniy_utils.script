--\\*Модуль Настройки Мода..Меченый(Стрелок)..

--Функция для чтения из конфига
function ini(section,parametr) return system_ini():r_s32(section, parametr) end

--Настройки мода
zombie = 1 			--\\*Зомбирование ГГ (1 - вкл , 0 - выкл)
--invisible = 1 		--\\*невидимость в Костюме (1 - вкл , 0 - выкл)
teleporter_use = 1 	--\\*Использование Умного Ручного Телепорта (1 - вкл , 0 - выкл)
hell = 0 			--\\*Время Ужаса (1 - вкл , 0 - выкл)
hell_spawn = 1 		--\\*Спавн Монстров На уровне во время ужаса (1 - вкл , 0 - выкл)
din_rad = 0			--\\*Динамическая Радиация (1 - вкл , 0 - выкл)
effector_spawn = 1	--\\*Спавн "Электоро кровососов" при получении инфопоршня о наличие квестового предмета(1 - вкл , 0 - выкл)

local tup = 0

function on_actor_update_callback()
	amk.oau_watchdog=19311
-- ЧУ апдейтим только в 21 и 22 часы
	if check_for_horror_time() then
		meceniy_in_hell.horortime()
	end
	amk.oau_watchdog=19312
meceniy_outfit.on_actor_update()
	amk.oau_watchdog=19313
meceniy_wpn.on_actor_update()
	amk.oau_watchdog=19314
--meceniy_art.on_actor_update()
--	if tup < time_global() then
--meceniy_art.art_respawn()
--		tup = time_global()+ 300000
--end
end


function check_for_horror_time()
  local hours   = level.get_time_hours()
  local minutes = level.get_time_minutes()
  if (
    hours   == meceniy_in_hell.horror_begin_time.h
    and
    minutes >= meceniy_in_hell.horror_begin_time.m
  ) or (
    hours   == meceniy_in_hell.horror_end_time.h
    and
    minutes <= meceniy_in_hell.horror_end_time.m + 10
  ) then
    return true
  end
  return false
end


function on_item_drop_callback(obj)
meceniy_intellectual.teleporter_use(obj)
end

function on_item_take_callback(obj)
end

function net_spawn_callback()
meceniy_intellectual.rem()
end

--функция для чтения  версии мода(от Artos'a)
function read_mod_ver( opt )
  local sini    = ini_file( "narod_opt.ltx" )
  local section = "mod_ver"
  local s1, s2, s4, s5
  if sini and sini:section_exist( section ) then
    s1 = get_string_wq( section, "type",  "", sini )
    s2 = get_string_wq( section, "title", "", sini )
    s4 = get_string_wq( section, "build", "", sini )
    s5 = get_string_wq( section, "fix",   "", sini )
  end
  if opt == "txt" then
    local strs = {}
    for _, str in ipairs( { s1, s2, s4, s5 } ) do
      if str ~= "" then table.insert( strs, str ) end
    end
    return table.concat( strs, " " )
  end
  return s1, s2, s4, s5
end

function delete_some_somth(section, count)
	news_manager.relocate_item(db.actor, "out", section, count)
	db.actor:iterate_inventory(
		function(dummy, item)
			if (count > 0) and (item:section() == section) then
				alife():release(alife():object(item:id()))
				count = count - 1
			end
		end,
		db.actor
	)
end
