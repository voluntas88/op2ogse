-- -*- mode: lua; coding: windows-1251-dos -*-

local vip_npc = {
  [ "amk_artem_kulinar"    ] = true, -- Артем Кулинар
  [ "amk_vitek_voron"      ] = true, -- Ворон
  [ "bar_dolg_petrenko"    ] = true, -- Петренко
  [ "bar_zastava_guard_3"  ] = true, -- Киценко
  [ "dyak"                 ] = true, -- Дьяк
  [ "esc_bridge_soldier5"  ] = true, -- Кузнецов
  [ "kalmyak"              ] = true, -- Калмык
  [ "land_lazaret_starik"  ] = true, -- Старик на НЗ
  [ "mil_Svoboda_trader"   ] = true, -- Скряга
  [ "sak_military_stalker" ] = true, -- Шерстюк
}

local vip_npc_info = {
  -- банда Химеры на НЗ будут неуязвимыми до взятия задания на бритву
  [ "land_arhara_sniper" ] = {
    [ "before" ] = "piligrim_britva_nayti_start",
  },
  -- чистонебовец на Болотах, который ставит метки за телевизор
  [ "agr_nebo_trader"    ] = {
    [ "before" ] = "need_televizor_done",
  },
  -- Волк на АС
  [ "esc_wolf"           ] = {
    [ "after"  ] = "esc_fanat_spawn",
  },
  -- Костыльнога
  [ "esc_pantera_zadan_soldier" ] = {
    [ "before" ] = "kostylnoga_done",
  }
}


function attach( sm )
  sm:subscribe({ signal = "on_npc_before_hit", fun = this.on_npc_before_hit })
end


local cache = {}
function on_npc_before_hit( obj, hit_data, p_s_hit, p_ignore_flags )
  local id = obj:id()
  if cache[ id ] == nil then
    if vip_npc[ obj:name() ] then
      cache[ id ] = true
    else
      local info = vip_npc_info[ obj:name() ]
      if not info then
        local strn, begin_job = dsh_enemies.get_smart_terrain( obj )
        if strn then
          info = vip_npc_info[ strn:name() ]
        end
      end
      if
        info and db.actor
        and (
          ( info.before and not db.actor:has_info( info.before ) )
          or ( info.after and db.actor:has_info( info.after ) )
        )
      then
        cache[ id ] = true
      else
        cache[ id ] = false
      end
    end
  end
  if cache[ id ] == true then
    write_memory_float( 0, p_s_hit, hit_offset.power )
  end
end
