-- -*- mode: lua; coding: windows-1251-dos -*-

--\\*"НаноЭкзоСкелет "Скат-15М""..С Системой Жизненной Поддержки (СЖП)
--и С возможностью апгрейда..Меченый(Стрелок)..

function attach( sm )
  sm:subscribe({ signal = "on_spawn",  fun = this.on_spawn        })
  sm:subscribe({ signal = "on_update", fun = this.on_actor_update })
  sm:subscribe({ signal = "on_use",    fun = this.on_item_use     })
end


cfg = {}
function on_spawn()
  load_cfg()
end


function load_cfg()
  cfg.enabled   = ogse.load_var( script_name() .. ".enabled",   true )
  cfg.health    = ogse.load_var( script_name() .. ".health",    true )
  cfg.power     = ogse.load_var( script_name() .. ".power",     true )
  cfg.radiation = ogse.load_var( script_name() .. ".radiation", true )
end


function save_cfg()
  for k, v in pairs( cfg ) do
    ogse.save_var( script_name() .. "." .. k, v, "bool" )
  end
end


local t_upd    = 0
local is_pleer = false

local con_skat_1 = 1
local con_skat_2 = 1
local con_skat_3 = 1

local flag_skat_1 = false
local flag_skat_2 = false
local flag_skat_3 = false

local lim_health     = 0.75
local lim_psy_health = 0
local lim_bleed      = 0
local lim_power      = 0
local lim_radiation  = 0


function on_actor_update()
  if t_upd > time_global() then return end
  local outfit = db.actor:get_current_outfit()
  if not is_pleer then
    player_ogg.start_pleer_post_save()
    is_pleer = true
  end

  if
    not outfit
    or not string.find( outfit:section(), "^exo_mil_exoskeleton_add" )
    or not db.actor:alive()
  then
    return
  end

  if flag_skat_1 then
    local e_up1 = db.actor:object( "exo_mil_exoskeleton_add" )
    if e_up1 then
      e_up1:set_condition( con_skat_1 )
    end
    flag_skat_1 = false
  elseif flag_skat_2 then
    local e_up2 = db.actor:object( "exo_mil_exoskeleton_addr" )
    if e_up2 then
      e_up2:set_condition( con_skat_2 )
    end
    flag_skat_2 = false
  elseif flag_skat_3 then
    local e_up3 = db.actor:object( "exo_mil_exoskeleton_addrs" )
    if e_up3 then
      e_up3:set_condition( con_skat_3 )
    end
    flag_skat_3 = false
  end
  local diff = level.get_game_difficulty() / 15
  lim_psy_health = 0.5 - diff
  lim_bleed      = 0.5 + diff
  lim_power      = 0.4 - diff
  lim_radiation  = 0.2 + diff
  if cfg.enabled then
    system_outfit()
    if     outfit:section() == "exo_mil_exoskeleton_addr"  then
      new_system_rad()
    elseif outfit:section() == "exo_mil_exoskeleton_addrs" then
      new_system_rad()
      new_system_power()
      new_anti_dot()
    end
  end
  t_upd = time_global() + 1000
end


function on_sub_actor_update()
  update_spawn()
end


function update_spawn()
  alife():create(
    "doc_1", vector():set( -198.597, 4.488, 168.971 ), 25633, 1363
  )
  alife():create(
    "art_acumm", vector():set( -33.133, 3.548, -64.111 ), 198, 1960
  )
  alife():create(
    "doc_8", vector():set( -33.133, 3.548, -64.111 ), 198, 1960
  )
  alife():create(
    "doc_10", vector():set( -89.387, -2.457, -25.271 ), 19105, 2875
  )
  alife():create(
    "art_acumm", vector():set( -89.387, -2.457, -25.271 ), 19105, 2875
  )
  spawner()
end


function on_item_use( obj )
  if     obj:section() == "doc_1"  then
    doc_use()
  elseif obj:section() == "doc_8"  then
    doc_use_2()
  elseif obj:section() == "doc_10" then
    doc_use_3()
  end
end


function doc_use()
  local e1 = db.actor:object( "exo_mil_exoskeleton" )
  if e1 then
    con_skat_1 = e1:condition()
    alife():release( alife():object( e1:id() ) )
    amk.spawn_item_in_inv( "exo_mil_exoskeleton_add" )
    flag_skat_1 = true
    news_manager.send_tip( db.actor, "Апгрейд закончен.", nil, "nano", 5000 )
    alife():create(
      "art_acumm", vector():set( -89.387, -2.457, -25.271 ), 19105, 2875
    )
    update_spawn_2()
  else
    amk.spawn_item_in_inv( "doc_1" )
  end
end


function update_spawn_2()
  alife():create(
    "art_acumm", vector():set( -89.387, -2.457, -25.271 ), 19105, 2875
  )
end


function doc_use_2()
  local e2 = db.actor:object( "exo_mil_exoskeleton_add" )
  if e2 then
    con_skat_2 = e2:condition()
    alife():release( alife():object( e2:id() ) )
    amk.spawn_item_in_inv( "exo_mil_exoskeleton_addr" )
    flag_skat_2 = true
    news_manager.send_tip( db.actor, "Апгрейд закончен.", nil, "nano", 5000 )
  else
    amk.spawn_item_in_inv( "doc_8" )
  end
end


function doc_use_3()
  local e3 = db.actor:object( "exo_mil_exoskeleton_addr" )
  if e3 then
    con_skat_3 = e3:condition()
    alife():release( alife():object( e3:id() ) )
    amk.spawn_item_in_inv( "exo_mil_exoskeleton_addrs" )
    flag_skat_3 = true
    news_manager.send_tip( db.actor, "Апгрейд закончен.", nil, "nano", 5000 )
  else
    amk.spawn_item_in_inv( "doc_10" )
  end
end


function spawner()
  alife():create(
    "art_acumm", vector():set( -89.387, -2.457, -25.271 ), 19105, 2875
  )
end


function system_outfit()
  if not cfg.health then return end
  if db.actor.health > lim_health and db.actor:get_bleeding() <= lim_bleed then
    return
  end
  local health = (
    db.actor.health <= lim_health
    and not dsh_medkit.restoring( "health_restore_speed" )
  )
  if     health and db.actor:object( "medkit_army" ) then
    eat_item( "medkit_army" )
  elseif health and db.actor:object( "medkit_scientic" ) then
    eat_item( "medkit_scientic" )
  elseif health and db.actor:object( "suvorotka" ) then
    eat_item( "suvorotka" )
  elseif health and db.actor:object( "medkit" ) then
    eat_item( "medkit" )
  elseif db.actor:get_bleeding() > lim_bleed and db.actor:object( "bandage" ) then
    eat_item( "bandage" )
  end
end


function eat_item( sect )
  local obj = db.actor:object( sect )
  if obj then
    play_snd( [[hev\administering-anti-rad]] )
    dsh_medkit.on_actor_before_use( obj )
    db.actor:give_info_portion("biznes_remove_special_item")
    db.actor:eat( obj )
  db.actor:disable_info_portion( "biznes_remove_special_item" )
  end
end


function new_system_rad()
  if not cfg.radiation then return end
  if
    db.actor.radiation < lim_radiation
    or db.actor.health > lim_health + 0.1
  then
    return
  end
  if
    ( not dsh_medkit.restoring( "radiation_restore_speed" ) )
    and db.actor:object( "antirad" )
  then
    eat_item( "antirad" )
    db.actor:disable_info_portion( "biznes_remove_special_item" )
  end
end


function new_anti_dot()
  if not cfg.health then return end
  if db.actor.psy_health >= lim_psy_health then return end
  if db.actor:object( "antizombie" ) then
    eat_item( "antizombie" )
  end
end


function new_system_power()
  if not cfg.power then return end
  if db.actor.power > lim_power then return end
  if db.actor:object( "energy_drink" ) then
    eat_item( "energy_drink" )
  end
end


function exo_in_section( item )
  local itm = item:section()
  if itm == "exo_mil_exoskeleton_addr" then
    alife():create(
      itm, db.actor:position(),
      db.actor:level_vertex_id(), db.actor:game_vertex_id(),
      db.actor:id()
    )
    alife():release( alife():object( item:id() ) )
  end
end


function have_item_namber( itm, need_namber )
  return amk_utils.inventory_search( itm, need_namber )
end


function delete_some_somth( section, count )
  news_manager.relocate_item( db.actor, "out", section, count )
  db.actor:iterate_inventory(
    function( dummy, item )
      if count > 0 and item:section() == section then
        alife():release( alife():object( item:id() ) )
        count = count - 1
      end
    end,
    db.actor
  )
end


function dbglog( fmt, ... )
  local msg = string.format( fmt, ... )
  local msg_no_ws = string.gsub( msg, "%s", "_" )
  log1( "dbg:" .. msg_no_ws )
end


function play_snd( snd )
  local snd_obj = xr_sound.get_safe_sound_object( snd )
  snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
end
