-- -*- mode: lua; coding: windows-1251-dos -*-
-- Достижения
local medicals = {
"suvorotka",
"vodka",
"antirad",
"medkit",
"medkit_army",
"medkit_scientic",
"energy_drink",
"bandage",
"antizombie",
}

local wpns = {
"wpn_akms_m1",
"wpn_kord_m1",
"wpn_fn2000_sniper",
"wpn_vepr12_20",
"wpn_m500_custom",
"wpn_akm_ves_otdaca",
"wpn_akms_m2",
"wpn_aug_a2",
"wpn_fn2000_paratrooper",
"wpn_gauss2b",
"wpn_groza_sn",
"wpn_oicw",
"wpn_sks_cust",
"wpn_val_voron",
"wpn_ks23",
"wpn_sayga12k",
"wpn_ak74u_svd",
"wpn_awp_m1",
"wpn_sg550_sr",
"wpn_vihlop_m1",
"wpn_zastava_m77",
"wpn_20w_vintorez",
"wpn_ak74_m3",
"wpn_ak74_m1",
"wpn_ak104t",
"wpn_aks74_m1",
"wpn_g36_m1",
"wpn_hostel",
"wpn_m4_m1",
"wpn_ognemet",
"wpn_svd_m1",
"wpn_svd_m2",
"wpn_svd_m3",
"wpn_b94_sil",
"wpn_protecta_col",
"wpn_vintorez_m1",
"wpn_walther_wa2000",
"wpn_spas12_m1",
"wpn_groza_m1",
"wpn_dark_gauss",
"wpn_benelli_m3_short",
"wpn_rpkcustom",
"wpn_sw",
"wpn_rpk47_sk1",
"wpn_vepr12_m1",
"wpn_sayga_un",
"wpn_mauser",
}

function acv_halavshic()
	send_archievement("Халявщик")
end

function acv_homak()
	send_archievement("Хомяк")
end

function acv_lekar()
	send_archievement("Доктор Айболит")
end

function acv_lekar2()
	send_archievement("Спаситель")
end

function acv_tereza()
	send_archievement("Мать Тереза")
end

function acv_vandal()
	send_archievement("Вандал")
end

function acv_giv()
	send_archievement("Живчик")
end

function acv_found_myself()
	send_archievement("Нашедший себя")
end

function acv_mtv()
	send_archievement("Монтажник-высотник")
end

function acv_sol()
	send_archievement("Солянщик")
end

function acv_kart()
	send_archievement("Картограф")
end

function acv_kro()
	send_archievement("Кровельщик")
end

function acv_ele()
	send_archievement("Электрик")
end

function acv_gromov()
	send_archievement("Громов")
end

function acv_stay1()
	send_archievement("Долгожитель")
end

function acv_stay2()
	send_archievement("Аксакал")
end

function acv_rank1()
	send_archievement("Чемпион")
end

function acv_rank2()
	send_archievement("Герой Зоны")
end

function acv_rank3()
	send_archievement("Легендарный сталкер")
end

function acv_farm()
	acv_count_event("acv_farm", 30, "Фармацевт")
end

function acv_coll()
	send_archievement("Коллекционер")
end

function acv_profi()
	send_archievement("Профессионал")
end

function acv_volna()
	send_archievement("Защитник Зоны")
end

function acv_shax()
	send_archievement("Шахматист")
end

function acv_sos()
	if has_alife_info("acv_sos") then return end
	
	if has_alife_info("squad_is_alive") and has_alife_info("psih_is_alive") then 
		db.actor:give_info_portion("acv_sos")
		send_archievement("Служба Спасения")
	end
end

function acv_snp()
	if has_alife_info("acv_snp") then return end
	
	if  has_alife_info("upiter_sdelka_have") and 
		has_alife_info("fli_chaes_have") and 
		has_alife_info("viking_proverka_have")
	then 
		db.actor:give_info_portion("acv_snp")
		send_archievement("Снайпер")
	end
end

function acv_docs()
	if not has_alife_info("acv_docs_fail") then
		db.actor:give_info_portion("acv_docs")
		send_archievement("Библиотекарь")
	end
end

function acv_aem()
	if not has_alife_info("acv_aem") then
		db.actor:give_info_portion("acv_aem")
		send_archievement("Гладиатор")
	end
end

function acv_cognized_zone()
	if has_alife_info("acv_cognized_zone") then return end

	for i=1,36 do
		if not has_alife_info("arhara_obman"..tostring(i)) then return end
	end

	db.actor:give_info_portion("acv_cognized_zone")
	send_archievement("Познавший Зону")
end

function acv_sishik()
	if has_alife_info("acv_sishik") then return end
	
	if has_alife_info("acv_sishik1") and has_alife_info("acv_sishik2") and has_alife_info("acv_sishik3") and has_alife_info("acv_sishik4") then 
		db.actor:give_info_portion("acv_sishik")
		send_archievement("Сыщик")
	end
end

function acv_task()
	if has_alife_info("acv_task_fail") then return end

	if has_alife_info("info_chess_dictofon_done") and has_alife_info("snp_video_arhiv_done") then 	
		db.actor:give_info_portion("acv_task")
		send_archievement("Исполнитель Заданий")
		amk.start_timer("run5", 3, "archievements.acv_stalker()")
	end
end

function acv_real()
	if has_alife_info("acv_real_fail") then return end

	db.actor:give_info_portion("acv_real")
	send_archievement("Реалист")
end

function acv_vzn()
	if has_alife_info("acv_vzn3") then return end

	if     not has_alife_info("acv_vzn1") then
		db.actor:give_info_portion("acv_vzn1")
		send_archievement("Спонсор")
	elseif not has_alife_info("acv_vzn2") then
		db.actor:give_info_portion("acv_vzn2")
	elseif not has_alife_info("acv_vzn3") then
		db.actor:give_info_portion("acv_vzn3")
		send_archievement("Меценат")
	end
end

function acv_life()
	if sak.all_questmen_alive() then
		if has_alife_info("acv_umer") then
			db.actor:give_info_portion("acv_resur")
			send_archievement("Воскрешающий Мертвых")
		else
			db.actor:give_info_portion("acv_alive")
			send_archievement("Хранитель Жизни")
		end
	end
end

function acv_money()
	if db.actor:money() > 90000000 then return end
	
	if not has_alife_info("acv_money1") and db.actor:money() >= 5000000 then
		db.actor:give_info_portion("acv_money1")
		send_archievement("Нумизмат")
	end
	if not has_alife_info("acv_money2") and db.actor:money() >= 15000000 then
		db.actor:give_info_portion("acv_money2")
		send_archievement("Рокфеллер")
	end
	if not has_alife_info("acv_money3") and db.actor:money() >= 30000000 then
		db.actor:give_info_portion("acv_money3")
		send_archievement("Жлоб")
	end
end

function has_cheated_jump()
	if has_alife_info("acv_has_cheated") then return end

	news_manager.send_tip(db.actor, "ac".."v_".."ju".."mp_".."text", nil, "nano", 30000)
	db.actor:give_info_portion("acv_has_cheated")
	send_archievement("Ч".."ит".."ер")
end

function has_cheated_money()
	if has_alife_info("acv_has_cheated") then return end
	
	news_manager.send_tip(db.actor, "ac".."v_".."mo".."ne".."y_".."text", nil, "nano", 30000)
	db.actor:give_info_portion("acv_has_cheated")
	send_archievement("Ч".."ит".."ер")
end

function has_cheated_item()
	if has_alife_info("acv_has_cheated") or has_alife_info("mm_opt") then return end

	news_manager.send_tip(db.actor, "ac".."v_".."it".."em_".."text", nil, "nano", 30000)
	db.actor:give_info_portion("acv_has_cheated")
	send_archievement("Ч".."ит".."ер")
end

function has_cheated_zone()
	if has_alife_info("acv_has_cheated") then return end
	
	news_manager.send_tip(db.actor, "ac".."v_".."zo".."ne_".."text", nil, "nano", 30000)
	db.actor:give_info_portion("acv_has_cheated")
	send_archievement("Ч".."ит".."ер")
end


function acv_angel()
  if all_ecologs_alive() then
    sak.create_items_actor( "af_hl", 1 )
    db.actor:give_info_portion( "acv_angel" )
    send_archievement( "Ангел-хранитель" )
  end
end

function all_ecologs_alive()
  local ecologs = {
    "bar_ecolog_professor",
    "bar_ecolog_crush_1",
    "bar_ecolog_crush_2",
    "bar_ecolog_crush_3",
    "bar_ecolog_crush_4",
  }
  for _, name in ipairs( ecologs ) do
    local se_obj = alife():object( name )
    if not se_obj         then return false end
    if not se_obj:alive() then return false end
  end
  return true
end


function acv_kill()
	local value = amk.load_variable("acv_kill", 0)+1
	amk.save_variable("acv_kill", value)
	
	if not has_alife_info("acv_kill") and value >= 3000 then
		db.actor:give_info_portion("acv_kill")
		send_archievement("Киллер")
	end
	if not has_alife_info("acv_kill2") and value >= 6000 then
		db.actor:give_info_portion("acv_kill2")
		send_archievement("Чёрный сталкер")
	end
	acv_unstoppable()
end

function acv_mons()
	local value = amk.load_variable("acv_mons", 0)+1
	amk.save_variable("acv_mons", value)
	
	if not has_alife_info("acv_mons") and value >= 6000 then
		db.actor:give_info_portion("acv_mons")
		send_archievement("Браконьер")
	end
	if not has_alife_info("acv_mons2") and value >= 10000 then
		db.actor:give_info_portion("acv_mons2")
		send_archievement("Санитар Зоны")
	end
	acv_unstoppable()
end

function acv_unstoppable()
	if not has_alife_info("acv_unstoppable") and amk.load_variable("acv_kill", 0)+amk.load_variable("acv_mons", 0) >= 20000 then
		db.actor:give_info_portion("acv_unstoppable")
		send_archievement("Неудержимый")
	end
end

function acv_stalker()
	if  has_alife_info("acv_sishik") and 
		has_alife_info("acv_angel") and 
		has_alife_info("acv_vandal") and 
		has_alife_info("acv_sos") and 
		has_alife_info("acv_docs") and 
		has_alife_info("acv_cognized_zone") and 
		has_alife_info("acv_lekar") and 
		has_alife_info("acv_tereza") and 
		has_alife_info("acv_farm") and 
		has_alife_info("acv_rank2") and 
		has_alife_info("acv_emb") and 
		has_alife_info("acv_hell") and 
		has_alife_info("acv_snp") and 
		has_alife_info("acv_ct") and 
		has_alife_info("acv_kill") and 
		has_alife_info("acv_mons") and 
		has_alife_info("acv_zoms") and 
		has_alife_info("acv_task") and 
		has_alife_info("acv_vzn1") and 
		has_alife_info("acv_alive") and 
		has_alife_info("acv_rem") and 
		has_alife_info("acv_paparacci") and 
		has_alife_info("acv_wpn") and 
		has_alife_info("fli_done") and 
		has_alife_info("taynik_nayti_oz_10_done") and 
		has_alife_info("volna_day4_done") and 
		has_alife_info("info_chess_dictofon_done") and 
		not has_alife_info("acv_has_cheated") and
		not has_alife_info("acv_halavshic3") and
		not has_alife_info("acv_bridge") and
		not has_alife_info("acv_docs_fail") and
		not has_alife_info("acv_money3") and
		not has_alife_info("acv_alk") and
		not has_alife_info("acv_slp") and
		not has_alife_info("acv_xam") and
		not has_alife_info("acv_task_fail") and
		not has_alife_info("acv_vzn3") and
		not has_alife_info("acv_umer")
	then
		db.actor:give_info_portion("acv_stalker")
		send_archievement("S.T.A.L.K.E.R.")
	end
end

-- единая функция обработки и выдачи подсчитываемого достижения
function acv_count_event(acv, count, name, qty)
	if has_alife_info(acv) then return end
	
	if not qty then
		qty = 1
	end
	
	local value = amk.load_variable(acv, 0)+qty
	
	if value >= count then
		amk.del_variable(acv)
		db.actor:give_info_portion(acv)
		send_archievement(name)
		return
	end

	amk.save_variable(acv, value) 
end

-- единая функция обработки и выдачи 2-х последовательно подсчитываемых достижений
function acv_count_2event(acv, count, name, acv2, count2, name2, qty)
	if has_alife_info(acv) and has_alife_info(acv2) then return end
	
	if not qty then
		qty = 1
	end
	
	local value = amk.load_variable(acv, 0)+qty
	
	if not has_alife_info(acv) and value >= count then
		db.actor:give_info_portion(acv)
		send_archievement(name)
	end

	if value >= count2 then
		amk.del_variable(acv)
		db.actor:give_info_portion(acv2)
		send_archievement(name2)
		return
	end

	amk.save_variable(acv, value) 
end

-- единая функция обработки и выдачи 3-х последовательно подсчитываемых достижений
function acv_count_3event(acv, count, name, acv2, count2, name2, acv3, count3, name3, qty)
	if has_alife_info(acv) and has_alife_info(acv2) and has_alife_info(acv3) then return end
	
	if not qty then
		qty = 1
	end
	
	local value = amk.load_variable(acv, 0)+qty
	
	if not has_alife_info(acv) and value >= count then
		db.actor:give_info_portion(acv)
		send_archievement(name)
	end

	if not has_alife_info(acv2) and value >= count2 then
		db.actor:give_info_portion(acv2)
		send_archievement(name2)
	end

	if value >= count3 then
		amk.del_variable(acv)
		db.actor:give_info_portion(acv3)
		send_archievement(name3)
		return
	end

	amk.save_variable(acv, value) 
end

-- счетчик смертей гг
function on_actor_death(who)
	if has_alife_info("peshera_go") then return end	-- сон в Пещере не считаем

	set_death_count("death", get_death_count("death")+1)
	
	if who and amk_anoms.is_anomaly(who:clsid()) then
		set_death_count("anoms", get_death_count("anoms")+1)
	end
end
function acv_death()
	if not has_alife_info("acv_death") and get_death_count("death") >= 500 then
		db.actor:give_info_portion("acv_death")
		send_archievement("Юрий Семецкий")
	end
	
	if not has_alife_info("acv_anoms") and get_death_count("anoms") >= 20 then
		db.actor:give_info_portion("acv_anoms")
		send_archievement("Покоритель Аномалий")
	end
end

-- универсальный независимый от сейвов счетчик, реализованный на файлах - считает количество смертей гг а также время прохождения
function get_death_count(what)
	local f = getFS()
	local flist = f:file_list_open_ex("$game_saves$", bit_or(FS.FS_ListFiles, FS.FS_RootOnly), "*."..what)

	if flist:Size() > 0 then
		return tonumber(string.match(flist:GetAt(0):NameFull(),"(.+)[.]"))
	else
		local f1 = f:update_path("$game_saves$", "game_setup.ltx")
		local f2 = f:update_path("$game_saves$", "0."..what)
		f:file_copy(f1, f2)
		return 0
	end
end
function set_death_count(what, value)
	local f = getFS()
	local fileName = f:file_list_open_ex("$game_saves$", bit_or(FS.FS_ListFiles, FS.FS_RootOnly), "*."..what):GetAt(0):NameFull()
	local fileNameNew = tostring(value).."."..what
	if fileNameNew ~= fileName then
		local f1 = f:update_path("$game_saves$", fileName)
		local f2 = f:update_path("$game_saves$", fileNameNew)
		f:file_rename(f1, f2, true)
	end
end

function on_new_game()
	get_death_count("game")
	set_death_count("game", 0)
	get_death_count("death")
	set_death_count("death", 0)
	get_death_count("anoms")
	set_death_count("anoms", 0)
end

function save_gametime()
	if alife() then
		set_death_count("game", get_death_count("game")+math.floor(time_global()/60000+0.5))
	end
end

-- универсальный механизм проверки, что обработан каждый объект из списка
function has_all(tbl, info, section)
	for i, s in ipairs(tbl) do
		if s == section and not has_alife_info(info..i) then
			db.actor:give_info_portion(info..i)
			return has_all_info(tbl, info)
		end
	end
	return false
end
function has_all_info(tbl, info)
	for i=1, #tbl do
		if not has_alife_info(info..i) then
			return false
		end
	end
	return true
end

-- взятие тайника без уникальных предметов
function check_treasure(box)
	local section = box:section()
	if     section == "m_inventory_box13" then
		db.actor:give_info_portion("acv_sishik1")
		acv_sishik()
	elseif section == "x_inventory_box3" then
		db.actor:give_info_portion("acv_sishik2")
		acv_sishik()
	elseif section == "y_inventory_box1" then
		db.actor:give_info_portion("acv_sishik3")
		acv_sishik()
	elseif section == "z_inventory_box15" then
		db.actor:give_info_portion("acv_sishik4")
		acv_sishik()
	end
end

-- подъем предмета
function on_item_take(obj)
	local section = obj:section()
	if     section == "mutant_wolf_cocoon" then
		if not has_alife_info("acv_emb") then
			db.actor:give_info_portion("acv_emb")
			send_archievement("Шеф-повар")
		end
	end
	
	if not has_alife_info("acv_wpn") and has_all(wpns, "acv_wpn", section) then
		db.actor:give_info_portion("acv_wpn")
		send_archievement("Оружейный Барон")
	end

	if not has_alife_info("acv_ynat") and 
		db.actor:object("mutant_spider_gland") and
		db.actor:object("mutant_rotan_heart") and
		db.actor:object("mutant_plague_hand") and
		db.actor:object("mutant_carlic_hand") and
		db.actor:object("mutant_raptor_kogot") and
		db.actor:object("mutant_zanoza_leg") and
		db.actor:object("mutant_flesh_eye") and
		db.actor:object("mutant_boar_leg") and
		db.actor:object("mutant_dog_tail") and
		db.actor:object("mutant_psevdodog_tail") and
		db.actor:object("mutant_krovosos_jaw") and
		db.actor:object("mutant_burer_hand") and
		db.actor:object("mutant_zombie_hand") and
		db.actor:object("mutant_snork_leg") and
		db.actor:object("mutant_face_tushkano") and
		db.actor:object("mutant_hand_kontroler") and
		db.actor:object("mutant_poltergeist_glas") and
		db.actor:object("mutant_psevdogigant_hand") and
		db.actor:object("mutant_tail_cat") and
		db.actor:object("mutant_chimera_kogot") and
		db.actor:object("mutant_fracture_hand") and
		db.actor:object("mutant_deathclaw_antler") and
		db.actor:object("part_digitis_biblio") and
		db.actor:object("mutant_vypolzen_hrebet") and
		db.actor:object("part_tarakan") and
		db.actor:object("part_tarakan_strong") and
		db.actor:object("mutant_zombie_teeth") and
		db.actor:object("mutant_spleen_rat")
	then
		db.actor:give_info_portion("acv_ynat")
		send_archievement("Юный натуралист")
	end

	if has_alife_info("mm_opt") and section ~= "separator" then
		has_cheated_item()
	end
end

-- использование предмета
function on_use_item(obj)
	local section = obj:section()
	if not has_alife_info("acv_tera") and has_all(medicals, "acv_tera", section) then
		db.actor:give_info_portion("acv_tera")
		send_archievement("Терапевт")
	end
	
	if not has_alife_info("acv_gurman") and (section == "vorona_egg" or section == "mozg" or section == "bezoar" or section == "mushroom") then
		db.actor:give_info_portion("acv_gurman")
		send_archievement("Гурман")
	end

	if section == "sweetness" then
		acv_count_event("acv_mars", 20, "Марсианин")
	elseif section == "suvorotka" then
		acv_count_event("acv_nar", 20, "Наркоман")
	elseif section == "conserva" then
		acv_count_event("acv_kons", 40, "Консерватор")
	elseif section == "kolbasa" then
		acv_count_event("acv_klb", 40, "Колбасник")
	elseif section == "bread" then
		acv_count_event("acv_bul", 40, "Булочник")
	end
end

-- получение поршня
function on_info(info_id)
	if not has_alife_info("acv_rem") and
		has_alife_info("dolgovazyi_toolkit_done") and
		has_alife_info("dolgovazyi_voen2_done") and
		has_alife_info("vasily_toolkit_done") and
		has_alife_info("dimak_toolkit_done") and
		has_alife_info("atp_propusk_shurup_done") and
		has_alife_info("petr_sidor_vzyt_done") and
		has_alife_info("sidor_amulet_vzyt_done") and
		has_alife_info("sak_repair_box_done")
	then
		db.actor:give_info_portion("acv_rem")
		send_archievement("Ремонтник")
	end

	if not has_alife_info("acv_paparacci") and
		not has_alife_info("foto_ohota_fail") and
		has_alife_info("odnonogiy_foto_done") and
		has_alife_info("izomorf_dialog_have") and
		has_alife_info("izomorf_dialog_done") and
		has_alife_info("foto_ohota_done") and
		has_alife_info("foto_anomaly_done") and
		has_alife_info("silent_hunt_done") and
		has_alife_info("ohota_wolf_done") and
		has_alife_info("volna_foto_done") and
		has_alife_info("bar_dolg_petrenko_electra_flash_done") and
		has_alife_info("foto_strelok_done")
	then
		db.actor:give_info_portion("acv_paparacci")
		send_archievement("Папарацци")
	end

	if not has_alife_info("acv_etolog") and
		not has_alife_info("foto_ohota_fail") and
		has_alife_info("izomorf_dialog_have") and
		has_alife_info("izomorf_dialog_done") and
		has_alife_info("foto_ohota_done") and
		has_alife_info("silent_hunt_done") and
		has_alife_info("ohota_wolf_done") and
		has_alife_info("bar_dolg_petrenko_electra_flash_done")
	then
		db.actor:give_info_portion("acv_etolog")
		send_archievement("Этолог")
	end
end

local foods = {
	["kolbasa"] = true,
	["conserva"] = true,
	["bread"] = true,
	["sandwich"] = true,
	["sweetness"] = true
}
local params = {}

-- получение подсчитываемого предмета
function on_receive_count_item(obj)
	local section = obj:section()

	if (not foods[section] and
		section ~= "vodka" and
		section ~= "af_buliz" and
		not isMagazinedWeapon(obj))
		or 
		(has_alife_info("acv_food") and
		has_alife_info("acv_vodka") and
		has_alife_info("acv_buliz") and
		has_alife_info("acv_weapon"))
	then return end
	
	params.food = 0
	params.vodka = 0
	params.buliz = 0
	params.wpn = 0
	
	db.actor:inventory_for_each(count_objects)
	
	if not has_alife_info("acv_food") and params.food >= 200 then
		db.actor:give_info_portion("acv_food")
		send_archievement("Хлеборезка")
	elseif not has_alife_info("acv_vodka") and params.vodka >= 300 then
		db.actor:give_info_portion("acv_vodka")
		send_archievement("Закодированный")
	elseif not has_alife_info("acv_buliz") and params.buliz >= 40 then
		db.actor:give_info_portion("acv_buliz")
		send_archievement("Каменщик")
	elseif not has_alife_info("acv_weapon") and params.wpn >= 100 then
		db.actor:give_info_portion("acv_weapon")
		send_archievement("Терминатор")
	end
	
	params = {}
end
function count_objects(item)
	params.sect = item:section()
	
	if foods[params.sect] then
		params.food = params.food+1
	elseif params.sect == "vodka" then
		params.vodka = params.vodka+1
	elseif params.sect == "af_buliz" then
		params.buliz = params.buliz+1
	elseif isMagazinedWeapon(item) then
		params.wpn = params.wpn+1
	end
end

function send_archievement(text)
	amk.start_timer("send_archievement", 2.5, text)
end
function send_archievement_chunk(text)
	local acv_text = "%c[255,255,255,0]Новое достижение\\n%c[255,255,185,0]"..text
	db.actor:give_game_news(acv_text, "ui\\ui_iconsTotal", Frect():set(747,517,83,47), 0, 20000)
	xr_sound.get_safe_sound_object([[device\pda\pda_objective]]):play(db.actor, 0, sound_object.s2d)
	
	local hud = get_hud():AddCustomStatic("main_task", true)
	hud:wnd():SetTextST(acv_text)
	hud.m_endTime = time_global()/1000+10
end

function send_umer_info(obj)
	local npc_name = get_npc_name(obj)

	amk.send_tip("%c[255,255,0,0]Зафиксирована смерть сталкера по кличке "..npc_name.."%c[default]", "ЛОКАЛЬНАЯ СЕТЬ", 0, 15, "questman_death", "questman_death")
	local hud = get_hud():AddCustomStatic("main_task", true)
	hud:wnd():SetTextST("%c[255,255,0,0]Погиб сталкер:\\n"..npc_name)
	hud.m_endTime = time_global()/1000+10

	db.actor:give_info_portion("acv_umer")
end
function get_npc_name(obj)
	local tbl = amk.read_stalker_params(obj)
	return tbl.charname
end

function mm_opt()
	if level.present() and (db.actor ~= nil) and db.actor:alive() then
		db.actor:give_info_portion("mm_opt")
	end
	amk.start_timer("mm_opt", 0.2)
end
