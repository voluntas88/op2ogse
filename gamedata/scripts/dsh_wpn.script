-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_update", fun = this.on_update })
end


local last_ammo_n, last_weapon_state

function on_update( delta )
  local wpn = db.actor:active_item()
  if not wpn then return end
  if not wpn:is_weapon() then return end
  local state = wpn:get_hud_item_state()
  if state == last_weapon_state then
    if state == weapon_states.fire then
      local ammo_n = wpn:get_ammo_in_magazine()
      if ammo_n ~= last_ammo_n then
        last_ammo_n = ammo_n
        ogse_signals.get_mgr():call( "on_actor_fire", wpn )
      end
    end
  else
    if state == weapon_states.fire then
      last_ammo_n = wpn:get_ammo_in_magazine()
      ogse_signals.get_mgr():call( "on_actor_fire", wpn )
    end
    last_weapon_state = state
  end
end


function bind( obj )
  obj:bind_object( wpn_binder( obj ) )
end


class "wpn_binder"( object_binder )
function wpn_binder:__init( obj ) super( obj )
  self.sm = ogse_signals.get_mgr()
  self.sm:call( "on_wpn_init", obj )
end


function wpn_binder:net_spawn( data )
  if not object_binder.net_spawn( self, data ) then
    return false
  end
  self:check_gl_mode()
  self.sm:call( "on_wpn_spawn", self.object )
  return true
end


function wpn_binder:update()
  self:check_gl_mode()
  self.sm:call( "on_wpn_update", self.object )
end


function wpn_binder:net_destroy()
  self.sm:call( "on_wpn_destroy", self.object )
  object_binder.net_destroy( self )
end


function wpn_binder:check_gl_mode()
  if self.check_gl_mode_t and self.check_gl_mode_t > time_global() then
    return
  end
  local has_gl = (
    self.object:is_weapon_gl()
    and (
      ogse_wpn_utils.get_grenade_launcher_status( self.object ) == 1
      or (
        ogse_wpn_utils.get_grenade_launcher_status( self.object ) == 2
        and ogse_wpn_utils.get_grenade_launcher_flag( self.object )
      )
    )
  )
  if has_gl then
    local gl_mode = ogse_wpn_utils.get_gl_mode( self.object )
    if self.last_gl_mode ~= nil then
      if self.last_gl_mode ~= gl_mode then
        self.sm:call( "on_wpn_gl_mode", self.object, gl_mode )
      end
    end
    self.last_gl_mode = gl_mode
  end
  self.check_gl_mode_t = time_global() + 100
end
