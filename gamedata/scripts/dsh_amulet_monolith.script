-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_drop_before_all", fun = this.on_drop })
  sm:subscribe({ signal = "on_take",            fun = this.on_take })
end


function on_take( obj )
  if obj:section() == "amulet" then
    subscribe()
  end
end


function on_drop( obj )
  if obj:section() == "amulet" then
    unsubscribe()
  end
end


local signals
function subscribe()
  if not signals then
    signals = {
      { signal = "on_npc_enemy_callback", fun = this.enemy_callback },
      { signal = "on_npc_hit",            fun = this.on_npc_hit     },
    }
    local sm = ogse_signals.get_mgr()
    for _, s in ipairs( signals ) do
      sm:subscribe( s )
    end
  end
end

function unsubscribe()
  if signals then
    local sm = ogse_signals.get_mgr()
    for _, s in ipairs( signals ) do
      sm:unsubscribe( s )
    end
    signals = nil
  end
end


function on_npc_hit( obj, amount, local_direction, who, bone_index )
  if not ( obj:is_stalker() and obj:character_community() == "monolith" ) then
    return
  end
  if not ( db.actor and who:id() == db.actor:id() ) then return end
  if db.actor:object( "amulet" ) then
    local tname  = script_name() .. ".hited"
    if not ogse_st_mgr.timer_exists( tname ) then
      dsh.start_gtimerDHMS(
        tname, math.random( 7 ), 0, 0, 0, script_name() .. ".forget_about_hit"
      )
    end
    for id, is_npc in pairs( db.creature ) do
      local npc = level.object_by_id( id )
      if
        npc and is_npc and npc:alive()
        and npc:character_community() == "monolith"
      then
        npc:set_relation( game_object.enemy, db.actor )
      end
    end
  end
end

function forget_about_hit() end


function enemy_callback( obj, enemy_st, result )
  if not ( obj:is_stalker() and obj:character_community() == "monolith" ) then
    return
  end
  if not db.actor then return end
  local valid, enemy = validate_enemy_object( enemy_st )
  if valid then
    local is_enemy = true
    if
      enemy:id() == db.actor:id()
      and db.actor:object( "amulet" )
      and not ogse_st_mgr.timer_exists( script_name() .. ".hited" )
    then
      is_enemy = false
    end
    if not is_enemy then
      obj:enable_memory_object( enemy, false )
      table.insert( result, is_enemy )
      return true
    end
  end
end
