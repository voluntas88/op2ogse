-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_before_first_update", fun = this.on_first_update })
  sm:subscribe({ signal = "on_before_spawn", fun = this.on_spawn })
end


local processed_info = {}
local vname          = "dsh_fixes.version"

function on_first_update()
  local fixes = {
    this.kill_journalist_npc,
    this.free_bar_visitors,
    this.free_bar_visitors_fix2,
    this.free_bar_ohotnik,
    this.free_kalmyak_marsh,
    this.free_marsh_exit_nebo,
    this.free_marsh_hunters,
    this.remove_ogse_relation_reverse_table,
    this.fix_zone_ameba,
    this.fix_prizrak_wpn,
    this.fix_val_rob_buying,
    this.fix_val_rob_buying,
    this.start_dsh_walking_job,
    this.fix_prizrak_gauss,
    this.fix_gener_spawn_tvari,
    this.fix_rx_wmgr_boxes,
    this.fix_nevid_monolit,
    this.free_aver_otshelnik,
    this.free_aver_hunter,
    this.fix_red_psy_dog_phantom,
    this.free_green_forest,
    this.free_stalker_forest_bashya,
    this.remove_marsh_ameba1,
    this.fix_crow_respawns,
    this.fix_taynik_alexandrych,
    this.fix_military_fotomuzhik,
    this.free_generators_orly,
    this.fix_af_pero,
    this.respawn_gavr_and_co, -- 29
    this.remove_padar_spawn_zombi_kukla_restrictor,
    this.fix_bandit_goodwill,
    this.fix_aes_battle_sounds,
    this.fix_pri_battle_sounds,
    this.fix_ogse_actor_conditions_mgr_cam_inert,
    this.fix_esc_bridge_pass_fire,
    this.respawn_gavr_and_co_2,
    this.fix_detector_suit,
    this.fix_mil_tush1,
    this.fix_grib_respawn,
    this.fix_horrortime_begin,
    this.fix_af_transform_cnt,
    this.fix_trade_dialog_timers,
    this.fix_trade_dialog_timers2,
    this.fix_stalk_semetskiy,
    this.fix_amk_anoms_generate_art,
    this.fix_trade_dialog_timers3,
    this.fix_kot_hos,
    this.fix_esc_buldozer22,
    this.fix_gg_need_sleep,
  }
  local version = ogse.load_var( vname, 0 )
  if version < table.getn( fixes ) then
    for i = version + 1, table.getn( fixes ) do
      fixes[ i ]( version )
    end
    ogse.save_var( vname, table.getn( fixes ), "u32" )
  end
  local fixes_on_info = {
    [ "vitamin_reyd_zadan_done" ] = {
      this.free_warlab_svobodovzu,
    },
    [ "borman_glushitel_done" ] = {
      this.free_freedom_limansk,
    },
    [ "derevny_zashita_done" ] = {
      this.free_lost_village_bandit,
      this.free_village_gulag_small,
    },
    [ "village_after_razborka" ] = {
      this.free_village_gulag_big,
    },
    [ "vkluchit_generator_done" ] = {
      this.free_generators_svoboda,
    },
    [ "spawn_kamen_udachy" ] = {
      this.free_hospital_black,
    },
  }
  for k, v in pairs( fixes_on_info ) do
    if db.actor:has_info( k ) and not processed_info[ k ] then
      log2( "%s: found fixes for '%s', applying...", script_name(), k )
      for _, f in ipairs( v ) do
        f()
        processed_info[ k ] = true
        local processed = ogse.load_var(
          script_name() .. ".processed_info", {}
        )
        table.insert( processed, k )
        ogse.save_var( script_name() .. ".processed_info", processed, "array" )
      end
    end
  end
end


function on_spawn()
  local processed = ogse.load_var( script_name() .. ".processed_info", {} )
  for _, k in ipairs( processed ) do
    processed_info[ k ] = true
  end
  fix_bar_barman()
  fix_bar_angar_zoneguard()
  fix_bar_zastava_guard_3()
  fix_marsh_barman()
  fix_mil_physic_object0034()
end


-- Сделать труп журналиста, который случайно заспаунился живым
function kill_journalist_npc()
  local sobj = alife():story_object( story_ids.journalist_npc )
  if sobj then
    local obj = level.object_by_id( sobj.id )
    if obj then
      obj:kill( obj )
    else
      ogse.kill_offline_npc( sobj )
    end
  end
end

function free_smart_terrain( name, skip_npc )
  local skip_npc_keys = {}
  if skip_npc then
    for _, v in ipairs( skip_npc ) do
      skip_npc_keys[ v ] = true
    end
  end
  local strn = smart_terrain.get_smart_terrain_by_name( name )
  for id, v in pairs( strn.npc_info ) do
    local sobj = alife():object( id )
    if not skip_npc_keys[ sobj:name() ] then
      local pk = xs_netpk.stalker( sobj )
      if pk:isOk() then
        local data = pk:get()
        local cd   = data.custom_data:getTable()
        cd.smart_terrains = nil
        data.custom_data:set( cd )
        pk:set( data )
      end
      smart_terrain.unregister_npc( sobj )
      sobj.smart_terrain_conditions = nil
      sobj:brain():update()
    end
  end
end


-- Убрать у сталкеров жесткую привязку к смарту, что бы они могли уходить.
function free_bar_visitors()
  free_smart_terrain( "bar_visitors" );
end
function free_bar_visitors_fix2( ver )
  -- выполнять только если уже выполнялся free_bar_visitors()
  if ver == 2 then
    free_smart_terrain( "bar_visitors" );
  end
end

function free_bar_ohotnik()
  free_smart_terrain( "bar_ohotnik", { "stalker_green_zahar" } );
end

function free_kalmyak_marsh()
  free_smart_terrain( "kalmyak_marsh", { "kalmyak" } );
end

function free_marsh_exit_nebo()
  free_smart_terrain( "marsh_exit_nebo", { "dyak", "esc_saha" } );
end

function free_marsh_hunters()
  free_smart_terrain( "marsh_hunters", { "marsh_dan" } );
end


function cleanup_respawners()
  se_respawn.iterate_respawners( function( respawner )
      if respawner.parent then return end
      local ids = {}
      for _, id in ipairs( respawner.spawned_obj ) do
        table.insert( ids, id )
      end
      for _, id in ipairs( ids ) do
        local sobj = alife():object( id )
        if sobj then
          local strn_id
          if ( IsStalker( sobj ) or IsMonster( sobj ) ) and sobj.smart_terrain_id then
            strn_id = sobj:smart_terrain_id()
          else
            strn_id = 65535
          end
          if strn_id ~= 65535 then
            local strn = alife():object( strn_id )
            if strn then
              if
                not smart_terrain.is_same_level_group(
                  object_level_name( strn ),
                  object_level_name( sobj )
                )
              then
                log2(
                  "[cleanup_respawners]: remove %s from %s: smart_terrain %s has different level group: %s and %s",
                  id, respawner:name(), strn:name(),
                  object_level_name( strn ),
                  object_level_name( sobj )
                )
                respawner:remove_spawned( id )
              end
            else
              log2(
                "[cleanup_respawners]: remove %s from %s: smart_terrain %s not found",
                id, respawner:name(), strn_id
              )
              respawner:remove_spawned( id )
            end
          end
        else
          log2( "[cleanup_respawners]: remove %s from %s (%s): not found", id, respawner:name(), tostring( respawner.amk_name ) )
          respawner:remove_spawned( id )
        end
      end
  end )
end


function remove_ogse_relation_reverse_table()
  ogse.delete_var( "ogse_relation_reverse_table" )
end


local zone_ameba = {
  [ "atp_anom_ameba"              ] =   221,
  [ "atp_zone_ameba1_1"           ] =   222,
  [ "atp_zone_ameba1_2"           ] =   223,
  [ "land_arhara_anom_ameba1"     ] =   897,
  [ "land_arhara_anom_ameba2"     ] =   898,
  [ "aver_zone_ameba1_1"          ] =  1012,
  [ "aver_zone_ameba1_2"          ] =  1013,
  [ "aver_zone_ameba1_3"          ] =  1014,
  [ "labirint_arhara_ameba1"      ] =   458,
  [ "labirint_arhara_ameba2"      ] =   459,
  [ "av_peshera_ameba1_verx"      ] =   541,
  [ "av_peshera_ameba1_niz1"      ] =   542,
  [ "av_peshera_ameba1_niz2"      ] =   543,
  [ "dcity_zone_ameba1_1"         ] =  1285,
  [ "dcity_zone_ameba1_2"         ] =  1286,
  [ "dcity_zone_ameba1_3"         ] =  1287,
  [ "dcity_zvezda1"               ] =  1288,
  [ "dcity_zvezda2"               ] =  1289,
  [ "gener_zone_ameba1_1"         ] =  1585,
  [ "gener_zone_ameba1_2"         ] =  1586,
  [ "gener_anom_ameba"            ] =  1587,
  [ "gener_zone_ameba1_3"         ] =  1631,
  [ "gen_anom_ameba_krusha"       ] =  1813,
  [ "gen_anom_ameba_zabor"        ] =  1851,
  [ "esc_zone_ameba1_elevator"    ] =  3809,
  [ "esc_zone_ameba1_bunker"      ] =  3810,
  [ "garbage_zone_ameba1_les"     ] =  3898,
  [ "agro_zone_ameba1_razvilka"   ] =  4462,
  [ "dark_zone_ameba1_ostanovka"  ] =  5242,
  [ "dark_zone_ameba1_zapravka"   ] =  5243,
  [ "military_zone_ameba1_ostanovka" ] = 7581,
  [ "yantar_zone_ameba1_ostrov"   ] =  8469,
  [ "yantar_zone_ameba1_garaz"    ] =  8470,
  [ "radar_zone_ameba1_uchenuy"   ] =  9205,
  [ "radar_zone_ameba1_vert"      ] =  9206,
  [ "radar_zone_ameba1_dom_kukla" ] =  9207,
  [ "prip_zone_ameba1_koleso"     ] = 10369,
  [ "stancia_2_zone_ameba1"       ] = 11430,
  [ "village_zone_ameba1_yma"     ] = 12910,
  [ "village_zone_ameba1_pole"    ] = 12911,
  [ "village_anom_ameba1"         ] = 13025,
  [ "marsh_zone_ameba1_mex_dvor"  ] = 13232,
  [ "marsh_zone_ameba1_vushka"    ] = 13233,
  [ "marsh_zone_ameba1_tele_baza" ] = 13234,
  [ "marsh_zone_ameba1_vagonu"    ] = 13235,
--  [ "marsh_ameba1"                ] = 13388,
  [ "marsh_ameba2"                ] = 13389,
  [ "marsh_ameba3"                ] = 13390,
  [ "peshera_arhara_ameba1"       ] = 13829,
  [ "puzir_zone_ameba1_u_vxoda"   ] = 14314,
  [ "puzir_zone_ameba1_zenter"    ] = 14315,
  [ "puzir_zone_ameba1_krest"     ] = 14316,
  [ "puzir_zone_ameba1_vert_zent" ] = 14317,
  [ "zat_zone_ameba1_sosnodub_00" ] = 15574,
  [ "zat_zone_ameba1_sosnodub_01" ] = 15575,
  [ "zat_zone_ameba1_sosnodub_02" ] = 15576,
  [ "zat_zone_ameba1_sosnodub_03" ] = 15577,
  [ "zat_zone_ameba1_sosnodub_04" ] = 15578,
}

function fix_zone_ameba()
  for n, id in pairs( zone_ameba ) do
    if not alife():object( n ) then
      log2( "fix_zone_ameba: %s not found, creating...", n )
      alife():create( id )
    end
  end
end


function fix_prizrak_wpn()
  local npcs = { "new_prizrak", "generators_prizrak", "chaes1_prizrak" }
  for _, name in ipairs( npcs ) do
    local sobj = alife():object( name )
    if sobj then
      alife():create(
        "wpn_dark_gauss",
        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
        sobj.id
      )
      alife():create(
        "ammo_gauss",
        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
        sobj.id
      )
    end
  end
end


function fix_val_rob_buying()
  local strn = smart_terrain.get_smart_terrain_by_name( "val_rob" )
  strn:lock_population( true )
end


function cleanup_rats()
  local levels = {
    [ "atp_for_test22" ] = true,
    [ "av_peshera"     ] = true,
--    [ "aver"           ] = true,
--    [ "dead_city"      ] = true,
    [ "l01_escape"     ] = true,
    [ "l02_garbage"    ] = true,
    [ "l03_agroprom"   ] = true,
    [ "l03u_agr_underground" ] = true,
    [ "l04_darkvalley" ] = true,
    [ "l04u_labx18"    ] = true,
    [ "l05_bar"        ] = true,
    [ "l06_rostok"     ] = true,
    [ "l07_military"   ] = true,
    [ "l08_yantar"     ] = true,
    [ "l10_radar"      ] = true,
    [ "l10u_bunker"    ] = true,
    [ "l11_pripyat"    ] = true,
--    [ "l12_stancia"    ] = true,
--    [ "l12_stancia_2"  ] = true,
--    [ "l12u_control_monolith" ] = true,
--    [ "l12u_sarcofag"  ] = true,
    [ "marsh"          ] = true,
    [ "peshera"        ] = true,
    [ "puzir"          ] = true,
  }
  local sm = ogse_signals.get_mgr()
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if
      sobj and IsMonster( sobj )
      and sobj:smart_terrain_id() == 65535
      and levels[ object_level_name( sobj ) ]
      and not (
        se_respawn.get_respawner_by_npc_id( sobj.id )
        or dsh_respawn.get_respawner_by_npc_id( sobj.id )
      )
    then
      log2( "dsh: found extra %s on %s", sobj:name(), object_level_name( sobj ) )
      alife():release( sobj )
      sm:call( "on_release_npc", sobj.id )
    end
  end
end


function start_dsh_walking_job()
  local next_m = math.random( 0, 59 )
  dsh.start_gtimerDHMS(
    "dsh_walking_stalkers.periodic_job",
    0, 1, next_m, 0,
    "dsh_walking_stalkers.periodic_job"
  )
end


function fix_prizrak_gauss()
  local npcs = { "new_prizrak", "generators_prizrak", "chaes1_prizrak" }
  for _, name in ipairs( npcs ) do
    local sobj = alife():object( name )
    if sobj then
      local sid = sobj.m_story_id
      alife():release( sobj )
      alife():create( alife():spawn_id( sid ) )
    end
  end
end


function fix_gener_spawn_tvari()
  local tvari = {
    [ "gener_electro_chim1_podstanziy" ] =  1847,
    [ "gener_electro_chim2_podstanziy" ] =  1848,
    [ "generators_bloodsucker_strong1" ] =  1771,
    [ "gen_bloodsucker_na_krushe"      ] =  1816,
    [ "red_bloodsucker_strong_0002"    ] = 14936,
    [ "red_m_poltergeist_strong_flame" ] = 14943,
    [ "red_m_poltergeist_normal_tele"  ] = 14945,
    [ "red_m_poltergeist_normal_tele_0000" ] = 14946,
  }
  for name, spawn_id in pairs( tvari ) do
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: deleting %s", name )
      smart_terrain.unregister_npc( sobj )
      se_respawn.on_release_npc( sobj.id )
      dsh_respawn.on_release_npc( sobj.id )
      alife():release( sobj )
      log2( "dsh: creating %s, spawn_id = %s", name, spawn_id )
      sobj = alife():create( spawn_id )
      ASSERT( name == sobj:name(), "wrong spawn %s ~= %s", name, sobj:name() )
    end
  end
end


function fix_rx_wmgr_boxes()
  local boxes = {}
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if
      sobj and sobj:section_name() == "inventory_box"
      and sobj.position.y == -300
    then
      log2( "dsh: found %s on %s", sobj:name(), object_level_name( sobj ) )
      boxes[ id ] = sobj
    end
  end
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if sobj and boxes[ sobj.parent_id ] then
      log2( "dsh: found %s on %s", sobj:name(), object_level_name( sobj ) )
      alife():release( sobj )
    end
  end
  for id, sobj in pairs( boxes ) do
    alife():release( sobj )
  end
end


function fix_nevid_monolit()
  local sobj = alife():object( "nevid_monolit" )
  if sobj and sobj:alive() then
    local sid = sobj.m_story_id
    alife():release( sobj )
    sobj = alife():create( alife():spawn_id( sid ) )
    pk = xs_netpk.stalker( sobj )
    if pk:isOk() then
      local data = pk:get()
      data.visual_name = "new\\supernevidimka_orig"
      pk:set( data )
    end
  end
end


function free_aver_otshelnik()
  free_smart_terrain( "aver_otshelnik" );
end


function free_aver_hunter()
  free_smart_terrain( "aver_hunter" );
end


function fix_red_psy_dog_phantom()
  local sobj = alife():object( "red_psy_dog_phantom" )
  if sobj then
    log2( "dsh: deleting %s", sobj:name() )
    smart_terrain.unregister_npc( sobj )
    se_respawn.on_release_npc( sobj.id )
    dsh_respawn.on_release_npc( sobj.id )
    alife():release( sobj )
  end
end


local bar_walk_fixes = {
  [ "bar_barman" ] = "bar_barman_hole_walk",
  [ "bar_dolg_bunker_0002" ] = "bar_dolg_bunker_guard_5_walk",
}

function fix_bar_barman()
  if level.name() == "l05_bar" then
    for name, path in pairs( bar_walk_fixes ) do
      local sobj = alife():object( name )
      if sobj then
        local patrol = patrol( path )
        alife():teleport_object(
          "", patrol:point( 0 ),
          patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ),
          sobj.id
        )
      end
    end
  end
end


function free_green_forest()
  free_smart_terrain( "green_forest" );
end


function free_stalker_forest_bashya()
  free_smart_terrain( "stalker_forest_bashya" );
end


function remove_marsh_ameba1()
  local sobj = alife():object( "marsh_ameba1" )
  if sobj then
    alife():release( sobj )
  end
end


function free_warlab_svobodovzu()
  free_smart_terrain( "warlab_svobodovzu" );
end


function free_freedom_limansk()
  free_smart_terrain( "freedom_limansk" );
end


function free_lost_village_bandit()
  free_smart_terrain( "lost_village_bandit" );
end


function free_village_gulag_small()
  free_smart_terrain( "village_gulag_small" );
end


function free_village_gulag_big()
  free_smart_terrain( "village_gulag_big" );
end


function fix_crow_respawns()
  local sm = ogse_signals.get_mgr()
  for id = 1, 65534 do
    local crow = alife():object( id )
    if crow and string.find( crow:name(), "^m_crow") then
      sm:call( "on_release_npc", id )
      alife():release( crow )
    end
  end
end


function fix_taynik_alexandrych()
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if sobj and sobj:section_name() == "m_inventory_box_alex_upiter" then
      alife():release( sobj )
      buusty_dialog.taynik_alexandrych_spawn()
      break
    end
  end
end


function fix_military_fotomuzhik()
  local names = { "military_fotomuzhik", "milit_zapas_fotomuzhik " }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj and sobj:alive() then
      pk = xs_netpk.stalker( sobj )
      if pk:isOk() then
        local data = pk:get()
        data.visual_name = "new\\supernevidimka_orig"
        pk:set( data )
      end
    end
  end
end


function free_generators_orly()
  free_smart_terrain( "generators_orly", { "zemlyk" } );
end


function fix_af_pero()
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if sobj and sobj:section_name() == "af_pero" then
      log2( "dsh: found %s", sobj:name() )
      local obj = level.object_by_id( sobj.id )
      if obj then
        obj:set_condition( 1 )
      end
      local tbl = amk.get_item_params( sobj )
      tbl.condition = 1
      amk.set_item_params( tbl, sobj )
    end
  end
end


function respawn_gavr_and_co()
  local sids = {
    [ 9623 ] = "mil_trader_gavr",
    [ 9624 ] = "mil_gavr_bodyguard1",
    [ 9625 ] = "mil_gavr_bodyguard2",
  }
  for sid, sect in pairs( sids ) do
    while alife():story_object( sid ) do
      local sobj = alife():story_object( sid )
      if sobj then
        log2(
          "dsh: found %s ( %s, %s )",
          sobj:name(), sobj:community(), object_level_name( sobj )
        )
        local pk = xs_netpk.stalker( sobj )
        if pk:isOk() then
          local data = pk:get()
          log2( "dsh: cd = %s", data.custom_data:getString() )
        end
        local strn_id = sobj:smart_terrain_id()
        if strn_id ~= 65535 then
          local strn = alife():object( strn_id )
          if strn then
            log2( "dsh: smart_terrain = %s", strn:name() )
            smart_terrain.unregister_npc( sobj )
          end
        end
        ogse_signals.get_mgr():call( "on_release_npc", sobj.id )
        alife():release( sobj )
      end
    end
  end
  if
    db.actor:has_info( "informator_pda_done" )
    and not db.actor:has_info( "info_gavr_dead" )
  then
    new_spawn.bar_informator()
  end
end


function remove_padar_spawn_zombi_kukla_restrictor()
  if db.actor:has_info( "muha_kukla_have" ) then
    local sobj = alife():object( "padar_spawn_zombi_kukla_restrictor" )
    if sobj then
      log2( "dsh: found %s", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_bandit_goodwill()
  local goodwill = relation_registry.community_goodwill(
    "bandit" , db.actor:id()
  )
  if goodwill < 0 then
    log2( "dsh: fixing bandits goodwill: %s -> 0", goodwill )
    relation_registry.set_community_goodwill( "bandit" , db.actor:id(), 0 )
  end
end


function fix_aes_battle_sounds()
  local names = {
    "aes_space_restrictor_sound_battle_0000",
    "aes_space_restrictor_sound_battle_0001",
  }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_marsh_barman()
  if level.name() == "marsh" then
    local sobj = alife():object( "marsh_barman" )
    if sobj then
      local patrol = patrol( "marsh_barman_walk" )
      alife():teleport_object(
        "", patrol:point( 0 ),
        patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ),
        sobj.id
      )
    end
  end
end


function fix_pri_battle_sounds()
  local names = {
    "pri_ambient_battle_sound_zone_0000",
    "pri_ambient_battle_sound_zone_0001",
    "pri_ambient_battle_sound_zone_0002",
    "pri_ambient_battle_sound_zone_0003",
  }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_ogse_actor_conditions_mgr_cam_inert()
  ogse.delete_var( "ogse_actor_conditions_mgr.cam_inert" )
  cmd( "cam_inert", "0" )
end


function fix_esc_bridge_pass_fire()
  db.actor:disable_info_portion( "esc_bridge_pass_fire" )
  db.actor:disable_info_portion( "sherstuk_enemy" )
end


function respawn_gavr_and_co_2( ver )
  -- выполнять только, если выполнялся respawn_gavr_and_co()
  if ver >= 29 then
    respawn_gavr_and_co()
  end
end


function fix_detector_suit()
  local obj = db.actor:object( "detector_suit" )
  if obj then
    local sobj = alife():object( obj:id() )
    if sobj then
      alife():release( sobj )
    end
  end
end


function free_generators_svoboda()
  free_smart_terrain( "generators_svoboda" );
end


function free_hospital_black()
  free_smart_terrain( "hospital_black" );
end


function fix_mil_tush1()
  local respawners = {
    "av_peshera_rat1",
    "av_peshera_rat2",
    "av_peshera_rat3",
    "av_peshera_rat4",
    "av_peshera_rat5",
    "esc_fracture",
    "dv_sak_1monstr",
    "mil_tush1",
    "mil_himer_family",
  }
  for _, name in ipairs( respawners ) do
    local resp = dsh_respawn.get_respawner( name )
    if resp then
      for _, v in ipairs( resp.spawned_obj ) do
        resp:remove_spawned( v )
      end
    end
  end
end


function fix_bar_angar_zoneguard()
  local sobj = alife():object( "bar_angar_zoneguard" )
  if not sobj then
    log2( "dsh: bar_angar_zoneguard not found, respawning..." )
    alife():create( 6759 )
  end
end


-- пересоздать дверь в оружейку свободы
function fix_mil_physic_object0034()
  if level.name() == "l07_military" then
    local sobj = alife():object( "mil_physic_object0034" )
    if sobj then
      alife():release( sobj )
      alife():create( 7854 )
    end
  end
end


function fix_grib_respawn()
  braad_test.grib_respawn()
end


function fix_horrortime_begin()
  log2( "dsh: starting up horror time timer" )
  meceniy_in_hell.horrortime_begin( true )
end


function fix_af_transform_cnt()
  dsh.reset_af_transform_cnt()
end


function fix_trade_dialog_timers()
  db.actor:disable_info_portion( "price_doktor" )
  dsh.start_trade_dialog_timer( "sidor", 168, 10 )
  dsh.start_trade_dialog_timer( "barman"   )
  dsh.start_trade_dialog_timer( "petrenko" )
  dsh.start_trade_dialog_timer( "skraga"   )
  dsh.start_trade_dialog_timer( "sakharov" )
  dsh.start_trade_dialog_timer( "sak"      )
end


function fix_trade_dialog_timers2()
  dsh.start_trade_dialog_timer( "kuznezov", 168, 10 )
  dsh.start_trade_dialog_timer( "jlob"     )
  dsh.start_trade_dialog_timer( "sherstyk" )
end


function fix_stalk_semetskiy()
  if db.actor:has_info( "odnonogiy_first_start" ) then
    local sobj = alife():object( "stalk_semetskiy" )
    if sobj then
      log2( "dsh: found %s", sobj:name() )
      alife():release( sobj )
      log2( "dsh: ... removed" )
    end
  end
end


function fix_amk_anoms_generate_art()
  ogse.delete_var( "amk_anoms.generate_art" )
end


function fix_trade_dialog_timers3()
  dsh.start_trade_dialog_timer( "voron" )
  dsh.start_trade_dialog_timer( "maks"  )
end


function fix_bar_zastava_guard_3()
  local sobj = alife():story_object( story_ids.bar_zastava_commander ) -- 518
  if not sobj then
    log2( "dsh: bar_zastava_commander not found, respawning..." )
    alife():create( alife():spawn_id( story_ids.bar_zastava_commander ) )
  end
end


function fix_kot_hos()
  if db.actor:has_info( "we_ne_chmuri" ) then
    local sobj = alife():object( "kot_hos" )
    if sobj then
      log2( "dsh: found %s", sobj:name() )
      alife():release( sobj )
      log2( "dsh: ... removed" )
    end
  end
end


function fix_esc_buldozer22()
  local sobj = alife():object( "esc_buldozer22" )
  if sobj then
    log2( "dsh: found %s", sobj:name() )
    alife():release( sobj )
    log2( "dsh: ... removed" )
  end
end


function fix_gg_need_sleep()
  log2( "dsh: starting gg_need_sleep timer ..." )
  dsh_sleep.run_gg_need_sleep_timer()
end
