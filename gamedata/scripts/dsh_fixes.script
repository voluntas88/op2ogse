-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_before_first_update", fun = this.on_first_update })
end


local vname = "dsh_fixes.version"

function on_first_update()
  local fixes = {
    this.kill_journalist_npc,
    this.free_bar_visitors,
    this.free_bar_visitors_fix2,
    this.free_bar_ohotnik,
    this.free_kalmyak_marsh,
    this.free_marsh_exit_nebo,
    this.free_marsh_hunters,
    this.remove_ogse_relation_reverse_table,
    this.fix_zone_ameba,
    this.fix_prizrak_wpn,
    this.fix_val_rob_buying,
    this.fix_val_rob_buying,
    this.start_dsh_walking_job,
    this.fix_prizrak_gauss,
    this.fix_gener_spawn_tvari,
  }
  local version = ogse.load_var( vname, 0 )
  if version < table.getn( fixes ) then
    for i = version + 1, table.getn( fixes ) do
      fixes[ i ]( version )
    end
    ogse.save_var( vname, table.getn( fixes ), "u32" )
  end
end


-- Сделать труп журналиста, который случайно заспаунился живым
function kill_journalist_npc()
  local sobj = alife():story_object( story_ids.journalist_npc )
  if sobj then
    local obj = level.object_by_id( sobj.id )
    if obj then
      obj:kill( obj )
    else
      ogse.kill_offline_npc( sobj )
    end
  end
end

function free_smart_terrain( name, skip_npc )
  local skip_npc_keys = {}
  if skip_npc then
    for _, v in ipairs( skip_npc ) do
      skip_npc_keys[ v ] = true
    end
  end
  local strn = smart_terrain.get_smart_terrain_by_name( name )
  for id, v in pairs( strn.npc_info ) do
    local sobj = alife():object( id )
    if not skip_npc_keys[ sobj:name() ] then
      local pk = xs_netpk.stalker( sobj )
      if pk:isOk() then
        local data = pk:get()
        local cd   = data.custom_data:getTable()
        cd.smart_terrains = nil
        data.custom_data:set( cd )
        pk:set( data )
      end
      smart_terrain.unregister_npc( sobj )
      sobj.smart_terrain_conditions = nil
    end
  end
end


-- Убрать у сталкеров жесткую привязку к смарту, что бы они могли уходить.
function free_bar_visitors()
  free_smart_terrain( "bar_visitors" );
end
function free_bar_visitors_fix2( ver )
  -- выполнять только если уже выполнялся free_bar_visitors()
  if ver == 2 then
    free_smart_terrain( "bar_visitors" );
  end
end

function free_bar_ohotnik()
  free_smart_terrain( "bar_ohotnik", { "stalker_green_zahar" } );
end

function free_kalmyak_marsh()
  free_smart_terrain( "kalmyak_marsh", { "kalmyak" } );
end

function free_marsh_exit_nebo()
  free_smart_terrain( "marsh_exit_nebo", { "dyak", "esc_saha" } );
end

function free_marsh_hunters()
  free_smart_terrain( "marsh_hunters", { "marsh_dan" } );
end


function cleanup_respawners()
  se_respawn.iterate_respawners( function( respawner )
      if respawner.parent then return end
      local ids = {}
      for _, id in ipairs( respawner.spawned_obj ) do
        table.insert( ids, id )
      end
      for _, id in ipairs( ids ) do
        local sobj = alife():object( id )
        if sobj then
          local strn_id
          if ( IsStalker( sobj ) or IsMonster( sobj ) ) and sobj.smart_terrain_id then
            strn_id = sobj:smart_terrain_id()
          else
            strn_id = 65535
          end
          if strn_id ~= 65535 then
            local strn = alife():object( strn_id )
            if strn then
              if
                not smart_terrain.is_same_level_group(
                  object_level_name( strn ),
                  object_level_name( sobj )
                )
              then
                log2(
                  "[cleanup_respawners]: remove %s from %s: smart_terrain %s has different level group: %s and %s",
                  id, respawner:name(), strn:name(),
                  object_level_name( strn ),
                  object_level_name( sobj )
                )
                respawner:remove_spawned( id )
              end
            else
              log2(
                "[cleanup_respawners]: remove %s from %s: smart_terrain %s not found",
                id, respawner:name(), strn_id
              )
              respawner:remove_spawned( id )
            end
          end
        else
          log2( "[cleanup_respawners]: remove %s from %s (%s): not found", id, respawner:name(), tostring( respawner.amk_name ) )
          respawner:remove_spawned( id )
        end
      end
  end )
end


function remove_ogse_relation_reverse_table()
  ogse.delete_var( "ogse_relation_reverse_table" )
end


local zone_ameba = {
  [ "atp_anom_ameba"              ] =   221,
  [ "atp_zone_ameba1_1"           ] =   222,
  [ "atp_zone_ameba1_2"           ] =   223,
  [ "land_arhara_anom_ameba1"     ] =   897,
  [ "land_arhara_anom_ameba2"     ] =   898,
  [ "aver_zone_ameba1_1"          ] =  1012,
  [ "aver_zone_ameba1_2"          ] =  1013,
  [ "aver_zone_ameba1_3"          ] =  1014,
  [ "labirint_arhara_ameba1"      ] =   458,
  [ "labirint_arhara_ameba2"      ] =   459,
  [ "av_peshera_ameba1_verx"      ] =   541,
  [ "av_peshera_ameba1_niz1"      ] =   542,
  [ "av_peshera_ameba1_niz2"      ] =   543,
  [ "dcity_zone_ameba1_1"         ] =  1285,
  [ "dcity_zone_ameba1_2"         ] =  1286,
  [ "dcity_zone_ameba1_3"         ] =  1287,
  [ "dcity_zvezda1"               ] =  1288,
  [ "dcity_zvezda2"               ] =  1289,
  [ "gener_zone_ameba1_1"         ] =  1585,
  [ "gener_zone_ameba1_2"         ] =  1586,
  [ "gener_anom_ameba"            ] =  1587,
  [ "gener_zone_ameba1_3"         ] =  1631,
  [ "gen_anom_ameba_krusha"       ] =  1813,
  [ "gen_anom_ameba_zabor"        ] =  1851,
  [ "esc_zone_ameba1_elevator"    ] =  3809,
  [ "esc_zone_ameba1_bunker"      ] =  3810,
  [ "garbage_zone_ameba1_les"     ] =  3898,
  [ "agro_zone_ameba1_razvilka"   ] =  4462,
  [ "dark_zone_ameba1_ostanovka"  ] =  5242,
  [ "dark_zone_ameba1_zapravka"   ] =  5243,
  [ "military_zone_ameba1_ostanovka" ] = 7581,
  [ "yantar_zone_ameba1_ostrov"   ] =  8469,
  [ "yantar_zone_ameba1_garaz"    ] =  8470,
  [ "radar_zone_ameba1_uchenuy"   ] =  9205,
  [ "radar_zone_ameba1_vert"      ] =  9206,
  [ "radar_zone_ameba1_dom_kukla" ] =  9207,
  [ "prip_zone_ameba1_koleso"     ] = 10369,
  [ "stancia_2_zone_ameba1"       ] = 11430,
  [ "village_zone_ameba1_yma"     ] = 12910,
  [ "village_zone_ameba1_pole"    ] = 12911,
  [ "village_anom_ameba1"         ] = 13025,
  [ "marsh_zone_ameba1_mex_dvor"  ] = 13232,
  [ "marsh_zone_ameba1_vushka"    ] = 13233,
  [ "marsh_zone_ameba1_tele_baza" ] = 13234,
  [ "marsh_zone_ameba1_vagonu"    ] = 13235,
  [ "marsh_ameba1"                ] = 13388,
  [ "marsh_ameba2"                ] = 13389,
  [ "marsh_ameba3"                ] = 13390,
  [ "peshera_arhara_ameba1"       ] = 13829,
  [ "puzir_zone_ameba1_u_vxoda"   ] = 14314,
  [ "puzir_zone_ameba1_zenter"    ] = 14315,
  [ "puzir_zone_ameba1_krest"     ] = 14316,
  [ "puzir_zone_ameba1_vert_zent" ] = 14317,
  [ "zat_zone_ameba1_sosnodub_00" ] = 15574,
  [ "zat_zone_ameba1_sosnodub_01" ] = 15575,
  [ "zat_zone_ameba1_sosnodub_02" ] = 15576,
  [ "zat_zone_ameba1_sosnodub_03" ] = 15577,
  [ "zat_zone_ameba1_sosnodub_04" ] = 15578,
}

function fix_zone_ameba()
  for n, id in pairs( zone_ameba ) do
    if not alife():object( n ) then
      log2( "fix_zone_ameba: %s not found, creating...", n )
      alife():create( id )
    end
  end
end


function fix_prizrak_wpn()
  local npcs = { "new_prizrak", "generators_prizrak", "chaes1_prizrak" }
  for _, name in ipairs( npcs ) do
    local sobj = alife():object( name )
    if sobj then
      alife():create(
        "wpn_dark_gauss",
        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
        sobj.id
      )
      alife():create(
        "ammo_gauss",
        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
        sobj.id
      )
    end
  end
end


function fix_val_rob_buying()
  local strn = smart_terrain.get_smart_terrain_by_name( "val_rob" )
  strn:lock_population( true )
end


function cleanup_rats()
  local levels = {
    [ "atp_for_test22" ] = true,
    [ "av_peshera"     ] = true,
--    [ "aver"           ] = true,
--    [ "dead_city"      ] = true,
    [ "l01_escape"     ] = true,
    [ "l02_garbage"    ] = true,
    [ "l03_agroprom"   ] = true,
    [ "l03u_agr_underground" ] = true,
    [ "l04_darkvalley" ] = true,
    [ "l04u_labx18"    ] = true,
    [ "l05_bar"        ] = true,
    [ "l06_rostok"     ] = true,
    [ "l07_military"   ] = true,
    [ "l08_yantar"     ] = true,
    [ "l10_radar"      ] = true,
    [ "l10u_bunker"    ] = true,
    [ "l11_pripyat"    ] = true,
--    [ "l12_stancia"    ] = true,
--    [ "l12_stancia_2"  ] = true,
--    [ "l12u_control_monolith" ] = true,
--    [ "l12u_sarcofag"  ] = true,
    [ "marsh"          ] = true,
    [ "peshera"        ] = true,
    [ "puzir"          ] = true,
  }
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if
      sobj and IsMonster( sobj )
      and sobj:smart_terrain_id() == 65535
      and levels[ object_level_name( sobj ) ]
      and not (
        se_respawn.get_respawner_by_npc_id( sobj.id )
        or dsh_respawn.get_respawner_by_npc_id( sobj.id )
      )
    then
      log2( "dsh: found extra %s on %s", sobj:name(), object_level_name( sobj ) )
      alife():release( sobj )
      se_respawn.on_release_npc( sobj.id )
      dsh_respawn.on_release_npc( sobj.id )
    end
  end
end


function start_dsh_walking_job()
  local next_m = math.random( 0, 59 )
  dsh.start_gtimerDHMS(
    "dsh_walking_stalkers.periodic_job",
    0, 1, next_m, 0,
    "dsh_walking_stalkers.periodic_job"
  )
end


function fix_prizrak_gauss()
  local npcs = { "new_prizrak", "generators_prizrak", "chaes1_prizrak" }
  for _, name in ipairs( npcs ) do
    local sobj = alife():object( name )
    if sobj then
      local sid = sobj.m_story_id
      alife():release( sobj )
      alife():create( alife():spawn_id( sid ) )
    end
  end
end


function fix_gener_spawn_tvari()
  local tvari = {
    [ "gener_electro_chim1_podstanziy" ] =  1847,
    [ "gener_electro_chim2_podstanziy" ] =  1848,
    [ "generators_bloodsucker_strong1" ] =  1771,
    [ "gen_bloodsucker_na_krushe"      ] =  1816,
    [ "red_bloodsucker_strong_0002"    ] = 14936,
    [ "red_m_poltergeist_strong_flame" ] = 14943,
    [ "red_m_poltergeist_normal_tele"  ] = 14945,
    [ "red_m_poltergeist_normal_tele_0000" ] = 14946,
    [ "red_psy_dog_phantom"            ] = 14924,
  }
  for name, spawn_id in pairs( tvari ) do
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: deleting %s", name )
      smart_terrain.unregister_npc( sobj )
      se_respawn.on_release_npc( sobj.id )
      dsh_respawn.on_release_npc( sobj.id )
      alife():release( sobj )
      log2( "dsh: creating %s, spawn_id = %s", name, spawn_id )
      sobj = alife():create( spawn_id )
      ASSERT( name == sobj:name(), "wrong spawn %s ~= %s", name, sobj:name() )
    end
  end
end