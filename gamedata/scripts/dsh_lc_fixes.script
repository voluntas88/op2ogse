-- -*- mode: lua; coding: windows-1251-dos -*-

local lc_fixes = {
  [ "atp_for_test22" ] = {     -- куда
    [ "l12_stancia_2" ] = {    -- откуда
      [ "set_actor_direction" ] =  3, -- направление взгляда
    },
  },
  [ "l02_garbage" ] = {     
    [ "atp_for_test22" ] = {
      [ "set_actor_direction" ] =  1.5,
    },
    [ "l03_agroprom" ] = {
      [ "set_actor_direction" ] =  1,
    },
  },
  [ "l04_darkvalley" ] = {
    [ "l01_escape" ] = {
      [ "set_actor_direction" ] =  0,
    },
    [ "l07_military" ] = {
      [ "set_actor_direction" ] =  2.5,
    },
  },
  [ "l07_military" ] = {
    [ "warlab" ] = {
      [ "set_actor_direction" ] = -1.7,
    },
  },
  [ "l10_radar" ] = {
    [ "red_forest" ] = {
      [ "set_actor_direction" ] =  1.5,
    },
  },
  [ "l11_pripyat" ] = {
    [ "atp_for_test22" ] = {
      [ "set_actor_direction" ] =  3,
    },
    [ "l12_stancia_2" ] = {
      [ "set_actor_direction" ] = -1.5,
    },
  },
  [ "l12_stancia_2" ] = {
    [ "l12u_sarcofag" ] = {
      [ "set_actor_direction" ] = -1,
    },
  },
  [ "l12u_sarcofag" ] = {
    [ "l12_stancia" ] = {
      [ "set_actor_direction" ] = -3,
    },
    [ "l12_stancia_2" ] = {
      [ "set_actor_direction" ] =  1.5,
    },
  },
  [ "hospital" ] = {
    [ "limansk" ] = {
      [ "set_actor_direction" ] =  3,
    },
    [ "lost_village" ] = {
      [ "set_actor_direction" ] =  3,
    },
  },
  [ "limansk" ] = {
    [ "hospital" ] = {
      [ "set_actor_direction" ] =  3,
    },
    [ "lost_village" ] = {
      [ "set_actor_direction" ] =  3,
    },
  },
  [ "marsh" ] = {
    [ "l01_escape" ] = {
      [ "set_actor_direction" ] = -1,
    },
  },
  [ "warlab" ] = {
    [ "l10_radar" ] = {
      [ "set_actor_direction" ] =  1.5,
    },
  },
}


function attach( sm )
  sm:subscribe({ signal = "on_first_update", fun = this.on_first_update })
  sm:subscribe({ signal = "on_before_spawn", fun = this.on_before_spawn })
  sm:subscribe({ signal = "on_spawn",        fun = this.on_spawn })
end


local level_has_changed = false
local need_actor_dir

function on_before_spawn()
  need_actor_dir = nil
  local lname      = level.name()
  local prev_lname = ogse.load_var( "prev_level_name", "" )
  if prev_lname ~= lname then
    level_has_changed = prev_lname
    if not has_alife_info( "teleport_started" ) then
      if lc_fixes[ lname ] and lc_fixes[ lname ][ prev_lname ] then
        need_actor_dir = lc_fixes[ lname ][ prev_lname ].set_actor_direction
      end
    end
    local sm = ogse_signals.get_mgr()
    sm:call( "on_before_spawn_another_level", lname, prev_lname )
  end
  ogse.save_var( "prev_level_name", lname )
end


function on_first_update()
  if need_actor_dir then
    db.actor:set_actor_direction( need_actor_dir )
  end
  local prev_lname = has_level_changed()
  if prev_lname then
    local sm = ogse_signals.get_mgr()
    sm:call( "on_first_update_another_level", level.name(), prev_lname )
  end
end


function has_level_changed()
  return level_has_changed
end


function on_spawn()
  local prev_lname = has_level_changed()
  if prev_lname then
    local sm = ogse_signals.get_mgr()
    sm:call( "on_spawn_another_level", level.name(), prev_lname )
  end
end
