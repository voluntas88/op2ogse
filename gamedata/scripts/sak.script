-- -*- mode: lua; coding: windows-1251-dos -*-
---------------------------------------------------------------------
-- Привет от Сяка 
---------------------------------------------------------------------

local math_random = math.random
local math_atan2 = math.atan2
local math_sin = math.sin
local math_cos = math.cos
local string_find = string.find
local string_format = string.format
local string_gsub = string.gsub

function set_mark_on_tajnik(section, pos, lv, gv)
	local inv_obj = alife():create(section, pos, lv, gv)
	level.map_add_object_spot_ser(inv_obj.id, "treasure", "Нужно проверить")
	news_manager.send_tip(db.actor, "Получена наводка на тайник", nil, nil, 10000)
	return inv_obj
end

function add_new_escape_100()
add_new_lc(9100,4426,"На Кордон","info_way100a",3)
end
function add_new_agroprom_101()
add_new_lc(9101,2826,"На Агропром","info_way101a",4)
end
function add_new_yantar_102()
add_new_lc(9102,4427,"На Янтарь","info_way102a",1)
end
function add_new_agroprom_103()
add_new_lc(9103,8355,"На Агропром","info_way103a",3)
end
function add_new_mil_104()
add_new_lc(9104,6941,"На Армейские Склады","info_way104a",4)
end
function add_new_rostok_105()
add_new_lc(9105,7482,"На Дикую Территорию","info_way105a",4)
end
function add_new_radar_106()
add_new_lc(9106,8356,"На Радар","info_way106a",1)
end
function add_new_darkvalley_107()
add_new_lc(9107,9109,"В Тёмную Долину","info_way107a",2)
end
function add_new_yantar_108()
add_new_lc(9108,9108,"На Янтарь","info_way108a",3)
end
function add_new_radar_109()
add_new_lc(9109,5157,"На Радар","info_way109a",2)
end
function add_new_mil_110()
add_new_lc(9110,5158,"На Армейские Склады","info_way110a",1)
end
function add_new_darkvalley_111()
add_new_lc(9111,7483,"В Тёмную Долину","info_way111a",3)
end
function add_new_military_01()
add_new_lc(1008,9390,"На Армейские Склады","info_way112a",3)
end
function add_new_military()
add_new_lc(592,6851,"На Армейские Склады","info_way113a",1)
end
--' болото-старая деревня
function add_new_rostok()
add_new_lc(97101,13109,"В Старую Деревню","info_way114a",1)
end
function add_new_to_garbage()
add_new_lc(11504,13822,"На Свалку","info_way_arhara_peshera_cvalka",2)
end
function add_new_to_agro()
add_new_lc(11505,13823,"На Агропром","info_way_arhara_peshera_agro",4)
end
--' открывается сразу 2 перехода
function add_new_to_peshera1()
add_new_lc(11502,3793,"В Пещеру","info_way_arhara_cvalka_peshera",4)
add_new_lc(11503,4395,"В Пещеру","info_way_arhara_agro_peshera",2)
end
--' кордон-болота
function add_new_to_peshera2()
add_new_lc(14002,2823,"На Болота","info_way_arhara_kordon_boloto",4)
end
function add_new_to_les()
add_new_lc(97071,5150,"В Забытый Лес","info_way_arhara_td_les",4)
end
function add_new_to_peshera3()
add_new_lc(97081,522,"В Пещеру","info_way_arhara_labirint_peshera",4)
end
function add_new_to_labirint()
add_new_lc(97021,13686,"В Лабиринт","info_way_arhara_peshera_labirint",2)
end
function add_new_labirint_to_yantar()
add_new_lc(11512,335,"На Янтарь","info_way_arhara_labirint_yantar",1)
end
function add_new_labirint_to_earth()
add_new_lc(11511,314,"На Неразведанную Землю","info_way_arhara_labirint_earth",1)
end
function add_new_yantar_to_labirint()
add_new_lc(11515,8352,"В Лабиринт","info_way_arhara_yantar_labirint",3)
end
function add_new_atp_to_pripyat()
add_new_lc(97041,94,"В Центральную Припять","info_way_arhara_atp_pripyat",1)
end
function add_new_atp_to_military()
add_new_lc(97091,132,"На Армейские Склады","info_way_arhara_atp_military",2)
end
function add_new_atp_to_kordon()
add_new_lc(97092,133,"На Кордон","info_way_arhara_atp_kordon",3)
end
function add_new_atp_to_svalka()
add_new_lc(97093,183,"На Свалку","info_way_arhara_atp_svalka",2)
end
--' Припять-Старая Деревня
function add_new_military_to_earth()
add_new_lc(97100,10243,"В Старую Деревню","info_way_arhara_pripyt_village",4)
end
--' открывается сразу 2 перехода
function add_new_td_to_earth()
add_new_lc(11513,5151,"На Неразведанную Землю","info_way_arhara_td_earth",4)
add_new_lc(11514,7478,"На Неразведанную Землю","info_way_arhara_military_earth",3)
end
function add_new_svalka_to_earth()
add_new_lc(12506,3792,"На Неразведанную Землю","info_way_arhara_svalka_earth",2)
end
function add_new_earth_to_labirint()
add_new_lc(11510,774,"В Лабиринт","info_way_arhara_earth_labirint",4)
end
--' открывается сразу 2 перехода
function add_new_radar_to_warlab()
add_new_lc(97094,9085,"В Варлаб","info_way_arhara_radar_warlab",4)
add_new_lc(97095,14961,"В Лабораторию Х-16","info_way_arhara_warlab_brainlab",4)
end
--' х18-Варлаб
function add_new_warlab_to_brainlab()
add_new_lc(97098,5867,"В Варлаб","info_way_arhara_x18_warlab",1)
end
function add_new_warlab_to_skladu()
add_new_lc(97097,14827,"На Армейские Склады","info_way_arhara_warlab_skladu",1)
end
function add_new_radar_na_red_forest()
add_new_lc(14091,9080,"В Красный лес","info_way_arhara_radar_forest",4)
end
function add_new_chaes2_to_atp()
add_new_lc(97099,11300,"На АТП","info_way_arhara_chaes2_atp",2)
end
function add_new_village_to_limansk()
add_new_lc(11529,12993,"В Лиманск","info_way_arhara_village_limansk",4)
end
function add_new_village_to_hospital()
add_new_lc(11531,12994,"В Госпиталь","info_way_arhara_village_hospital",1)
end
function add_new_chaes_to_generator()
add_new_lc(97103,10857,"На Генераторы","info_way_arhara_chaes_generator",3)
end
function add_new_hospital_to_agroprom()
add_new_lc(97104,2219,"На Агропром","info_way_arhara_hospital_agroprom",3)
end
function add_new_agroprom_to_marsh1()
add_new_lc(97105,4344,"На Болота","info_way_arhara_agroprom_marsh1",3)
end
function add_new_bar_to_atp()
add_new_lc(97001,6453,"На АТП","info_way_arhara_bar_atp",4)
end
function add_new_gener_to_pripyat()
add_new_lc(97106,1830,"В Центральную Припять","info_way_arhara_gener_pripyat",3)
end
function add_new_chaes2_to_chaes()
add_new_lc(97102,11299,"На ЧАЭС-1","info_way_arhara_chaes2_chaes",3)
end
function add_new_gener_to_hospital()
add_new_lc(11521,1558,"В Госпиталь","info_way_arhara_gener_hospital",1)
end
function add_new_warlab_to_generators()
add_new_lc(97096,14782,"На Генераторы","info_way_arhara_warlab_generators",1)
end
function add_new_limansk_to_generators()
add_new_lc(97107,12451,"На Генераторы","info_way_arhara_limansk_generators",2)
end
function add_new_forest_to_warlab()
add_new_lc(97108,14320,"В Варлаб","info_way_arhara_forest_warlab",1)
end
--' переходы МГ
function add_new_dcity()
add_new_lc(97109,1287,"В Лиманск","info_way_arhara_dcity_limansk",1)
add_new_lc(97110,1288,"На АТП","info_way_arhara_dead_city_atp",2)
add_new_lc(97111,1289,"На Дикую Территорию","info_way_arhara_dcity_rostok",3)
add_new_lc(97112,302,"В Мёртвый Город","info_way_arhara_atp_dead_city",4)
end
function add_new_dcity_to_zaton()
add_new_lc(97113,1446,"На Затон","info_way_arhara_dcity_zaton",2)
end
function add_new_lima_to_dead_city()
add_new_lc(97114,12395,"В Мёртвый Город","info_way_arhara_lima_dcity",2)
end

-- Убрана привязка к номеру секции - переделано на spawn_story_id. 
-- levchn больше не нужен. 
-- При добавлении сюда новых переходов прописывать им в алспавне spawn_story_id, равный story_id.
function add_new_lc(levch,levchn,levchm,info,dir)
  local objt = alife():story_object(levch)
  if not objt then
--  alife():create(levchn)
	alife():create(alife():spawn_id(levch))
  end
  local obj = alife():story_object(levch)
  if obj then
  level.map_add_object_spot(obj.id, "level_changer"..tostring(dir),levchm)
  db.actor:give_info_portion(info)
  info_received()
  end
end
function add_new_military_false()
local obj = alife():story_object(5212)
level.map_add_object_spot(obj.id, "level_changer1","На ЧАЭС")
  db.actor:give_info_portion("info_way_false")
  info_received()
end
function out_new_lc(levch,info)
  if not db.actor:has_info(info) then
    local objt = alife():story_object(levch)
    if objt then
      alife():release(objt)
    end
  end
end
function add_new_item_in(item,sidlh)
local nps = sidlh.id
amk.spawn_item_in_inv(item,nps) 
end
local krysyk_treasure
function add_new_lcitem()
amk.spawn_item("sak_document",vector():set(350,-51.74,-24.45),2031,93051) -- документ под трупом ученого в рж лесу
amk.spawn_item("rad_document6",vector():set(621.95,-42.64,187.38),1910,224619) -- дело в кунге у монолитовцув
amk.spawn_item("amk_zapiska",vector():set(-132.93,11.04,-203.2),629,105467) --записка на третьем этаже Агропрома
amk.spawn_item("sak_document2",vector():set(-80,-1.30,153),163,187916) -- документ  под жд насыпью Кордона
amk.spawn_item("garbage_pda",vector():set(-226,-7.37,-132.36),252,208345) -- ПДА в лагере бандитов на свалке
amk.spawn_item("rad_document6",vector():set(-28.4,-0.26,-173.55),676,211656) -- дело в вагончике Агропрома
amk.spawn_item("rad_pda",vector():set(530.7,-49.41,-241.61),2061,180657) -- ПДА в вагончике на Радаре
amk.spawn_item("rad_document6",vector():set(-139.6,-25.03,-355.6),19,116593) -- дело на кордоне
amk.spawn_item("sak_book4",vector():set(-3.77,-4.25,191.19),2195,97948) --книга доктора
amk.spawn_item("playboy3",vector():set(-212.99,-22.51,-126.06),59,40605) 
amk.spawn_item("playboy2",vector():set(112.87,-1.94,1.6),117,413895)
amk.spawn_item("playboy1",vector():set(138.57,-3.5,22.0),1237,37466)
amk.spawn_item("playboy4",vector():set(-156.23,1.44,-162.05),669,82783)
amk.spawn_item("playboy5",vector():set(-19.52,-3.22,-19.91),1593,287481)
amk.spawn_item("playboy6",vector():set(-52.11,-10.52,35.31),1608,257284)
amk.spawn_item("playboy7",vector():set(41.4,5.45,-84.15),1100,226116)
amk.spawn_item("playboy8",vector():set(-135.57,1.29,-523.72),832,22097)
amk.spawn_item("playboy9",vector():set(-6.19,-4.21,201.42),2195,94368)
amk.spawn_item("playboy10",vector():set(306.45,-38.06,-23.05),1930,69058)
amk.spawn_item("playboy11",vector():set(30.92,-2.46,-41.34),1997,20510)
	alife():create("playboy12",vector():set(139.89819335938,-6.5692377090454,-72.478149414063),577165,2830)
	alife():create("playboy13",vector():set(292.20834350586,13.639252662659,-155.84591674805),325954,3531)
--amk.spawn_item("m_inventory_seif",vector():set(306.47,-39.39,-26.22),1930,69058)
	for a=1000,20000,1 do
		local obj=alife():object(a)
		if obj and ((string_find(obj:name(),"af_") and not string_find(obj:name(),"esc_af_")  and not string_find(obj:name(),"pri_af_" ) and not string_find(obj:name(),"af_dumm")) or string_find(obj:name(),"esc_wpn")) then
			alife():release(obj,true)
		end
	end
end
function add_ak47()
amk.spawn_item("wpn_ak47",vector():set(108.5,7.74,-9.07),987,304788)
end
function add_doktor_book()
amk.spawn_item("sak_book4",vector():set(-3.49,-4.26,191.34),2195,96166)
end
function add_notebook()
amk.spawn_item("notebook",vector():set(23.87,-5.65,-18.38),1140,6287) 
end
-- Akill begin Изменены к-ты спавна дипломата + монстры
function add_diplomat()
alife():create("diplomat",vector():set(-100.60708618164,22.614040374756,-24.21527671814),505,1529)
akill.x16_mutant_spawn()
end
-- Akill end
function add_computer()
amk.spawn_item("computer",vector():set(-114.96,-2.23,8.18),2248,8511) 
end
function add_new_103item()
amk.spawn_item("quest_case_06",vector():set(-196.5,2.48,92.88),678,40284) --кейс в кунге дезертира
end
function add_sak_plan()
amk.spawn_item("sak_plan",vector():set(-213.13,2.96,92.58),535,22245) -- мешок плана в кунге дезертира 
end
function add_krot_pda()
amk.spawn_item("agroprom_pda",vector():set(254.866424,-0.201872,79.064804),498,428654) --ПДА в ЖД тоннеле Агропрома
end
function add_und_pda()
amk.spawn_item("und_pda",vector():set(-45.12,-4.01,-30.08),718,4466) --ПДА в подземелье Агропрома
end
function add_seif()
amk.spawn_item("inventory_sakbox_03",vector():set(15.52,-12.43,8.59),1156,5132) --Сейф в подземелье X-18
end
function give_seif(obj)
amk.remove_item_from_inventory_by_name(obj,db.actor)
amk.spawn_item("m_inventory_seif",vector():set(34.37,-3.37,-37.29),1997,21736)  --передача сейфа
end
-- Akill begin Изменены к-ты спавна декодера + монстры
function add_decoder()
alife():create("decoder1",vector():set(-60.656967163086,19.434055328369,-16.232734680176),1661,1530) --декодер в  X-16 возле главного пульта
akill.x16_mutant_spawn()
end
-- Akill end
function add_gauss()
amk.spawn_item("wpn_gungauss",vector():set(-126.11,0.91,-533.55),836,31356) --Гаусс-пистолет  в ТД
end
--function add_medusa_green()
--amk.spawn_item("af_medusa_green",vector():set(260.59,-9.82,-135),404,373051) --Изумрудная медуза на свалке
--end
function add_medusa_green()
local obj = alife():create("af_medusa_green",vector():set(5.3799324035645,-0.00055783987045288,222.37449645996),192846,2883)
end
function add_pellicle_red()
amk.spawn_item("af_dummy_pellicle_red",vector():set(-239.99,4.85,99.93),1362,13956) --Изумрудная медуза на Ростке
end
--function add_vyvert_green()
--amk.spawn_item("af_vyvert_green",vector():set(115.13,4.83,-409.26),942,311330) --Изумрудный выверт в ТД
--end
function add_blood_green()
	amk.spawn_item("af_blood_green",vector():set(55.34,1.27,40.89),1511,68094) --Изумрудная кровь на Янтаре 
	alife():create("yan_zombied_respawn_1",vector():set(75.406539916992,0.34422329068184,23.229085922241),79415,1512)
	alife():create("yan_zombied_respawn_2",vector():set(41.926971435547,0.037857890129089,20.751808166504),60400,1445)
	dsh.create_free_monster("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	dsh.create_free_monster("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	dsh.create_free_monster("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	dsh.create_free_monster("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	dsh.create_free_monster("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	dsh.create_free_monster("m_poltergeist_dd",vector():set(58.236850738525,-0.84842598438263,-20.68497467041),69709,1508)
	dsh.create_free_monster("electro_polter",vector():set(56.451206207275,0.046565324068069,-60.764457702637),68827,1516)
	dsh.create_free_monster("polter_xray",vector():set(27.053871154785,0.084938794374466,-9.735237121582),52620,1507)
	dsh.create_free_monster("controller_flame",vector():set(90.896003723145,0.028825730085373,12.075715065002),87194,1513)
	dsh.create_free_monster("m_controller_act",vector():set(15.076522827148,0.030788093805313,19.65348815918),46805,1445)
end
function add_battery_red()
amk.spawn_item("af_dummy_battery_red",vector():set(668.9,-45.79,-39.93),1896,227187) --Рубиновая батарейка на Радаре 
end
--function add_order()
--local obj = alife():story_object(9115)
--alife():create("rad_document7",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
--end
function add_two_corpses()
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(187.84,5.18,-360.68),938,386349)
	if IAmAStalker[obj:clsid()] then
		local tbl = amk.read_stalker_params(obj)
		tbl.sid = 48800
		tbl.health = 0
		tbl.updhealth = 0
		amk.write_stalker_params(tbl, obj)					
	end	
	alife():create("scaintist_docs",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(187.66,5.03,-375.97),938,386327)
	if IAmAStalker[obj:clsid()] then
		local tbl = amk.read_stalker_params(obj)
		tbl.sid = 48801
		tbl.health = 0
		tbl.updhealth = 0
		amk.write_stalker_params(tbl, obj)					
	end	
	amk.spawn_item("inventory_sakbox_05",vector():set(176.83,8.37,-375.96),938,377568)
end
function add_scaintist_body()
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(-46.53,-2.2,-98.36),2258,53082)
	if IAmAStalker[obj:clsid()] then
		local tbl = amk.read_stalker_params(obj)
		tbl.sid = 48802
		tbl.health = 0
		tbl.updhealth = 0
		amk.write_stalker_params(tbl, obj)					
	end	
	alife():create("scaintist_pda",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_agroprom_box()
	for a=1000,10000,1 do
	local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "agr_quest_case_02") then
		alife():release(obj, true)
		--dbglog("keis: "..a) ~5665
		end
	end	
	--amk.spawn_item("quest_case_02",vector():set(18.76,-2.23,-219.12),436,259029)
	dialogs.relocate_item_section(db.actor, "quest_case_02", "in")
end
-- Akill begin
function add_kontainer()
--	amk.spawn_item("inventory_sakbox_05",vector():set(378,-52,-179.20),2097,101537)
	alife():create("inventory_sakbox_05",vector():set(467.15960693359,-48.180206298828,-294.86013793945),155265,2063)
	dsh.create_free_monster("chimera_black",vector():set(486.33248901367,-48.54475402832,-236.83911132813),160400,2058)
	dsh.create_free_monster("zombie_beee",vector():set(544.77508544922,-50.461318969727,-251.75929260254),187962,2114)
	dsh.create_free_monster("zombie_blow",vector():set(545.21411132813,-57.409252166748,-226.63201904297),188356,1873)
	dsh.create_free_monster("zombie_hell",vector():set(568.07763671875,-60.318313598633,-221.79908752441),199631,1873)
	dsh.create_free_monster("bear",vector():set(514.51159667969,-50.558048248291,-283.08618164063),172856,2060)
	dsh.create_free_monster("chimera_weak",vector():set(478.98034667969,-54.138397216797,-254.24066162109),157244,2111)
	dsh.create_free_monster("controller_senator",vector():set(543.19293212891,-53.148582458496,-239.98249816895),187241,2114)
	dsh.create_free_monster("controller_babka",vector():set(563.63739013672,-62.943653106689,-199.03614807129),197039,1884)
end
function agroprom_wpm()
local obj = alife():story_object(9115)
alife():create("wpn_vintorez_m1",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	alife():create("zasada_tonnel_agro_2",vector():set(-120.86868286133,14.998485565186,-192.318359375),118958,642)
	alife():create("agro_elite_rpg",vector():set(-170.82591247559,5.3163747787476,-182.25466918945),66088,667)
	alife():create("zasada_tonnel_agro_1",vector():set(-121.89569091797,4.9972257614136,-198.87106323242),118189,617)
	alife():create("soldier_mines_regular",vector():set(-196.39508056641,7.3849902153015,-223.58135986328),39867,555)
	alife():create("soldier_mines_veteran",vector():set(-175.36352539063,7.3837895393372,-154.81077575684),61033,560)
	alife():create("soldier_mines_regular",vector():set(-106.75975036621,7.3841366767883,-136.29498291016),132868,696)
	alife():create("soldier_mines_veteran",vector():set(-108.10691833496,7.3828616142273,-207.12539672852),132051,552)
end
function add_books()
amk.spawn_item("sak_book1",vector():set(28.11,-12.07,38.93),1161,6530) 
amk.spawn_item("sak_book2",vector():set(-120.27,21.56,-32.65),1529,165) 
amk.spawn_item("sak_book3",vector():set(0.77,-19.45,24.89),2768,6203) 
end
function add_new_111item()
	alife():create("soldier_mines_veteran",vector():set(69.474830627441,0.55580735206604,25.300632476807),305190,671)
	alife():create("soldier_mines_regular",vector():set(63.35139465332,-0.20042996108532,-0.63388842344284),299977,462)
	alife():create("soldier_mines_veteran",vector():set(9.7593650817871,0.97461330890656,37.45044708252),250081,490)
	local obj = alife():create("dynamite",vector():set(54.160469055176,0.78570091724396,23.48705291748),292636,461)
	level.map_add_object_spot_ser(obj.id, "crlc_big", "Возможное местоположение динамита")
end
function dynamite_metka_delete()
	local obj
	for a=1,65534,1 do
	obj=alife():object(a)
	if obj and string.find(obj:name(),"dynamite") then
	level.map_remove_object_spot(obj.id,"crlc_big")
	break
	end
	end
end
function add_new_109item()
	alife():create("quest_case_05",vector():set(124.79997253418,2.2573802471161,-263.01544189453),321655,955)
end
-- Akill end
function info_received()
  amk.send_tip("","Новый путь!",0,10,"gen_info")
end
--function add_resiver()
--amk.spawn_item("sak_resiver",vector():set(-185.57,-3.58,94.89),338,39411) 
--end
function add_drug()
--amk.spawn_item("dogfrend",vector():set(-6.71,0.41,247.19),258,170000) 
amk.spawn_item("dogfrend",vector():set(80.702026367188,0.60556876659393,163.72595214844),364,249786) 
end
--function add_strelok_pda()
--amk.spawn_item("strelok_pda",vector():set(42.95,61.56,-26.25),2417,6406) 
--end
function info_strelok_pda()
  amk.send_tip("","Сталкер! Остановись!",0,10,"gen_info")
end
function info_artmod()
  amk.send_tip("","Новый артмод!",0,10,"gen_info")
end
function info_doktor()
  amk.send_tip("","Болотный доктор жив!",0,10,"gen_info")
end
function info_teleport()
  amk.send_tip("","Телепорт готов.",0,10,"gen_info")
end

local items_count=0
local itemin=nil

function have_item_namber(itm,need_namber)
	return amk_utils.inventory_search(itm, need_namber)
end
function create_items(npc,section,number)
        for i=1,number do
			alife():create(section, 
            npc:position(),
            npc:level_vertex_id(),  
            npc:game_vertex_id(),
            npc:id())
        end 
end
local reloc_params={}
local stalk
-- Спавн в инвентарь гг с выдачей сообщения.
function create_items_actor(itm_section,number)
	this.create_items(db.actor,itm_section,number)
	news_manager.relocate_item(db.actor, "in", itm_section)
end
-- функция удаления всех itm_section из инвентаря ГГ. Полезна, когда количество неизвестно
function out_item_all(itm_section)
	reloc_params.itm_section=itm_section
	db.actor:iterate_inventory(out_items_all_count,db.actor)
	news_manager.relocate_item(db.actor, "out", itm_section)
	reloc_params={}
end
function out_items_all_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section then
		amk.remove_item_from_inventory(item, actor)
	end
end
function out_item_namber(itm_section,need_number)
	reloc_params.itm_section=itm_section
	reloc_params.itm_cnt=need_number
	reloc_params.itm_cnt_found=0
	db.actor:iterate_inventory(checkout_items_count,db.actor)
	reloc_params.itm_cnt_found=0
	if reloc_params.itm_cnt_found<=reloc_params.itm_cnt then
		db.actor:iterate_inventory(out_items_count,db.actor)
	end
	news_manager.relocate_item(db.actor, "out", itm_section)
	reloc_params={}
end
function relocate_item_namber(stalker,itm_section,need_number)
	stalk=stalker
	reloc_params.itm_section=itm_section
	reloc_params.itm_cnt=need_number
	reloc_params.itm_cnt_found=0
	db.actor:iterate_inventory(checkout_items_count,db.actor)
	reloc_params.itm_cnt_found=0
	if reloc_params.itm_cnt_found<=reloc_params.itm_cnt then
		db.actor:iterate_inventory(reloc_items_count,db.actor)
	end
	news_manager.relocate_item(db.actor, "out", itm_section)
	reloc_params={}
end
function checkout_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section then
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end
function reloc_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section and reloc_params.itm_cnt_found<reloc_params.itm_cnt then
		alife():release(alife():object(item:id()))
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end
function out_items_count(actor,item)
	if item.section and item:section()==reloc_params.itm_section and reloc_params.itm_cnt_found<reloc_params.itm_cnt then
		amk.remove_item_from_inventory(item, actor)
		reloc_params.itm_cnt_found = reloc_params.itm_cnt_found + 1
	end
end

function make_kill_task_failed(actor,npc,p1,p2) 
  local nid=npc:id()
  if nid==db.actor:id() then
    nid=actor:id()
  end
  local targets=task_manager.amk_kill_targets()
  for n,v in pairs(targets) do
    if v.id==nid then
      task_manager.make_task_failed(v.task_id)
    end
  end  
end

function check_used_item(obj)
--[[if db.actor==nil or obj==nil then
	return
end]]
arc_main.get_item(obj)
local info=nil 
if level.name()=="l03_agroprom" and obj:section()=="amk_zapiska" then add_new_escape_100() amk.drop_item(db.actor,obj) amk.remove_item(obj) 
elseif level.name()=="l10_radar" and obj:section()=="rad_document6" then add_new_darkvalley_107() amk.drop_item(db.actor,obj) amk.remove_item(obj) 
elseif level.name()=="l03_agroprom" and obj:section()=="rad_document6" then info="info_artmod_rusty_thorn_buzz" amk.drop_item(db.actor,obj) amk.remove_item(obj) info_artmod()
elseif level.name()=="l01_escape" and obj:section()=="rad_document6" then info="info_artmod_rusty_kristall_mincer" amk.drop_item(db.actor,obj) amk.remove_item(obj)  info_artmod()
elseif level.name()=="l10_radar" and obj:section()=="sak_document" then add_new_radar_106() amk.drop_item(db.actor,obj) amk.remove_item(obj) 
elseif level.name()~="l03_agroprom" and db.actor:has_info("ratcatcher_order_done") then info="ratcatcher_out" 
elseif level.name()~="l05_bar" and db.actor:has_info("info_way_false") then info="informer_out" 
elseif not db.actor:has_info("info_way104a") and obj:section()=="ara_pda" then  add_new_rostok_105()  add_new_mil_104() 
elseif not db.actor:has_info("info_artmod_electra_flash_zharka") and obj:section()=="sak_document2" then info="info_artmod_electra_flash_zharka" info_artmod()
elseif not db.actor:has_info("info_artmod_drops_mincer") and obj:section()=="garbage_pda" then info="info_artmod_drops_mincer" info_artmod()
elseif not db.actor:has_info("info_artmod_ameba_mica_galant") and obj:section()=="rad_pda" then info="info_artmod_ameba_mica_galant" info_artmod()
elseif not db.actor:has_info("info_artmod_fireball_buzz") and obj:section()=="volkodav_pda" then info="info_artmod_fireball_buzz" info_artmod()
elseif obj:section()=="outfit_bandit_m1" and not db.actor:has_info("esc_shustryi_outfit") 
then info="esc_shustryi_outfit"
elseif obj:section()=="sak_book4" and not db.actor:has_info("doktor_alife") 
then info="doktor_alife" info_doktor()
end 
  if info==nil or db.actor:has_info(info) then
    return
  end
  db.actor:give_info_portion(info)
end

-- Akill последние 6 к-т новые
local point_drop={
    {x=-240, y=-7, z=300},
    {x=-250, y=-5, z=294},
	{x=55, y=18, z=157},
    {x=67, y=22, z=154},
	{x=7, y=-1, z=115},
    {x=12, y=1, z=125},
	{x=35, y=60, z=30}, 
	{x=17, y=50, z=35},
	{x=376, y=-1, z=15},
	{x=393, y=2, z=65},
	{x=80, y=8, z=-16},
	{x=88, y=12, z=-24},
	{x=7, y=3, z=11},
	{x=15, y=7, z=19},
	{x=-126, y=19, z=-28},
	{x=-134, y=23, z=-36}
	}

function check_droped_item(obj)
if db.actor==nil then
	return
end
	local actor = db.actor
arc_main.lose_item(obj)
local info=nil 
	local v = vector()
	if level.name()=="l07_military" and
		actor:has_info("yan_scientist_teleport_01_start") and
		obj:section()=="sak_resiver_yantar" and
		amk.check_npc_in_box(actor, point_drop[1],point_drop[2])~=false then
			info="yan_scientist_teleport_01_done"
			amk.remove_item(obj)
			amk.spawn_item("m_sak_resiver_yantar",v:set(-244.62,-5.98,299.94),1797,89408) 
	elseif level.name()=="l01_escape" and
		actor:has_info("yan_scientist_teleport_02_start") and
		obj:section()=="sak_resiver_yantar" and
		amk.check_npc_in_box(actor, point_drop[3],point_drop[4])~=false then
			info="yan_scientist_teleport_02_done"
			amk.remove_item(obj)
			amk.spawn_item("m_sak_resiver_yantar",v:set(62.99,29.23,154.39),97,359827) 
	elseif level.name()=="l11_pripyat" and
		actor:has_info("yan_scientist_teleport_03_start") and
		obj:section()=="sak_resiver_yantar" and
		amk.check_npc_in_box(actor, point_drop[5],point_drop[6])~=false then
			info="yan_scientist_teleport_03_done"
			amk.remove_item(obj)
			amk.spawn_item("m_sak_resiver_yantar",v:set(9.47,0.32,119.13),2166,113785)
	elseif level.name()=="l12_stancia" and
		actor:has_info("life_heart_sahar_start") and
		obj:section()=="sak_resiver_yantar" and
		amk.check_npc_in_box(actor, point_drop[9],point_drop[10])~=false then
			info="life_heart_sahar_have"
			amk.remove_item(obj)
			amk.spawn_item("m_sak_resiver_yantar",v:set(387.51,0.16,31.10),2384,168953)
-- Akill begin
	elseif level.name()=="l08u_brainlab" and
		db.actor:has_info("ohota_suker_start") and
		obj:section()=="poison_gaz_ballon" and
		amk.check_npc_in_box(actor, point_drop[11],point_drop[12])~=false then
			db.actor:give_info_portion("ohota_suker_have1")
			amk.remove_item(obj)
			alife():create("m_poison_gaz_ballon",v:set(84.25,10.17,-20.63),6077,1544)
	elseif level.name()=="l08u_brainlab" and
		db.actor:has_info("ohota_suker_start") and
		obj:section()=="poison_gaz_ballon" and
		amk.check_npc_in_box(actor, point_drop[13],point_drop[14])~=false then
			db.actor:give_info_portion("ohota_suker_have2")
			amk.remove_item(obj)
			alife():create("m_poison_gaz_ballon",v:set(11.52,5.59,15.10),4459,1537)
	elseif level.name()=="l08u_brainlab" and
		db.actor:has_info("ohota_suker_start") and
		obj:section()=="poison_gaz_ballon" and
		amk.check_npc_in_box(actor, point_drop[15],point_drop[16])~=false then
			db.actor:give_info_portion("ohota_suker_have3")
			amk.remove_item(obj)
			alife():create("m_poison_gaz_ballon",v:set(-130.45,21.56,-32.76),3,1529)
-- Akill end
	elseif level.name()=="l12u_sarcofag" and
		actor:has_info("strelok_pda_have") and
		obj:section()=="af_gold_fish" and
		amk.check_npc_in_box(actor, point_drop[7],point_drop[8])~=false then
			amk_mod.af_flash(obj) get_sarcofag_stancia()
	elseif obj:section()=="af_life_heart" and
		actor:has_info("life_heart_final") then
		deadman_to_life(obj)
	--elseif obj:section()=="pda_art_mod" then pda_art_mod.f_pda_art_mod_use(obj)
	elseif obj:section()=="af_hl" then deadman_to_life(obj)
end 
	  if info==nil or actor:has_info(info) then
    return
  end
	  actor:give_info_portion(info)
end

function agr_ratcatcher__id()
for a=5000,6000,1 do
		local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "agr_ratcatcher") then
		--dbglog("Entered: "..obj:name().." id "..a.." sid "..obj.m_story_id) -- id~5564
		amk.save_variable("agr_ratcatcher_id", a) 
		end
	end
end

-- список неписей, которых можно воскресить живым сердцем. 
-- story_id   = story_id непися
-- _umer = true - у непися есть поршень с приставкой "_umer"
-- info  = дополнительные поршни, которые выдаются при смерти
-- script = функция, которая воскрешает непися при скриптовом спавне
-- при добавлении непися в эту таблицу в info_arhara_way нужно добавить поршень "nu"..story_id, а также в алспауне прописать spawn_story_id, равное story_id
local nepis = {
	-- Кордон
	{story_id = 4, _umer = true},		-- Шустрый
	{story_id = 5, _umer = true},		-- Лис
	{story_id = 6, _umer = true},		-- Волк
	{story_id = 7, _umer = true},		-- Толик
	{story_id = 9, _umer = true},		-- Петруха
	{story_id = 22, _umer = true, info = {"esc_fanat_die"}},		-- Фанат
	{story_id = 32, _umer = true},		-- Кузнецов
	{story_id = 92, _umer = true},		-- Проводник
	-- Пещера
	{story_id = 19801},					-- Хабарыч
	{story_id = 19802},					-- Стаханов
	{story_id = 19803},					-- Фима Уголь
	-- Свалка
	{story_id = 107, _umer = true, info = {"gar_hellcar_death", "sar2_death_14"}},	-- Бес
	{story_id = 115, _umer = true},		-- Прапор
	{story_id = 9509, info = {"death_artem"}},		-- Кулинар
	{story_id = 9510, info = {"death_voron"}},		-- Ворон
	{story_id = 100, info = {"garbage_meetstalker_die", "sar2_death_10"}},	-- Серый
	{story_id = 104, _umer = true, info = {"gar_dm_novice_dead"}},			-- Юрик
	-- Агропром
	{story_id = 302, _umer = true, info = {"agr_krot_dead", "sar2_death_19"}},	-- Крот
	{story_id = 370, _umer = true, info = {"sar2_death_11"}},		-- Дезертир
	{story_id = 9506},					-- Шерстюк
--	{story_id = 14006},					-- Чук
--	{story_id = 14007},					-- Гек
	-- Забытый Лес
	{story_id = 30118, trup = true, script = "buusty_dialog.himik_resurrect()"},	-- Химик труп
	{story_id = 30124, script = "buusty_dialog.himik_resurrect()"},					-- Химик живой
	-- Темная Долина
	{story_id = 400, _umer = true},		-- Макс Любер
	{story_id = 406, _umer = true},		-- Пуля
	{story_id = 422, info = {"val_sos_dead", "val_sos_got_medkit"}},	-- Мессер
	{story_id = 425, info = {"val_borov_dead"}},	-- Боров
	{story_id = 9507},					-- Жила
	-- Бар
	{story_id = 505, _umer = true, info = {"sar2_death_41"}},		-- Иванцов
	{story_id = 506, _umer = true, info = {"sar2_death_42"}},		-- Петренко
	{story_id = 507, _umer = true, info = {"sar2_death_43", "bar_voronin_dead"}},	-- Воронин
	{story_id = 516, _umer = true},		-- Пличко
	{story_id = 19805},					-- Гарик
	{story_id = 515},					-- Осведомитель
	{story_id = 504},					-- Охотник
	{story_id = 510},					-- Бром (которому ружье принести нужно)
	{story_id = 607},					-- Лысый
	{story_id = 519, _umer = true},		-- Барин
	{story_id = 571},					-- Арни
	{story_id = 9619},					-- Фримен
	{story_id = 518},					-- Киценко (командир южного блокпоста)
	{story_id = 9613},					-- Захар
	-- Дикая Территория
	{story_id = 503, info = {"bar_heli_scene_professor_die", "sar2_death_13"}},	-- Круглов на ДТ
	-- Янтарь
	{story_id = 900, info = {"yan_scientist_die"}},	-- Круглов на Янтаре
	{story_id = 19028, info = {"chernomor_umer"}},	-- Черномор вылеченный
	-- Армейские Склады
	{story_id = 702, _umer = true},		-- Макс
	{story_id = 707, _umer = true},		-- Лукаш
	{story_id = 728, _umer = true},		-- Повар
	{story_id = 734, _umer = true},		-- Скряга
--	{story_id = 19804},					-- Витамин
	{story_id = 777888},				-- Шуруп
	{story_id = 19810},					-- Альфа 2012 (охранник на входе на базу Свободы)
	{story_id = 724},					-- Кэп (командир Барьера)
	{story_id = 725, trup = true},  -- Угрюмый из Деревни Кровососов
	-- ЧАЭС2
	{story_id = 9969, _umer = true, script = "kostya_dialog.tm_brother_2chaes_spawn()"},	-- Брат Тени Монолита
	-- Болота
	{story_id = 19811, info = {"dyak_dead"}},		-- Дьяк
	{story_id = 14003, info = {"kalmyak_dead"}},	-- Калмык
	-- ВП
	{story_id = 21005, info = {"akill_npc_dead"}, script = "akill.akill_npc_spawn()"},	-- Акилл
	-- Варлаб
	{story_id = 19809},					-- Сольвадор
	{story_id = 22005, _umer = true}, 	-- Лентяй
	-- НЗ
	{story_id = 9973},					-- Старик
	{story_id = 9974},					-- Отшельник
	-- Генераторы
	{story_id = 19806, _umer = true},	-- Земляк
	{story_id = 19807}					-- Андерсен
}
function deadman_to_life(art)
	local obj
	for a=1,#nepis do 
		obj = alife():story_object(nepis[a].story_id)
		if obj and not obj:alive() and obj.position:distance_to(db.actor:position()) < 2 then

			-- снимаем нужные поршни
			if not nepis[a].trup then
				db.actor:disable_info_portion("nu"..tostring(nepis[a].story_id))
			end
			if nepis[a]._umer then
				db.actor:disable_info_portion(obj:name().."_umer")
			end
			if nepis[a].info then
				for b=1,#nepis[a].info do 
					db.actor:disable_info_portion(nepis[a].info[b])
				end
			end

			--  воскрешаем
			level.start_stop_menu(level.main_input_receiver(), true)
			amk_mod.af_flash(art)
			amk.send_tip("%c[255,0,255,0]Обнаружен новый сталкер: "..archievements.get_npc_name(obj)..". Добавлен в базу данных сети.%c[default]", "ЛОКАЛЬНАЯ СЕТЬ", 0, 15, "questman_death")
			alife():release(obj)
			if nepis[a].script then
				loadstring(nepis[a].script)()
			else
				alife():create(alife():spawn_id(nepis[a].story_id))
			end
			return
		end
	end
end
function nepis_umer()
	local obj, name, nu
	for a=1,#nepis,1 do
		obj = alife():story_object(nepis[a].story_id)
		if  obj and not obj:alive() then
			name=obj:name()
			nu="nu"..tostring(nepis[a].story_id)
			
			if nepis[a]._umer then
				db.actor:give_info_portion(name.."_umer")
			end
			
			if not nepis[a].trup and not has_alife_info(nu) then
				db.actor:give_info_portion(nu)
				archievements.send_umer_info(obj)
			end
		end
	end
	
	if has_alife_info("mil_Svoboda_trader_plan_faze") and  has_alife_info("agr_ratcatcher_umer") then
	db.actor:give_info_portion("mil_Svoboda_trader_plan_2faze") add_sak_plan()
	elseif (has_alife_info("esc_vagon_wounded_umer") and has_alife_info("esc_stalker_fanat_umer") or has_alife_info("esc_wolf_umer")) and not has_alife_info("mil_volk_resiver_fail") then
	db.actor:give_info_portion("mil_volk_resiver_fail")
	elseif (has_alife_info("bar_dolg_ivancov_umer") or has_alife_info("mil_freedom_member0021_umer")) and not has_alife_info("bar_ivancov_rg6_fail") then
	db.actor:give_info_portion("bar_ivancov_rg6_fail")
	elseif (has_alife_info("about_life_heart_sahar") and has_alife_info("about_life_heart_sidor") and has_alife_info("about_life_heart_barman")) and not has_alife_info("about_life_heart_done") then
	db.actor:give_info_portion("about_life_heart_done")
	end
end

-- проверка для уборщика по списку воскрешаемых ЖС
function can_be_resurrected(obj)
	for a=1,#nepis do
		if obj.m_story_id == nepis[a].story_id then
--			get_console():execute("load ~#I#:"..string.format("Воскресить ЖС: "..obj:name()))
			return true
		end
	end
	return false
end

-- проверка что все квестовики живы
function all_questmen_alive()
	local obj
	for a=1,#nepis do
		obj = alife():story_object(nepis[a].story_id)
		if obj and not obj:alive() then
--			get_console():execute("load ~#I#:"..string.format("Мёртвый квестовик: "..nepis[a].story_id))
			return false
		end
	end
	return true
end

--[=[ старый код
local nepis={9501,4,5,6,7,9,22,32,92,104,107,115,302,370,400,406,505,506,507,516,702,707,728,734}
local nepis_id={9110,3288,3000,2963,2968,2981,3041,3021,3132,3855,3958,3876,4593,4625,5464,5467,6636,6635,6637,6643,7623,7627,7628,7629}
local nepis_logic={4,5,6,7,9,22,32,92,104,107} --шустрый, лис,волк,толик,петруха,фанат,кузнецов, проводник,юрик, бес
function new_sak_logic()
		--[[--local npis=nepis_logic[3]
		local obj=alife():story_object(npis)
		local tbl = amk.read_stalker_params(obj)
		dbglog("Entered: "..tbl.custom)
		tbl.custom="[smart_terrains]\nsak_lager = true"
		dbglog("Entered: "..obj:name().." sid-"..obj.m_story_id) --id~11017
		dbglog("Entered: "..tbl.custom)
		amk.write_stalker_params(tbl, obj)	
			--local tb2 = amk.read_stalker_params(obj)
			--dbglog("Entered: "..tb2.custom)--]]
end
function deadman_to_life(art)
	for a=1,#nepis,1 do 
		local npis=nepis[a]
		local npis_id=nepis_id[a]
		local obj=alife():story_object(npis)
		if  obj and IAmAStalker[obj:clsid()] and not obj:alive() then
			local name=obj:name()
			local posobj=obj.position
			local actorpos=db.actor:position()
			if (posobj:distance_to(actorpos) < 2) then 
			amk_mod.af_flash(art)
			set_npc_health(obj,npis_id)
			end
		end
	end
end
function set_npc_health(obj,nps_id)
	alife():release(obj)
	--local obj = alife():story_object(sid)  
	--if not obj then 
		alife():create(nps_id)
	--end				
end
]=]

function af_zone_off(af)
 local anom=amk_anoms.get_nearest_anomaly(db.actor)
 local sid=alife():object(anom)
  level.add_pp_effector("teleport.ppe", 1524, false)
  amk.remove_item(af)
  alife():release(sid,true)
end
function inv_item_cond(item,val)
local obj=db.actor:object(item)
	if obj~=nil then
	  obj:set_condition(val)
	end
end
function get_lc_data(obj)
	local packet = net_packet()
	obj:STATE_Write(packet)
	local t={}
	t.game_vertex_id = packet:r_u16()
	t.distance = packet:r_float()
	t.direct_control = packet:r_s32()
	t.level_vertex_id = packet:r_s32()
	t.object_flags = packet:r_s32()
	t.custom_data = packet:r_stringZ()
	t.story_id = packet:r_s32()
	t.spawn_story_id = packet:r_s32()
	local shape_count = packet:r_u8()
	t.shapes={}
	for i=1,shape_count do
	local shape_type = packet:r_u8()
	t.shapes[i]={}
	t.shapes[i].shtype=shape_type
	if shape_type == 0 then
	t.shapes[i].center = packet:r_vec3()
	t.shapes[i].radius = packet:r_float()
	else
	t.shapes[i].v1 = packet:r_vec3()
	t.shapes[i].v2 = packet:r_vec3()
	t.shapes[i].v3 = packet:r_vec3()
	t.shapes[i].offset = packet:r_vec3()
	end
	end
	t.restrictor_type = packet:r_u8()
	t.dest_game_vertex_id = packet:r_u16()
	t.dest_level_vertex_id = packet:r_s32()
	t.dest_position = packet:r_vec3()
	t.dest_direction = packet:r_vec3()
	t.dest_level_name = packet:r_stringZ()
	t.dest_graph_point = packet:r_stringZ()
	t.silent_mode = packet:r_u8()
	if packet:r_elapsed() ~= 0 then
		abort("left=%d", packet:r_elapsed())
	end
	return t
end

function set_lc_data(t,obj)
	local packet = net_packet()
	obj:STATE_Write(packet)
	packet:w_begin(t.game_vertex_id)
	packet:w_float(t.distance)
	packet:w_s32(t.direct_control)
	packet:w_s32(t.level_vertex_id)
	packet:w_s32(t.object_flags)
	packet:w_stringZ(t.custom_data)
	packet:w_s32(t.story_id)
	packet:w_s32(t.spawn_story_id)
	packet:w_u8(#t.shapes)
	for i=1,#t.shapes do
	packet:w_u8(t.shapes[i].shtype)
	if t.shapes[i].shtype == 0 then
	packet:w_vec3(t.shapes[i].center)
	packet:w_float(t.shapes[i].radius)
	else
	packet:w_vec3(t.shapes[i].v1)
	packet:w_vec3(t.shapes[i].v2)
	packet:w_vec3(t.shapes[i].v3)
	packet:w_vec3(t.shapes[i].offset)
	end
	end
	packet:w_u8(t.restrictor_type)
	packet:w_u16(t.dest_game_vertex_id)
	packet:w_s32(t.dest_level_vertex_id)
	packet:w_vec3(t.dest_position)
	packet:w_vec3(t.dest_direction)
	packet:w_stringZ(t.dest_level_name)
	packet:w_stringZ(t.dest_graph_point)
	packet:w_u8(t.silent_mode)
	packet:r_seek(0)
	obj:STATE_Read(packet, packet:w_tell())
end
local points_kordon={
    {position={x=-244.69,y=-14.27,z=-16.33},gv=67,lv=12579}, 
    {position={x=107.54,y=-7.14,z=1.09},gv=119,lv=408816}, 
	{position={x=71.48,y=1.92,z=158.79},gv=96,lv=362726}, 
	{position={x=33.69,y=5.02,z=407.89},gv=246,lv=565356}, 
    {position={x=220.57,y=7.62,z=100.55},gv=152,lv=511605} 
}
local points_yantar={
    {position={x=165.06,y=-8.19,z=-103.95},gv=1442,lv=131181}, 
    {position={x=92.58,y=0.02,z=-39.23},gv=1515,lv=87813},
	{position={x=34.48,y=0.04,z=18.19},gv=1445,lv=56341},
	{position={x=24.61,y=0.02,z=-62.60},gv=1505,lv=51069}, 
    {position={x=-60.17,y=-10.21,z=-202.66},gv=1447,lv=17529} 
}
local points_pripat={
    {position={x=49.78,y=-3.6,z=120.99},gv=2166,lv=161768}, 
    {position={x=191.20,y=-2.0,z=219.52},gv=2219,lv=260280}, 
	{position={x=164.51,y=-3.89,z=80.83},gv=2145,lv=250751}, 
	{position={x=-97.65,y=-2.4,z=71.81},gv=2140,lv=18233}, 
    {position={x=116.64,y=-0.61,z=216.98},gv=2163,lv=226288} 
}
local points_military={
    {position={x=81.65,y=-12.57,z=60.67},gv=1558,lv=379105}, 
    {position={x=-35.96,y=-21.29,z=375.80},gv=1821,lv=272475}, 
	{position={x=-264.86,y=-22.6,z=275.85},gv=1797,lv=72698},
    {position={x=-340.59,y=-13.62,z=388.84},gv=1847,lv=12469}
}
local points_stancia={
    {position={x=374.82,y=0,z=33.345},gv=2384,lv=161393} 
}
local out_points_kordon_sak={
    {position={x=-210,y=-20.53,z=-145.78},gv=61,lv=43273}}
local out_points_kordon={
    {position={x=301.11,y=13.31,z=276.43},gv=246,lv=565356}}
local out_points_yantar={
    {position={x=-60.78,y=-13.02,z=-253.92},gv=1454,lv=17204}}
local out_points_pripat={
    {position={x=52.17,y=-3.5,z=120.94},gv=2166,lv=164012}}
local out_points_military={
    {position={x=-94.71,y=-20.55,z=229.54},gv=1734,lv=220072}}
local out_points_sarcofag={
    {position={x=23.58,y=56,z=25.68},gv=2417,lv=5160}}	
function get_kordon_military() get_teleport("kordon","military",1,9121) end
function get_kordon_yantar() get_teleport("kordon","yantar",1,9121) end
function get_kordon_pripyat() get_teleport("kordon","pripat",1,9121) end
function get_pripyat_military() get_teleport("pripat","military",1,9122) end
function get_pripyat_yantar() get_teleport("pripat","yantar",1,9122) end
function get_pripyat_kordon() get_teleport("pripat","kordon",1,9122) end
function get_military_kordon() get_teleport("military","kordon",1,9123) end
function get_military_pripyat() get_teleport("military","pripat",1,9123) end
function get_military_yantar() get_teleport("military","yantar",1,9123) end
function get_yantar_military() get_teleport("yantar","military",1,9124) end
function get_yantar_kordon() get_teleport("yantar","kordon",1,9124) end
function get_yantar_pripyat() get_teleport("yantar","pripat",1,9124) end
function get_kordon_militaryr() get_teleport("kordon","military",0,9121) end
function get_kordon_yantarr() get_teleport("kordon","yantar",0,9121) end
function get_kordon_pripyatr() get_teleport("kordon","pripat",0,9121) end
function get_pripyat_militaryr() get_teleport("pripat","military",0,9122) end
function get_pripyat_yantarr() get_teleport("pripat","yantar",0,9122) end
function get_pripyat_kordonr() get_teleport("pripat","kordon",0,9122) end
function get_military_kordonr() get_teleport("military","kordon",0,9123) end
function get_military_pripyatr() get_teleport("military","pripat",0,9123) end
function get_military_yantarr() get_teleport("military","yantar",0,9123) end
function get_yantar_militaryr() get_teleport("yantar","military",0,9124) end
function get_yantar_kordonr() get_teleport("yantar","kordon",0,9124) end
function get_yantar_pripyatr() get_teleport("yantar","pripat",0,9124) end
function get_sarcofag_stancia() get_teleport("sarcofag","stancia",1,9125) end
function get_teleport(pos_out,pos_in,made,sidlc) local obj1, name_level, obj_tport local a, b
if     pos_out == "kordon"	then	a = out_points_kordon[1]
elseif pos_out == "pripat" 	then 	a = out_points_pripat[1]
elseif pos_out == "military" then 	a = out_points_military[1]
elseif pos_out == "yantar" 	then 	a = out_points_yantar[1]
elseif pos_out == "sarcofag" then 	a = out_points_sarcofag[1]
end
if made==0 then 
if     pos_in == "kordon"	then	name_level="l01_escape" 
b = points_kordon[math_random(#points_kordon)]
elseif pos_in == "pripat" 	then 	name_level="l11_pripyat" 
b = points_pripat[math_random(#points_pripat)]
elseif pos_in == "military" then 	name_level="l07_military" 
b = points_military[math_random(#points_military)]
elseif pos_in == "yantar" 	then 	name_level="l08_yantar" 
b = points_yantar[math_random(#points_yantar)] end
elseif made==1 then
if     pos_in == "kordon"	then	name_level="l01_escape" b = points_kordon[1]
elseif pos_in == "pripat" 	then 	name_level="l11_pripyat" b = points_pripat[1]
elseif pos_in == "military" then 	name_level="l07_military" b = points_military[1]
elseif pos_in == "yantar" 	then 	name_level="l08_yantar" b = points_yantar[1]
elseif pos_in == "stancia" 	then 	name_level="l12_stancia" b = points_stancia[1]  end end
obj1=alife():create("level_changer",vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
obj_tp=amk.spawn_item("zone_teleport",vector():set(a.position.x,a.position.y,a.position.z), a.gv, a.lv)
obj_tport=obj_tp.id
amk.save_variable("sak_teleport", obj_tport)  
if obj1 then local obj2 = alife():story_object(9120) local t = get_lc_data(obj2)
t.story_id = sidlc
t.dest_level_name = name_level
t.dest_position = vector():set(b.position.x,b.position.y,b.position.z)
t.dest_game_vertex_id = b.gv
t.dest_level_vertex_id = b.lv
t.silent_mode = 1
set_lc_data(t,obj1) end 
info_teleport()
end
function out_teleport()
local sid={9121,9122,9123,9124,9125}
local lev={"l01_escape","l11_pripyat","l07_military","l08_yantar","l12u_sarcofag"}
	for a=1,#sid,1 do
	local sidlc=sid[a]
	local lname=lev[a]	
	local obj=alife():story_object(sidlc)
		if obj and level.name()~=lname then
		local objt = amk.load_variable("sak_teleport", 0)
		alife():release(obj)
			if objt ~= 0 then
                alife():release(alife():object(objt), true)
            end
		amk.del_variable("sak_teleport")
		end
	end
--	show_time()
--	arc_main.actor_update() -- !!!
end
-- часы---------------ON------------------------
function show_time()
	    local hud = get_hud()
    local cs = hud:GetCustomStatic("hud_show_time")
	if not bind_stalker.scopeUsed then
    if cs == nil then
        hud:AddCustomStatic("hud_show_time", true)
        cs = hud:GetCustomStatic("hud_show_time")
    end
    local time_h = level.get_time_hours()
    local time_m = level.get_time_minutes()
		local msg = ""..(time_h >= 10 and "" or "0").."%d:"..(time_m >= 10 and "" or "0").."%d\\n"
			--[[if time_m >= 10 then
		if time_h>= 10 then
			msg = string_format("%d:%d\\n", time_h, time_m)
		else
			msg = string_format("0%d:%d\\n", time_h, time_m)
		end
        else
		if time_h>= 10 then
			msg = string_format("%d:0%d\\n", time_h, time_m)
		else
			msg = string_format("0%d:0%d\\n", time_h, time_m)
        end
			end]]
    if cs ~= nil then
			cs:wnd():SetText(string_format(msg, time_h, time_m))
		end
	else
		if cs then
			hud:RemoveCustomStatic("hud_show_time")
		end
    end
end
-- часы----------------OFF---------------------------
function readvu32u8(packet)
  local v={}
  local len=packet:r_s32()
  for i=1,len,1 do
    table.insert(v,packet:r_u8())
  end return v end
function readvu8u8(packet)
  local v={}
  local len=8
  for i=1,len,1 do
    table.insert(v,packet:r_u8())
  end return v end
function readvu32u16(packet)
  local v={}
  local len=packet:r_s32()
  for i=1,len,1 do
    table.insert(v,packet:r_u16())
  end return v end
function writevu32u8(pk,v)
  local len=#v
  pk:w_s32(len)
  for i=1,len,1 do
    pk:w_u8(v[i])
  end
end
function writevu8u8(pk,v)
  local len=8
  for i=1,len,1 do
    pk:w_u8(v[i])
  end
end
function writevu32u16(pk,v)
  local len=#v
  pk:w_s32(len)
  for i=1,len,1 do
    pk:w_u16(v[i])
  end
end
function parse_skeleton_packet(ret,stpk,updpk)
  ret.skeleton=stpk:r_stringZ()
  ret.skeleton_flags=stpk:r_u8()
  ret.source_id=stpk:r_u16()
  return ret end
function fill_skeleton_packet(ret,stpk,updpk)
  stpk:w_stringZ(ret.skeleton)
  stpk:w_u8(ret.skeleton_flags)
  stpk:w_u16(ret.source_id)
end
function parse_visual_packet(ret,stpk,updpk)
  ret.visual=stpk:r_stringZ()
  ret.vsu8u1=stpk:r_u8()
  return ret end
function fill_visual_packet(ret,stpk,updpk)
  stpk:w_stringZ(ret.visual)
  stpk:w_u8(ret.vsu8u1)
end
function parse_object_physic_packet(ret,stpk,updpk)
	ret.physic_type=stpk:r_s32()
	ret.mass=stpk:r_float()
	ret.fixed_bones=stpk:r_stringZ()
  return ret end
function fill_object_physic_packet(ret,stpk,updpk)
	stpk:w_s32(ret.physic_type)
	stpk:w_float(ret.mass)
	stpk:w_stringZ(ret.fixed_bones)
end
function parse_shape_packet(t,stpk,uppk)
	local shape_count = stpk:r_u8()
	t.shapes={}
	for i=1,shape_count do
		local shape_type = stpk:r_u8()
		t.shapes[i]={}
		t.shapes[i].shtype=shape_type
		if shape_type == 0 then
			t.shapes[i].center = stpk:r_vec3()
			t.shapes[i].radius = stpk:r_float()
		else
			t.shapes[i].v1 = stpk:r_vec3()
			t.shapes[i].v2 = stpk:r_vec3()
			t.shapes[i].v3 = stpk:r_vec3()
			t.shapes[i].offset = stpk:r_vec3()
		end
	end
end
function fill_shape_packet(t,stpk,updpk)
	stpk:w_u8(#t.shapes)
	for i=1,#t.shapes do
		stpk:w_u8(t.shapes[i].shtype)
		if t.shapes[i].shtype == 0 then
			stpk:w_vec3(t.shapes[i].center)
			stpk:w_float(t.shapes[i].radius)
		else
			stpk:w_vec3(t.shapes[i].v1)
			stpk:w_vec3(t.shapes[i].v2)
			stpk:w_vec3(t.shapes[i].v3)
			stpk:w_vec3(t.shapes[i].offset)
		end
	end
end
function parse_object_packet(ret,stpk,updpk)
  ret.gvid=stpk:r_u16()
  ret.obf32u1=stpk:r_float()
  ret.obs32u2=stpk:r_s32()
  ret.lvid=stpk:r_s32()
  ret.oflags=stpk:r_s32()
  ret.custom=stpk:r_stringZ()
  ret.sid=stpk:r_s32()
  ret.obs32u3=stpk:r_s32()
  return ret
end
function fill_object_packet(ret,stpk,updpk)
  stpk:w_u16(ret.gvid)
  stpk:w_float(ret.obf32u1)
  stpk:w_s32(ret.obs32u2)
  stpk:w_s32(ret.lvid)
  stpk:w_s32(ret.oflags)
  stpk:w_stringZ(ret.custom)
  stpk:w_s32(ret.sid)
  stpk:w_s32(ret.obs32u3)
end
function get_restrictor_data(sobj)
  local stpk=net_packet()
  local uppk=net_packet()
  sobj:STATE_Write(stpk)
  sobj:UPDATE_Write(uppk)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  local t={}
	parse_object_packet(t,stpk,uppk,size)
	parse_shape_packet(t,stpk,uppk,size)
	t.restrictor_type = stpk:r_u8()
  return t end
function set_restrictor_data(t,sobj)
  local stpk=net_packet()
  local uppk=net_packet()
  fill_object_packet(t,stpk,uppk)
  fill_shape_packet(t,stpk,uppk)
	stpk:w_u8(t.restrictor_type)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  sobj:STATE_Read(stpk,size)
  sobj:UPDATE_Read(uppk)
end
function get_destroyable_data(sobj)
  local stpk=net_packet()
  local uppk=net_packet()
  sobj:STATE_Write(stpk)
  sobj:UPDATE_Write(uppk)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  local t={}
  parse_object_packet(t,stpk,uppk,size)
  parse_visual_packet(t,stpk,uppk,size)
  parse_skeleton_packet(t,stpk,uppk,size)
  parse_object_physic_packet(t,stpk,uppk,size)
  return t end
function set_destroyable_data(t,sobj)
  local stpk=net_packet()
  local uppk=net_packet()
	fill_object_packet(t,stpk,uppk)
	fill_visual_packet(t,stpk,uppk)
	fill_skeleton_packet(t,stpk,uppk)
	fill_object_physic_packet(t,stpk,uppk)
  local size=stpk:w_tell()
  local size1=uppk:w_tell()
  stpk:r_seek(0)
  uppk:r_seek(0)
  sobj:STATE_Read(stpk,size)
  sobj:UPDATE_Read(uppk)
end
function switch_timer_stancia()
	for a=2000,2100,1 do
		local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "aes_space_restrictor_timer") then
		local params=get_restrictor_data(obj)
		--dbglog("Entered: "..obj:name().." id-"..a.." sid-"..obj.m_story_id) --id~2031
		params.custom="[logic]\ncfg = scripts\\aes\\aes_space_timer.ltx"
		set_restrictor_data(params,obj)
		end
	end
end
function switch_mil_matugalnik()
	for a=10500,11500,1 do
		local obj=alife():object(a)
		if (obj and obj.name and obj:name() == "mil_physic_destroyable_object_0046") then
		local params=get_destroyable_data(obj)
		--dbglog("Entered: "..params.custom)
		--dbglog("Entered: "..obj:name().." id-"..a.." sid-"..obj.m_story_id) --id~11017
		params.custom="[logic]\ncfg = scripts\\mil\\matugalnik.ltx"
		--dbglog("Entered: "..params.custom)
		set_destroyable_data(params,obj)
		end
	end
end
function add_3repair_item_outfit()
	sak.create_items_actor("repair_item_outfit",3)
end
function add_3repair_item_weapon()
	sak.create_items_actor("repair_item_weapon",3)
end
function add_repair_item_outfit()
	sak.create_items_actor("repair_item_outfit",1)
end
function add_repair_item_weapon()
	sak.create_items_actor("repair_item_weapon",1)
end
function add_medkit(first_speaker, second_speaker)
     dialogs.relocate_item_section(second_speaker, "medkit", "in")
     dialogs.relocate_item_section(second_speaker, "snotvornoe_tele", "in")
end 
function set_community(actor, npc)
	db.actor:set_character_community("stranger", 0, 0)
end
function drink_vodka()
	db.actor:eat(db.actor:object("vodka"))
end
function take_trasure(npc, npc1)
	treasure_manager.get_treasure_manager():dialog(npc)
end
function have_trasure(first_speaker, second_speaker)
	local tres
	if amk.load_variable("option_treasure", 0) == 2 then 
	  tres = 80
	else 
      tres = 50
	end
	local ran=math_random(100)
	if ran > tres then db.actor:give_info_portion("have_sak_treasure")
	else db.actor:give_info_portion("havent_sak_treasure")
	end
end
function zombie_checkup()
	if db.actor ~= nil then
		if math_random() > 0.7 	and not inventory.on_belt("af_serpantin") then
		local a=math_random()
		local h = hit()
		h.draftsman = db.actor
		h.direction = vector():set(0,0,0)
		h:bone("bip01_spine") -- чтобv учитvвалась броня
		h.type = hit.telepatic
		h.power = 0.3+a/2
		h.impulse = 1.0
		db.actor:hit(h)
		h.type = hit.strike
		db.actor:hit(h)
		h.type = hit.radiation
		db.actor:hit(h)
		level.add_pp_effector("alcohol.ppe", 100, false)
		local rnd=math_random(1,6)
		local snd_obj
			if rnd==1 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_1]])
			elseif rnd==2 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_2]])
			elseif rnd==3 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_3]])
			elseif rnd==4 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_6]])
			elseif rnd==5 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_7]])
			elseif rnd==6 then
			snd_obj = 	xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_8]])
			end
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		end
		archievements.acv_count_event("acv_fzom", 100, "Друг зомби")
	end
end
function add_spot_of_docent(a)
local old_spot=amk.load_variable("spot_of_nps", 0)
	if old_spot~=0 then
		local obj_old = alife():story_object(old_spot)
		if obj_old then
			amk.remove_spot_from_map(obj_old.id,'blue_location')
		end
	end
local obj = alife():story_object(a)
	if obj and IAmAStalker[obj:clsid()] then
	amk.add_spot_on_map(obj.id,'blue_location',obj:name().."_sak")
	old_spot=a
	amk.save_variable("spot_of_nps", old_spot)
	end
end

local levelsIgnoreArts = {
    ["l03u_agr_underground"]    = true,
    ["l04u_labx18"]             = true,
    ["l08u_brainlab"]           = true,
    ["l10u_bunker"]             = true,
    ["l12u_control_monolith"]   = true,
    ["l12u_sarcofag"]           = true,
    ["l12_stancia_2"]           = true,
    ["av_peshera"]              = true,
    ["warlab"]                  = true,
    ["peshera"]                 = true,
    ["jupiter_underground"]     = true,
    ["labx8"]                   = true
}
function add_tail()
if level.name()=="l04_darkvalley" then	
	local obj=alife():story_object(425)
    	if obj and IAmAStalker[obj:clsid()] and obj:alive() then
		if db.actor:has_info("val_bandit_talk") then
			db.actor:set_character_community("stranger", 0, 0)
		end
	else
		db.actor:set_character_community("actor", 0, 0)
	end
else
	db.actor:set_character_community("actor", 0, 0)
end

	-- переделано на поршни - при выбросе снимаем все поршни, при спавне артов на локе выдаем
	if not levelsIgnoreArts[level.name()] and not has_alife_info("testsak_"..level.name()) then
		amk_anoms.generate_arts()
		db.actor:give_info_portion("testsak_"..level.name())
	end

--[[ старый код
    local levelName = level.name()
local testobj=0
    local sim = alife()
    local obj
    for a = 1, 65534 do
        obj = sim:object(a)
    	if obj and string_find(obj:name(),"testsak_"..levelName) then
		--dbglog("Vot on: "..obj:name())
		testobj=1
            break
		end
	end
	if not levelsIgnoreArts[level.name()] then
		if testobj==0 then
		amk_anoms.generate_arts()
		end
	end
]]
	if (level.name()=="l05_bar" or level.name()=="zaton") and not has_alife_info("bar_random") and not has_alife_info("bar_smile") and not has_alife_info("bar_rock") and not has_alife_info("bar_rockn") and not has_alife_info("bar_modern") and not has_alife_info("bar_retro") then
		db.actor:give_info_portion("bar_random")
	end
	if level.name()=="l01_escape" then
		db.actor:give_info_portion("sidor_music")
	end
end
function off_testobj()
	-- переделано на поршни - при выбросе снимаем все поршни, при спавне артов на локе выдаем
	db.actor:disable_info_portion("testsak_l01_escape")
	db.actor:disable_info_portion("testsak_l02_garbage")
	db.actor:disable_info_portion("testsak_l03_agroprom")
	db.actor:disable_info_portion("testsak_l04_darkvalley")
	db.actor:disable_info_portion("testsak_l05_bar")
	db.actor:disable_info_portion("testsak_l06_rostok")
	db.actor:disable_info_portion("testsak_l07_military")
	db.actor:disable_info_portion("testsak_l08_yantar")
	db.actor:disable_info_portion("testsak_l10_radar")
	db.actor:disable_info_portion("testsak_l11_pripyat")
	db.actor:disable_info_portion("testsak_l12_stancia")
	db.actor:disable_info_portion("testsak_atp_for_test22")
	db.actor:disable_info_portion("testsak_puzir")
	db.actor:disable_info_portion("testsak_aver")
	db.actor:disable_info_portion("testsak_marsh")
	db.actor:disable_info_portion("testsak_limansk")
	db.actor:disable_info_portion("testsak_dead_city")
	db.actor:disable_info_portion("testsak_generators")
	db.actor:disable_info_portion("testsak_hospital")
	db.actor:disable_info_portion("testsak_lost_village")
	db.actor:disable_info_portion("testsak_red_forest")
	db.actor:disable_info_portion("testsak_zaton")
	db.actor:disable_info_portion("testsak_jupiter")
	db.actor:disable_info_portion("testsak_pripyat")

--[[ старый код
	local obj
	for a=1,65534,1 do
	obj=alife():object(a)
		if obj and string_find(obj:name(),"testsak_") then
		alife():release(obj,true)
		end
	end
]]
end
function add_borov_treasure()
	treasure_manager.get_treasure_manager():give_treasure("mil_borov_secret")
end
function add_krysyk_treasure()
	treasure_manager.get_treasure_manager():give_treasure("agr_krysyk_secret")
end
function add_krysyk_pda()
	treasure_manager.get_treasure_manager():give_treasure("val_krysyk_secret")
end
-- Продолжение Крысюк - Жила:
function krysyk_enemy(first_speaker, second_speaker)
	first_speaker:set_relation(game_object.enemy, second_speaker)
	db.actor:give_info_portion("bandit_krisyk_finish")
	db.actor:give_info_portion("bandit_krisyk_enemy")
end
function krysyk_umer()
	if has_alife_info("bandit_krisyk_finish") then 
		db.actor:give_info_portion("bandit_krisyk_finish2")
	else
		db.actor:give_info_portion("bandit_krisyk_umer2")
	end
end
--
function dbglog(fmt,...)
  local msg = string_format(fmt, ...)
  local msg_no_ws = string_gsub(msg, "%s", "___")
  get_console():execute("dbg:" .. msg_no_ws)
end
-----------------------------------------------------------------------------------------------------------
