-----------------------------------------------------------------------
--- ogse_critical_hit.script                                       
--- Модуль постэффектов критических попаданий
--- KamikaZze (c) OGS Evolution Team                                      
--- version 1.3 (22/05/2014)                                             
-----------------------------------------------------------------------
function attach( sm )
  sm:subscribe({ signal = "on_hit", fun = this.check_critical })
end
auto_attach = true

local enabled = sys_ini:r_s32("options","oh_shit_im_hit")
local debug_flag = false
local hearthbeat = xr_sound.get_safe_sound_object([[affects\heartbeat]])
local breath_cold = xr_sound.get_safe_sound_object([[actor\breath_cold]])
-----------------------------------------------------------------------
function check_critical(obj, amount, local_direction, who, bone_index)
  local binder = obj:binded_object()
  if not binder.last_hit_data then return end
  local hit_type = binder.last_hit_data.hit_type
  ASSERT( hit_type, "hit_type not found" )
  if not ( hit_type == hit.fire_wound or hit_type == hit.explosion ) then
    return
  end

--[[
	if ogse_car_control.current_car and ogse_car_control.in_btr then
		return
	end
]]
	
	if amount > 0.02 and xr_combat_companion.current_companion then
		local companion = level.object_by_id(xr_combat_companion.current_companion)
		if companion then
			xr_combat_companion.hit_callback(companion, who, amount)
		end
	end
	if enabled == 0 then
		return
	end
	if debug_flag then
		log1("ACTOR HIT "..tostring(amount).." in "..tostring(bone_index))
	end
	if amount > 0.05 and bone_index and bone_index > 0 and db.actor:alive() then
	
		local str = " "
	
		if bone_index < 5 then
			str = " попадание в левую ногу "
			level.add_cam_effector("camera_effects\\hit_back_left.anm", 100, false, "")
		elseif (bone_index >= 5 and bone_index < 9) then
			str = " попадание в правую ногу "
			level.add_cam_effector("camera_effects\\hit_back_right.anm", 100, false, "")
		elseif (bone_index >= 9 and bone_index < 11) then
			str = " попадание в туловище "
			level.add_cam_effector("camera_effects\\hit_front.anm", 100, false, "")
		elseif (bone_index >= 11 and bone_index < 18) then	
			str = " попадание в голову "
			if IsStalker(who) then
				if enabled == 2 then
--					if db.actor.health < 0.3 and not inventory.belt["autodoctor"] then
					if db.actor.health < 0.3 then
						level.add_pp_effector("blink.ppe", 99, false)
						if not hearthbeat:playing() then
							hearthbeat:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
						end
						if not breath_cold:playing() then
							breath_cold:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
						end						
					else
						level.add_pp_effector("blink.ppe", 99, false)
					end
				end
				level.add_cam_effector("camera_effects\\head_shot.anm", 100, false, "")
			else
				level.add_cam_effector("camera_effects\\hit_front.anm", 100, false, "")
			end
		elseif (bone_index >= 18 and bone_index < 31) then	
			str = " попадание в левую руку "
			level.add_cam_effector("camera_effects\\hit_front_left.anm", 100, false, "")
		elseif (bone_index >= 31 and bone_index < 40) then	
			str = " попадание в правую руку "
			level.add_cam_effector("camera_effects\\hit_front_right.anm", 100, false, "")
			local r = -1
			local need_drop = false
			if (bone_index == 33) then
				-- попадание в предплечье
				r = math.random()*100
				need_drop = (r<50)
			end
			if ((bone_index >= 34) and (bone_index <= 38)) then
				-- по кисти или пальцам
				r = math.random()*100
				need_drop = (r<70)
			end
			if need_drop then
				local active_item = db.actor:active_item()
				if active_item and active_item:section()~= "bolt" and active_item:section()~= "wpn_knife" then
					local cond = active_item:condition()
					cond = cond - math.random() * 0.1
					if cond < 0 then cond = 0 end
					active_item:set_condition( cond )
					db.actor:drop_item(active_item)
				end			
			end
		end
		
		str = str..amount

		if debug_flag then
			ogse.send_tip(str)
			log1(str)
		end
		
	end


end
