-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_monster_before_hit", fun = this.on_before_hit })
  sm:subscribe({ signal = "on_spawn", fun = this.on_spawn })
end


local imm_by_clsid = {}


function on_spawn()
  local imm_clsid = get_section_keys_and_values( "dsh.ammo.immunities.clsid" )
  for k, v in pairs( imm_clsid ) do
    local id = clsid[ k ]
    ASSERT( id, "unknown clsid: %s", k )
    local params = parse_names( v )
    local hit_k  = tonumber( table.remove( params, 1 ) )
    local t      = {
      [ "hit_k" ] = hit_k,
      [ "ammo"  ] = {},
    }
    for _, sect in ipairs( params ) do
      t.ammo[ sect ] = true
    end
    imm_by_clsid[ id ] = t
  end
end


function on_before_hit( obj, hit_data, p_s_hit, p_ignore_flags )
  if not hit_data.weapon_id then return end
  local wpn = level.object_by_id( hit_data.weapon_id )
  if not wpn then return end
  local ammo = dsh.get_cur_wpn_ammo( wpn )
  if ammo then
    local this_clsid = get_clsid( obj )
    if this_clsid then
      local by_clsid = imm_by_clsid[ this_clsid ]
      if by_clsid and by_clsid.ammo[ ammo ] then
        write_memory_float(
          hit_data.power * by_clsid.hit_k, p_s_hit, hit_offset.power
        )
      end
    end
  end
end
