-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_drop",         fun = this.remove_outfit })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.remove_outfit })
  sm:subscribe({ signal = "on_item_to_slot", fun = this.use_outfit    })
  sm:subscribe({ signal = "on_update",       fun = this.on_update     })
end


function use_outfit( obj )
  if obj:section() == "nano_suit" then
    subscribe()
  end
end


function remove_outfit( obj )
  if obj:section() == "nano_suit" then
    local outfit = db.actor:get_current_outfit()
    if outfit and outfit:section() == "nano_suit" then
      return
    end
    unsubscribe()
  end
end


local has_nano_outfit = false
function subscribe()
  has_nano_outfit = true
end

function unsubscribe()
  has_nano_outfit = false
end


local update_t
function on_update()
  if update_t and update_t > time_global() then return end
  if has_nano_outfit then
    nano_speed()                -- МОДУЛЬ "СКОРОСТЬ"
    nano_med()                  -- МОДУЛЬ "ЗДОРОВЬЕ"
    nano_rad()                  -- МОДУЛЬ "РАДИАЦИЯ"
    nano_psi()                  -- МОДУЛЬ "ИЗЛУЧЕНИЕ"
  end
  sidor_ammo()                  -- СИДОР ПРИПАСЫ
  update_t = time_global() + 1000
end


--[[
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Intellectual System Suit (ISS) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Итак, что есть:
Проверяем, находится ли нужный модуль в слоте и одет ли на ГГ костюм. Если костюм и модуль в своих слотах - то придет сообщение, что все норм и вызовется функция, активирующая модуль. Если модуль в слоте, а костюм нет - то:
1) Активации модуля не будет.
2) На экран придет сообщение с ошибкой.
Модуль можно носить только с нанокостюмом. Носить просто так или с другим костюмом - не получится. Активация модуля возможна только при наличии соответствующей капсулы в инвентаре. Одновременно можно использовать только один любой модуль.
]]

--[[ Объявим все локальные переменные, используемые в файле ]]

local txt = volazar_tbl_text["text"]() -- массив со всеми юзаемыми текстами

local gg = db.actor
local aa = alife()
local vv = vector()
local nm = news_manager.send_tip
local vt = volazar_tbl_text.tips

local fl = false
local fl_1 = false
local bSend_1 = nil -- переменная, хранящая факт выдачи того или иного сообщения
local bSend_2 = nil
local bSend_3 = nil
local bSend_4 = nil

--[[
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #1. Скорость.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
При активации модуля, нанокостюм автоматически, при понижении порога сил до 40%, вводит в кровь наноботы. Наличие капсулы с наноботами в инвентаре - обязательно.
]]

function nano_speed()
local gg = db.actor
local nano_suit = gg:get_current_outfit()
local nano = inventory.on_belt( "nano_speed" )
    if nano then -- Находится ли нужный модуль в 1 слоте (пистолеты).
        if nano_suit and nano_suit:section() == "nano_suit" then  -- Надет ли на ГГ костюм.
	      nano_speed_1() -- Какой молодец! И модуль нацепил и костюм не забыл одеть.
            if bSend_1 ~= true then
			  vt(txt.a.msg_vse_ok_1, "nano", 20000)
              bSend_1 = true
              bSend_2 = false
              bSend_3 = false
              bSend_4 = false
            end
        elseif bSend_1 ~= false then
              vt(txt.a.msg_vse_ne_ok_1, "nano", 20000) -- А костюм где? Дубина!
              bSend_1 = false
        end
    end
end

function nano_speed_1()
local gg = db.actor
if gg.power > 0.3 then 
fl = false		fl_1 = false
return 
end
if not fl then
vt(txt.a.msg_sp, "nano", 10000)
fl = true
end
fl = true
local speed = inventory.on_belt_obj( "nanobot_pow" )
if speed then speed = speed[ 1 ] end
if speed and speed:condition() > 0.02 then
  dsh.set_condition( speed, speed:condition() - 0.02 )
  gg.power = 1.0
fl = false		fl_1 = false
return
elseif not fl_1 then
vt(txt.a.msg_vse_ne_ok_2, "nano", 20000) -- Нет капсулы? Гуляй!
fl_1 = true
end
end

--[[
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #2. Здоровье.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
При активации модуля, нанокостюм автоматически, при понижении порога здоровья до 40%, вводит в кровь наноботы. Наличие капсулы с наноботами в инвентаре - обязательно.
]]

function nano_med()
local gg = db.actor
local nano_suit = gg:get_current_outfit()
local nano = inventory.on_belt( "nano_med" )
    if nano then
        if nano_suit and nano_suit:section() == "nano_suit" then  -- Надет ли на ГГ костюм.
	      nano_med_1() -- Какой молодец! И модуль нацепил и костюм не забыл одеть.
            if bSend_2 ~= true then
			  vt(txt.a.msg_vse_ok_2, "nano", 20000)
              bSend_1 = false
              bSend_2 = true
              bSend_3 = false
              bSend_4 = false
            end
        elseif bSend_2 ~= false then
              vt(txt.a.msg_vse_ne_ok_1, "nano", 20000) -- А костюм где? Дубина!
              bSend_2 = false
        end
    end
end

function nano_med_1()
local gg = db.actor
if gg.health > 0.3 then 
fl = false		fl_1 = false
return 
end
if not fl then
vt(txt.a.msg_med, "nano", 10000)
end	
fl = true
local med = inventory.on_belt_obj( "nanobot_med" )
if med then med = med[ 1 ] end
if med and med:condition() > 0.02 then
  dsh.set_condition( med, med:condition() - 0.02 )
  gg.health = 1.0
fl = false		fl_1 = false
return
elseif not fl_1 then
vt(txt.a.msg_vse_ne_ok_2, "nano", 20000)
fl_1 = true
 end
end

--[[
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #3. Радиация.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
При активации модуля, нанокостюм автоматически, при превышении порога радиации в 50%, вводит в кровь наноботы. Наличие капсулы с наноботами в инвентаре - обязательно.
]]

function nano_rad()
local gg = db.actor
local nano_suit = gg:get_current_outfit()
local nano = inventory.on_belt( "nano_rad" )
    if nano then
        if nano_suit and nano_suit:section() == "nano_suit" then  -- Надет ли на ГГ костюм.
	      nano_rad_1() -- Какой молодец! И модуль нацепил и костюм не забыл одеть.
            if bSend_3 ~= true then
              vt(txt.a.msg_vse_ok_3, "nano", 20000)
              bSend_1 = false
              bSend_2 = false
              bSend_3 = true
              bSend_4 = false
            end
        elseif bSend_3 ~= false then
              vt(txt.a.msg_vse_ne_ok_1, "nano", 20000) -- А костюм где? Дубина!
              bSend_3 = false
        end
    end
end

function nano_rad_1()
local gg = db.actor
if gg.radiation < 0.6 then 
fl = false		fl_1 = false
return 
end
if not fl then
vt(txt.a.msg_rad, "nano", 10000)
end	
fl = true
local radn = inventory.on_belt_obj( "nanobot_rad" )
if radn then radn = radn[ 1 ] end
if radn and radn:condition() > 0.02 then
  dsh.set_condition( radn, radn:condition() - 0.02 )
  gg.radiation = -1.0
fl = false		fl_1 = false
return
elseif not fl_1 then
vt(txt.a.msg_vse_ne_ok_2, "nano", 20000)
fl_1 = true
 end
end

--[[
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #4. Излучение.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
При активации модуля, нанокостюм автоматически, при повышении уровня пси излучения в 50%, вводит наноботы в кровь. Наличие капсулы с наноботами в инвентаре - обязательно.
]]

function nano_psi()
local gg = db.actor
local nano_suit = gg:get_current_outfit()
local nano = inventory.on_belt( "nano_psi" )
    if nano then
        if nano_suit and nano_suit:section() == "nano_suit" then  -- Надет ли на ГГ костюм.
	      nano_psi_1() -- Какой молодец! И модуль нацепил и костюм не забыл одеть.
            if bSend_4 ~= true then
              vt(txt.a.msg_vse_ok_4, "nano", 20000)
              bSend_1 = false
              bSend_2 = false
              bSend_3 = false
              bSend_4 = true
            end
        elseif bSend_4 ~= false then
              vt(txt.a.msg_vse_ne_ok_1, "nano", 20000) -- А костюм где? Дубина!
              bSend_4 = false
        end
    end
end

function nano_psi_1()
local gg = db.actor
if gg.psy_health > 0.4 then
fl = false		fl_1 = false
return 
end
if not fl then
vt(txt.a.msg_psi, "nano", 10000)
end	
fl = true
local psi = inventory.on_belt_obj( "nanobot_psi" )
if psi then psi = psi[ 1 ] end
if psi and psi:condition() > 0.02 then
  dsh.set_condition( psi, psi:condition() - 0.02 )
  gg.psy_health = 1.0
fl = false		fl_1 = false
return
elseif not fl_1 then
vt(txt.a.msg_vse_ne_ok_2, "nano", 20000)
fl_1 = true
 end
end

--[[ Остальное... ]]

-- Спавним НПС
function spawn_volazar()        
local obj = volazar_spawn_other.spawn_other(20)
	snp.set_stalker_story_id(obj,19934)
    if obj then
      vt(txt.c.vol_1, "err", 30000)
	end
end

-- Удаляем и спавним нового
function spawn_volazar_new()
	local obj = snp.object_by_section_offline("volazar")
    if obj then
	  alife():release(obj, true)
	end
	
	obj = volazar_spawn_other.spawn_other(21)
	snp.set_stalker_story_id(obj,19935)
end

-- Подсказки

-- Варлаб
function pod_war_1()
    vt(txt.b.war_1, "vol", 30000)
end

function pod_war_2()
    vt(txt.b.war_2, "vol", 30000)
end

function pod_war_3()
    vt(txt.b.war_3, "vol", 30000)
end

function pod_war_4()
    vt(txt.b.war_4, "vol", 30000)
end

function pod_war_5()
    vt(txt.b.war_5, "vol", 30000)
end

function pod_war_6()
    vt(txt.b.war_6, "vol", 30000)
end

function pod_war_7()
    vt(txt.b.war_7, "vol", 30000)
end

function pod_war_8()
    vt(txt.b.war_8, "vol", 30000)
end

function pod_war_9()
    vt(txt.b.war_9, "vol", 30000)
end

function pod_war_10()
    vt(txt.b.war_10, "vol", 30000)
end

function pod_war_11()
    vt(txt.b.war_11, "vol", 30000)
end

function pod_war_12()
    vt(txt.b.war_12, "vol", 30000)
end

function pod_war_13()
    vt(txt.b.war_13, "vol", 30000)
end

function pod_war_14()
    vt(txt.b.war_14, "vol", 30000)
end

function pod_war_15()
    vt(txt.b.war_15, "vol", 30000)
end

-- Х-16
function pod_x16_1()
    vt(txt.e.x16_1, "vol", 30000)
end

function pod_x16_2()
    vt(txt.e.x16_2, "vol", 30000)
end

function pod_x16_3()
    vt(txt.e.x16_3, "vol", 30000)
end

function pod_x16_4()
    vt(txt.e.x16_4, "vol", 30000)
end

function pod_x16_5()
    vt(txt.e.x16_5, "vol", 30000)
end

function pod_x16_6()
    vt(txt.e.x16_6, "vol", 30000)
end

function pod_x16_7()
    vt(txt.e.x16_7, "vol", 30000)
end

-- ЧАЭС 2
function pod_chs_1()
    vt(txt.f.chs_1, nil, 30000)
end

function pod_chs_2()
    vt(txt.f.chs_2, nil, 30000)
end

function pod_chs_3()
    vt(txt.f.chs_3, nil, 30000)
end

function pod_chs_4()
    vt(txt.f.chs_4, nil, 30000)
end

function pod_chs_5()
    vt(txt.f.chs_5, nil, 30000)
end

function pod_chs_6()
    vt(txt.f.chs_6, nil, 30000)
end

function pod_chs_7()
    vt(txt.f.chs_7, nil, 30000)
end

function pod_chs_8()
    vt(txt.f.chs_8, nil, 30000)
end

function pod_chs_9()
    vt(txt.f.chs_9, nil, 30000)
end

function pod_chs_10()
    vt(txt.f.chs_10, nil, 30000)
end

function pod_chs_11()
    vt(txt.f.chs_11, nil, 30000)
end

function pod_chs_12()
    vt(txt.f.chs_12, nil, 30000)
end

function pod_chs_13()
    vt(txt.f.chs_13, nil, 30000)
end

function pod_chs_14()
    vt(txt.f.chs_14, nil, 30000)
end

function pod_chs_15()
    vt(txt.f.chs_15, nil, 30000)
end

function pod_chs_16()
    vt(txt.f.chs_16, nil, 30000)
end

function pod_chs_17()
    vt(txt.f.chs_17, nil, 30000)
end

function pod_chs_18()
    vt(txt.f.chs_18, nil, 30000)
end

function pod_chs_19()
    vt(txt.f.chs_19, nil, 30000)
end

function pod_chs_20()
    vt(txt.f.chs_20, nil, 30000)
end

function pod_chs_21()
    vt(txt.f.chs_21, nil, 30000)
end

function pod_chs_22()
    vt(txt.f.chs_22, nil, 30000)
end

function pod_chs_23()
    vt(txt.f.chs_23, nil, 30000)
end

function pod_chs_24()
    vt(txt.f.chs_24, nil, 30000)
end

function pod_chs_25()
    vt(txt.f.chs_25, nil, 30000)
end

function pod_chs_26()
    vt(txt.f.chs_26, nil, 30000)
end

-- ЧАЭС
function pod_chs1_1()
    vt(txt.g.chs1_1, nil, 30000)
end

function pod_chs1_2()
    vt(txt.g.chs1_2, nil, 30000)
end

function pod_chs1_3()
    vt(txt.g.chs1_3, nil, 30000)
end

function pod_chs1_4()
    vt(txt.g.chs1_4, nil, 30000)
end

function pod_chs1_5()
    vt(txt.g.chs1_5, nil, 30000)
end

function pod_chs1_6()
    vt(txt.g.chs1_6, nil, 30000)
end

function pod_chs1_7()
    vt(txt.g.chs1_7, nil, 30000)
end

function pod_chs1_8()
    vt(txt.g.chs1_8, nil, 30000)
end

function pod_chs1_9()
    vt(txt.g.chs1_9, nil, 30000)
end

function pod_chs1_10()
    vt(txt.g.chs1_10, nil, 30000)
end

function pod_chs1_11()
    vt(txt.g.chs1_11, nil, 30000)
end

function pod_chs1_12()
    vt(txt.g.chs1_12, nil, 30000)
end

-- Лиманск
function pod_lim_1()
    vt(txt.h.lim_1, nil, 30000)
end

function pod_lim_2()
    vt(txt.h.lim_2, nil, 30000)
end

function pod_lim_3()
    vt(txt.h.lim_3, nil, 30000)
end

function pod_lim_4()
    vt(txt.h.lim_4, nil, 30000)
end

function pod_lim_5()
    vt(txt.h.lim_5, nil, 30000)
end

function pod_lim_6()
    vt(txt.h.lim_6, nil, 30000)
end

function pod_lim_7()
    vt(txt.h.lim_7, nil, 30000)
end

function pod_lim_8()
    vt(txt.h.lim_8, nil, 30000)
end

function pod_lim_9()
    vt(txt.h.lim_9, nil, 30000)
end

function pod_lim_10()
    vt(txt.h.lim_10, nil, 30000)
end

function pod_lim_11()
    vt(txt.h.lim_11, nil, 30000)
end

function pod_lim_12()
    vt(txt.h.lim_12, nil, 30000)
end

function pod_lim_13()
    vt(txt.h.lim_13, nil, 30000)
end

function pod_lim_14()
    vt(txt.h.lim_14, nil, 30000)
end

function pod_lim_15()
    vt(txt.h.lim_15, nil, 30000)
end

function pod_lim_16()
    vt(txt.h.lim_16, nil, 30000)
end

function pod_lim_17()
    vt(txt.h.lim_17, nil, 30000)
end

function pod_lim_18()
    vt(txt.h.lim_18, nil, 30000)
end

function pod_lim_19()
    vt(txt.h.lim_19, nil, 30000)
end

function pod_lim_20()
    vt(txt.h.lim_20, nil, 30000)
end

function pod_lim_21()
    vt(txt.h.lim_21, nil, 30000)
end

function pod_lim_22()
    vt(txt.h.lim_22, nil, 30000)
end

function pod_lim_23()
    vt(txt.h.lim_23, nil, 30000)
end

function pod_lim_24()
    vt(txt.h.lim_24, nil, 30000)
end

function pod_lim_25()
    vt(txt.h.lim_25, nil, 30000)
end

function pod_lim_26()
    vt(txt.h.lim_26, nil, 30000)
end

function pod_lim_27()
    vt(txt.h.lim_27, nil, 30000)
end

-- Путепровод
function pod_put_1()
    vt(txt.i.put_1, nil, 30000)
end

function pod_put_2()
    vt(txt.i.put_2, nil, 30000)
end

function pod_put_3()
    vt(txt.i.put_3, nil, 30000)
end

function pod_put_4()
    vt(txt.i.put_4, nil, 30000)
end

function pod_put_5()
    vt(txt.i.put_5, nil, 30000)
end

function pod_put_6()
    vt(txt.i.put_6, nil, 30000)
end

function pod_put_7()
    vt(txt.i.put_7, nil, 30000)
end

function pod_put_8()
    vt(txt.i.put_8, nil, 30000)
end

function pod_put_9()
    vt(txt.i.put_9, nil, 30000)
end

function pod_put_10()
    vt(txt.i.put_10, nil, 30000)
end

function pod_put_11()
    vt(txt.i.put_11, nil, 30000)
end

function pod_put_12()
    vt(txt.i.put_12, nil, 30000)
end

function pod_put_13()
    vt(txt.i.put_13, nil, 30000)
end

function pod_put_14()
    vt(txt.i.put_14, nil, 30000)
end

function pod_put_15()
    vt(txt.i.put_15, nil, 30000)
end

function pod_put_16()
    vt(txt.i.put_16, nil, 30000)
end

function pod_put_17()
    vt(txt.i.put_17, nil, 30000)
end

function pod_put_18()
    vt(txt.i.put_18, nil, 30000)
end

-- Вост. Припять
function pod_pri_1()
    vt(txt.j.pri_1, nil, 30000)
end

function pod_pri_2()
    vt(txt.j.pri_2, nil, 30000)
end

function pod_pri_3()
    vt(txt.j.pri_3, nil, 30000)
end

function pod_pri_4()
    vt(txt.j.pri_4, nil, 30000)
end

function pod_pri_5()
    vt(txt.j.pri_5, nil, 30000)
end

function pod_pri_6()
    vt(txt.j.pri_6, nil, 30000)
end

function pod_pri_7()
    vt(txt.j.pri_7, nil, 30000)
end

function pod_pri_8()
    vt(txt.j.pri_8, nil, 30000)
end

function pod_pri_9()
    vt(txt.j.pri_9, nil, 30000)
end

function pod_pri_10()
    vt(txt.j.pri_10, nil, 30000)
end

function pod_pri_11()
    vt(txt.j.pri_11, nil, 30000)
end

function pod_pri_12()
    vt(txt.j.pri_12, nil, 30000)
end

function pod_pri_13()
    vt(txt.j.pri_13, nil, 30000)
end

-- Х-8
function pod_x8_1()
    vt(txt.k.x8_1, nil, 30000)
end

function pod_x8_2()
    vt(txt.k.x8_2, nil, 30000)
end

function pod_x8_3()
    vt(txt.k.x8_3, nil, 30000)
end

function pod_x8_4()
    vt(txt.k.x8_4, nil, 30000)
end

function pod_x8_5()
    vt(txt.k.x8_5, nil, 30000)
end

-- МГ
function pod_mg_1()
    vt(txt.l.mg_1, nil, 30000)
end

function pod_mg_2()
    vt(txt.l.mg_2, nil, 30000)
end

function pod_mg_3()
    vt(txt.l.mg_3, nil, 30000)
end

function pod_mg_4()
    vt(txt.l.mg_4, nil, 30000)
end

function pod_mg_5()
    vt(txt.l.mg_5, nil, 30000)
end

-- Затон
function pod_zat_1()
    vt(txt.m.zat_1, nil, 30000)
end

function pod_zat_2()
    vt(txt.m.zat_2, nil, 30000)
end

function pod_zat_3()
    vt(txt.m.zat_3, nil, 30000)
end

function pod_zat_4()
    vt(txt.m.zat_4, nil, 30000)
end

function pod_zat_5()
    vt(txt.m.zat_5, nil, 30000)
end

function pod_zat_6()
    vt(txt.m.zat_6, nil, 30000)
end

function pod_zat_7()
    vt(txt.m.zat_7, nil, 30000)
end

function pod_zat_8()
    vt(txt.m.zat_8, nil, 30000)
end

function pod_zat_9()
    vt(txt.m.zat_9, nil, 30000)
end

-- Юпитер
function pod_jup_1()
    vt(txt.o.jup_1, nil, 30000)
end

function pod_jup_2()
    vt(txt.o.jup_2, nil, 30000)
end

function pod_jup_3()
    vt(txt.o.jup_3, nil, 30000)
end

function pod_jup_4()
    vt(txt.o.jup_4, nil, 30000)
end

function pod_jup_5()
    vt(txt.o.jup_5, nil, 30000)
end

function pod_jup_6()
    vt(txt.o.jup_6, nil, 30000)
end

function pod_jup_7()
    vt(txt.o.jup_7, nil, 30000)
end

function pod_jup_8()
    vt(txt.o.jup_8, nil, 30000)
end

function pod_jup_9()
    vt(txt.o.jup_9, nil, 30000)
end

function pod_jup_10()
    vt(txt.o.jup_10, nil, 30000)
end

function pod_jup_11()
    vt(txt.o.jup_11, nil, 30000)
end

function pod_jup_12()
    vt(txt.o.jup_12, nil, 30000)
end

function pod_jup_13()
    vt(txt.o.jup_13, nil, 30000)
end

function pod_jup_14()
    vt(txt.o.jup_14, nil, 30000)
end

function pod_jup_15()
    vt(txt.o.jup_15, nil, 30000)
end

function pod_jup_16()
    vt(txt.o.jup_16, nil, 30000)
end

function pod_jup_17()
    vt(txt.o.jup_17, nil, 30000)
end

function pod_jup_18()
    vt(txt.o.jup_18, nil, 30000)
end

--[[ Квест с Сидором ]]
local txt_str = { txt.n.esc_3, txt.n.esc_24, txt.n.esc_25, txt.n.esc_26 }
local txt_sid = { txt.n.esc_2, txt.n.esc_22, txt.n.esc_23, txt.n.esc_27 }

function sidor_ammo()
    if has_alife_info("actor_fly") and
	   has_alife_info("sidor_delo_start") and
	   not has_alife_info("sidor_delo_have") and
	   not has_alife_info("sidor_delo_fail") and
	   not db.actor:object("ammo_vog-25_fly")
	then
		local str = txt_str[math.random(#txt_str)]
		local sid = txt_sid[math.random(#txt_sid)]
		news_manager.send_tip(db.actor, str, nil, "str", 15000)
		news_manager.send_tip(db.actor, sid, math.random(4,6), "sid", 15000)
	
		local gg = db.actor
        for i=1, 18 do
          aa:create ("ammo_vog-25_fly", gg:position(), gg:level_vertex_id (),gg:game_vertex_id (), gg:id())
        end
	end
end

function sidor_sms()
    vt(txt.n.esc_1, "sid", 20000)
end

function sidor_start()
	xr_sound.get_safe_sound_object([[characters_voice\volazar\vse_vyshe_vyshe]]):play(db.actor, 15, sound_object.s2d)
	news_manager.send_tip(db.actor, "%c[255,160,160,160]".."СИДОРОВИЧ:".."\\n".."%c[255,255,128,128]Давай, осваивайся пока. Они вот-вот появятся.".."\n", 5, nil, 20000)
	snp.invul_on()
	db.actor:give_info_portion("no_landing")
	db.actor:give_info_portion("vol_info_temp")
end

function sidor_stop()
	xr_sound.get_safe_sound_object([[characters_voice\volazar\vse_vyshe_vyshe]]):stop()
	snp.invul_off()
--	invul_4_seconds()
	db.actor:disable_info_portion("no_autosave")
	db.actor:disable_info_portion("no_landing")
	db.actor:disable_info_portion("vol_info_temp")
end

function item_from_sidor() 
	sak.create_items_actor("anom_egg",1)
	sak.create_items_actor("wpn_rg-6",1)
	sak.create_items_actor("ammo_vog-25_fly",12)
	db.actor:give_info_portion("no_autosave")
end

function sidor_reward() 
	sak.out_item_namber("wpn_rg-6",1)
	sak.out_item_all("ammo_vog-25_fly")
	aem_manager.manage_money(300000, "in")	
end

--[[ Other ]]

function disable_tel()
    db.actor:disable_info_portion("vol_info")
end

function vol_pridurok()
    vt(txt.c.vol_2, "vol", 30000)
end

function vol_eeeehhaa()
    vt(txt.c.vol_3, "vol", 15000)
end

function vol_sms()
    vt(txt.c.vol_4, "err", 30000)
end

function vol_sms_2()
    vt(txt.c.vol_5, nil, 15000)
end

function vol_sms_3()
    vt(txt.c.vol_6, "str", 15000)
end

function vol_sms_4()
    vt(txt.c.vol_7, "str", 15000)
end

function vol_sms_5()
    vt(txt.c.vol_8, nil, 15000)
end

function vol_sms_6()
    vt(txt.c.vol_9, "str", 15000)
end

function vol_sms_7()
    vt(txt.c.vol_10, nil, 20000)
end

function vol_sms_8()
    vt(txt.c.vol_11, "str", 15000)
end

function vol_sms_9()
    vt(txt.c.vol_12, nil, 20000)
end

function vol_sms_10()
    vt(txt.c.vol_13, "str", 15000)
end

function vol_sms_11()
    vt(txt.c.vol_14, "oz", 20000)
end

function vol_sms_12()
    vt(txt.c.vol_15, "oz", 20000)
end

function vol_sms_13()
    vt(txt.c.vol_16, "oz", 20000)
end

function vol_sms_14()
    vt(txt.c.vol_17, "oz", 20000)
end

function vol_sms_15()
    vt(txt.c.vol_18, "str", 20000)
end

function vol_sms_16()
    vt(txt.c.vol_19, "oz", 30000)
end

function vol_sms_17()
    vt(txt.c.vol_20, "str", 20000)
end

function vol_sms_18()
    vt(txt.c.vol_21, "oz", 20000)
end

function vol_sms_19()
    vt(txt.c.vol_22, "oz", 30000)
end

function vol_sms_20()
    vt(txt.c.vol_23, "str", 30000)
end

function vol_sms_21()
    vt(txt.c.vol_24, "oz", 30000)
end

-- Спавним уродцев
function spawn_bloodsucker()
alife():create("vol_bloodsucker_1",vector():set(-91.472,-0.390,-154.582),567519,3722)
alife():create("vol_bloodsucker_2",vector():set(-95.983,-0.389,-152.531),560799,3715)
alife():create("vol_bloodsucker_3",vector():set(-97.633,-0.389,-147.813),558483,3722)
alife():create("vol_bloodsucker_4",vector():set(-96.003,-0.389,-143.610),560812,3722)
alife():create("vol_bloodsucker_5",vector():set(-91.893,-0.389,-141.447),567538,3722)
alife():create("vol_bloodsucker_6",vector():set(-86.648,-0.390,-143.053),575907,3722)
alife():create("vol_bloodsucker_7",vector():set(-84.511,-0.390,-148.139),579365,3722)
alife():create("vol_bloodsucker_8",vector():set(-86.612,-0.390,-152.751),575893,3722)
end

function spawn_snork()
local se_obj = alife():create("vol_snork_1",vector():set(-173.388,0.251,-148.941),422788,3715)
local params = amk.read_monster_params(se_obj)
params.oflags = -5	-- 0xfffffffb
amk.write_monster_params(params,se_obj)
end

function oz_music_good()
local snd_obj = xr_sound.get_safe_sound_object([[characters_voice\volazar\ostanovite_ego]])
snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vv, 1.0)
end

function oz_music_bad()
local snd_obj = xr_sound.get_safe_sound_object([[characters_voice\volazar\unichtozhte_ego]])
snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vv, 1.0)
end

function invul_4_seconds()
	snp.invul_on()
	amk.start_timer("run",4,"snp.invul_off()")
end

function remove_ozersky()
	db.actor:disable_info_portion("ozersky_spawn")
	remove_obj("vol_snork_1")
end

function vol0()
	if has_alife_info("snp_vesker1_done") and has_alife_info("info_chess_dictofon_done") then
		news_manager.send_tip(db.actor, "%c[255,160,160,160]".."ВОЛАЗАР:".."\\n".."%c[255,255,128,128]"..user_name().."! Если тебе все ещё не надоело лазить по Зоне, то у меня есть для тебя очень интересный сюрприз. Ищи мой сюрприз на месте украденного Монолита. Ты уже облазил практически всю Зону, и сможешь без труда догадаться, где это место. Это место, в котором ты ещё не побывал, и, более того, даже ещё к нему не приближался!".."\n", 5, nil, 60000)
		sak.set_mark_on_tajnik("v_inventory_box0",vector():set(157.90061950684,36.504898071289,107.2147064209),59831,2566)
	end
end

-- Удаление любого онлайнового/оффлайнового обьекта
function remove_obj(name)
local obj
    for a=1,65535 do
	  obj = alife():object(a)
		if obj and string.find(obj:name(),name) then
          alife():release(obj, true)
		  return
	  	end
    end
end
