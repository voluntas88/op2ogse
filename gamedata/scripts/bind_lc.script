-- -*- mode: lua; coding: windows-1251-dos -*-
-- Биндер level_changer

objs = {}


function bind( obj )
  obj:bind_object( lc_binder( obj ) )
end


class "lc_binder" ( object_binder )
function lc_binder:__init( obj ) super( obj )
end 


function lc_binder:net_spawn( data )
  if not object_binder.net_spawn( self, data ) then
    return false
  end
  local sobj = alife():object( self.object:id() )
  if sobj then
    self.geom = geom_helpers.get_all_shapes_data( self.object )
    objs[ self.object:id() ] = self.object
  end
  return true
end


function lc_binder:net_destroy()
  objs[ self.object:id() ] = nil
  object_binder.net_destroy( self )
end


function lc_binder:update( delta )
  object_binder.update( self, delta )
  if not self.geom then return end
  local dist = geom_helpers.distance_from_zone_boundary(
    self.geom, db.actor:position()
  )
  dist = math.abs( dist )
  if dist < 5 then
    if not self.sms_sent then
      local pk = xs_netpk.level_changer( alife():object( self.object:id() ) )
      if pk:isOk() then
        local lc = pk:get()
        local lname = alife():level_name(
          game_graph():vertex( lc.dest_game_vertex_id ):level_id()
        )
        db.actor:give_game_news(
          "%c[255,160,160,160]" .. game.translate_string( "st_tip" ) .. "\\n"
          .. "%c[default]Переход " .. game.translate_string( level.name() )
          .. " - "
          .. game.translate_string( lname ) .. ".",
          "ui\\ui_iconsTotal", Frect():set( 913, 752, 83, 47 ), 0, 5000
        )
      end
      self.sms_sent = true
    end
  elseif self.sms_sent then
    self.sms_sent = nil
  end
end
