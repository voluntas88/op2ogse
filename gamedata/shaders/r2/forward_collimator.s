-- common rendering --
function normal_hq		(shader, t_base, t_second, t_detail)
	shader:begin	("forward_model_flat","forward_collimator")
			: fog		(false)
			: blend		(true,blend.srcalpha,blend.invsrcalpha)
			: aref 		(false,0)
			: sorting	(3, true)
			: zb 		(true,true)
	shader:sampler	("s_base")      :texture	(t_base)
	shader:sampler	("s_lmap")      :texture	("sunmask") :f_linear() :wrap()
	shader:sampler	("s_smap_near")  :texture	("$user$smap_depth_near") :f_linear() :clamp()
	shader:sampler	("s_smap_far")  :texture	("$user$smap_depth_far") :f_linear() :clamp()
	shader:sampler	("env_s0")  :texture	("$user$env_s0") :f_linear() :clamp()
	shader:sampler	("env_s1")  :texture	("$user$env_s1") :f_linear() :clamp()
	shader:sampler	("s_sky")  :texture	("$user$rain") :f_linear() :clamp()
	shader:sampler	("s_material")  :texture	("$user$material") :f_linear() :clamp()
end

function normal		(shader, t_base, t_second, t_detail)
	shader:begin	("forward_model_flat","forward_collimator")
			: fog		(false)
			: blend		(true,blend.srcalpha,blend.invsrcalpha)
			: aref 		(false,0)
			: sorting	(3, true)
			: zb 		(true,true)
	shader:sampler	("s_base")      :texture	(t_base)
	shader:sampler	("s_lmap")      :texture	("sunmask") :f_linear() :wrap()
	shader:sampler	("s_smap_near")  :texture	("$user$smap_depth_near") :f_linear() :clamp()
	shader:sampler	("s_smap_far")  :texture	("$user$smap_depth_far") :f_linear() :clamp()
	shader:sampler	("env_s0")  :texture	("$user$env_s0") :f_linear() :clamp()
	shader:sampler	("env_s1")  :texture	("$user$env_s1") :f_linear() :clamp()
	shader:sampler	("s_sky")  :texture	("$user$rain") :f_linear() :clamp()
	shader:sampler	("s_material")  :texture	("$user$material") :f_linear() :clamp()
end

-- shadow map rendering --
function l_point		(shader, t_base, t_second, t_detail)
	shader:begin	("shadow_direct_model","shadow_direct_base")
			: fog		(false)
			: blend		(false,blend.zero,blend.one)
			: aref 		(false,2)
			: sorting	(1, false)
			: zb 		(true,true)
	shader:sampler	("s_base")      :texture	(t_base)
end
